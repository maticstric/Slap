!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/9f494f0/
0	Assets/ParrelSync/ParrelSync/package.json	/^	"keywords": [ "Networking", "Utils", "Editor", "Extensions" ],$/;"	s	array:keywords
0	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
0	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
1	Assets/ParrelSync/ParrelSync/package.json	/^	"keywords": [ "Networking", "Utils", "Editor", "Extensions" ],$/;"	s	array:keywords
1	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
1	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
10	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
10	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
11	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
11	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
12	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
12	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
13	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
13	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
14	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
14	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
15	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
15	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
16	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
17	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
18	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
19	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
2	Assets/ParrelSync/ParrelSync/package.json	/^	"keywords": [ "Networking", "Utils", "Editor", "Extensions" ],$/;"	s	array:keywords
2	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
2	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
20	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
21	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
3	Assets/ParrelSync/ParrelSync/package.json	/^	"keywords": [ "Networking", "Utils", "Editor", "Extensions" ],$/;"	s	array:keywords
3	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
3	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
4	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
4	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
5	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
5	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
6	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
6	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
7	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
7	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
8	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
8	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
9	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{$/;"	o	array:frames
9	ProjectSettings/SceneTemplateSettings.json	/^        {$/;"	o	array:dependencyTypeInfos
A1	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        A1 = 1 << 0,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
A2	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        A2 = 1 << 3,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
A3	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        A3 = 1 << 6,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
ACK_FAST	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int ACK_FAST = 3;$/;"	f	class:kcp2k.Kcp
APIs	Assets/ParrelSync/README.md	/^## APIs$/;"	s
ASK_SEND	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int ASK_SEND = 1;             \/\/ need to send CMD_WASK$/;"	f	class:kcp2k.Kcp
ASK_TELL	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int ASK_TELL = 2;             \/\/ need to send CMD_WINS$/;"	f	class:kcp2k.Kcp
AcceptHandshake	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        void AcceptHandshake(Stream stream, string msg)$/;"	m	class:Mirror.SimpleWeb.ServerHandshake	file:
AckItem	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal struct AckItem$/;"	s	class:kcp2k.Kcp
AckPush	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        void AckPush(uint sn, uint ts)$/;"	m	class:kcp2k.Kcp	file:
ActivateHostScene	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void ActivateHostScene()$/;"	m	class:Mirror.NetworkServer
Active	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        public bool Active { get; private set; }$/;"	p	class:Mirror.SimpleWeb.SimpleWebServer
Active	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public bool Active => listenerThread != null && listenerThread.IsAlive;$/;"	f	class:Telepathy.Server
ActiveDiscoveryInterval	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        float ActiveDiscoveryInterval = 3;$/;"	f	class:Mirror.Discovery.NetworkDiscoveryBase	file:
ActiveScreen	Assets/Project/Scripts/UI/ScreenManager.cs	/^    public GameObject ActiveScreen;$/;"	f	class:ScreenManager
Add	Assets/Mirror/Components/InterestManagement/SpatialHashing/Grid2D.cs	/^        public void Add(Vector2Int position, T value)$/;"	m	class:Mirror.Grid2D
Add	Assets/Mirror/Runtime/ExponentialMovingAverage.cs	/^        public void Add(double newValue)$/;"	m	class:Mirror.ExponentialMovingAverage
Add	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public void Add(TKey key, TValue value)$/;"	m	class:Mirror.SyncIDictionary
Add	Assets/Mirror/Runtime/SyncList.cs	/^        public void Add(T item)$/;"	m	class:Mirror.SyncList
Add	Assets/Mirror/Runtime/SyncSet.cs	/^        public bool Add(T item)$/;"	m	class:Mirror.SyncSet
Add	Assets/Mirror/Runtime/SyncSet.cs	/^        void ICollection<T>.Add(T item)$/;"	m	class:Mirror.SyncSet	file:
Add Server	Assets/Mirror/Cloud/README.md	/^#### Add Server$/;"	t
AddAllReadyServerConnectionsToObservers	Assets/Mirror/Runtime/NetworkServer.cs	/^        internal static void AddAllReadyServerConnectionsToObservers(NetworkIdentity identity)$/;"	m	class:Mirror.NetworkServer	file:
AddButton	Assets/Mirror/Editor/NetworkManagerEditor.cs	/^        internal void AddButton(ReorderableList list)$/;"	m	class:Mirror.NetworkManagerEditor	file:
AddButtonHandlers	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListManager.cs	/^        void AddButtonHandlers()$/;"	m	class:Mirror.Cloud.Example.ServerListManager	file:
AddConnection	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static bool AddConnection(NetworkConnectionToClient conn)$/;"	m	class:Mirror.NetworkServer
AddDefineSymbols	Assets/Mirror/CompilerSymbols/PreprocessorDefine.cs	/^        public static void AddDefineSymbols()$/;"	m	class:Mirror.PreprocessorDefine
AddForce	Assets/Mirror/Examples/RigidbodyPhysics/Scripts/AddForce.cs	/^    public class AddForce : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.RigidbodyPhysics
AddInvokeParameters	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public static void AddInvokeParameters(ICollection<ParameterDefinition> collection)$/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor
AddMode	Assets/Mirror/Runtime/NetworkLoop.cs	/^        internal enum AddMode { Beginning, End }$/;"	g	class:Mirror.NetworkLoop
AddObserver	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void AddObserver(NetworkConnection conn)$/;"	m	class:Mirror.NetworkIdentity	file:
AddOperation	Assets/Mirror/Runtime/SyncDictionary.cs	/^        void AddOperation(Operation op, TKey key, TValue item)$/;"	m	class:Mirror.SyncIDictionary	file:
AddOperation	Assets/Mirror/Runtime/SyncList.cs	/^        void AddOperation(Operation op, int itemIndex, T oldItem, T newItem)$/;"	m	class:Mirror.SyncList	file:
AddOperation	Assets/Mirror/Runtime/SyncSet.cs	/^        void AddOperation(Operation op, T item)$/;"	m	class:Mirror.SyncSet	file:
AddPlayer	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static bool AddPlayer()$/;"	m	class:Mirror.NetworkClient
AddPlayerForConnection	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static bool AddPlayerForConnection(NetworkConnection conn, GameObject player)$/;"	m	class:Mirror.NetworkServer
AddPlayerForConnection	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static bool AddPlayerForConnection(NetworkConnection conn, GameObject player, Gui/;"	m	class:Mirror.NetworkServer
AddPlayerMessage	Assets/Mirror/Runtime/Messages.cs	/^    public struct AddPlayerMessage : NetworkMessage {}$/;"	s	namespace:Mirror
AddPlayersToMatchController	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        IEnumerator AddPlayersToMatchController()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController	file:
AddRange	Assets/Mirror/Runtime/SyncList.cs	/^        public void AddRange(IEnumerable<T> range)$/;"	m	class:Mirror.SyncList
AddSenderConnection	Assets/Mirror/Editor/Weaver/Processors/CommandProcessor.cs	/^        static void AddSenderConnection(MethodDefinition method, ILProcessor worker)$/;"	m	class:Mirror.Weaver.CommandProcessor	file:
AddServer	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^        void AddServer(ServerJson server);$/;"	m	interface:Mirror.Cloud.ListServerService.IListServerServerApi
AddServer	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        public void AddServer(ServerJson server)$/;"	m	class:Mirror.Cloud.ListServerService.ListServerServerApi
AddServer	Assets/Mirror/Examples/Cloud/GUI/Scripts/ApiUpdater.cs	/^        void AddServer(int playerCount)$/;"	m	class:Mirror.Cloud.Example.ApiUpdater	file:
AddServerCallbacks	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        void AddServerCallbacks()$/;"	m	class:Mirror.MultiplexTransport	file:
AddToObserving	Assets/Mirror/Runtime/NetworkConnection.cs	/^        internal void AddToObserving(NetworkIdentity netIdentity)$/;"	m	class:Mirror.NetworkConnection	file:
AddToPlayerLoop	Assets/Mirror/Runtime/NetworkLoop.cs	/^        internal static bool AddToPlayerLoop(PlayerLoopSystem.UpdateFunction function, Type owne/;"	m	class:Mirror.NetworkLoop	file:
AddTransportHandlers	Assets/Mirror/Runtime/NetworkClient.cs	/^        static void AddTransportHandlers()$/;"	m	class:Mirror.NetworkClient	file:
AddTransportHandlers	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void AddTransportHandlers()$/;"	m	class:Mirror.NetworkServer	file:
Additive Scenes Example	Assets/Mirror/Examples/AdditiveScenes/README.md	/^# Additive Scenes Example$/;"	c
AdditiveNetworkManager	Assets/Mirror/Examples/AdditiveScenes/Scripts/AdditiveNetworkManager.cs	/^    public class AdditiveNetworkManager : NetworkManager$/;"	c	namespace:Mirror.Examples.Additive
AdvertiseServer	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        public void AdvertiseServer()$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase
AfterConnectionDisposed	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/WebSocketClientStandAlone.cs	/^        void AfterConnectionDisposed(Connection conn)$/;"	m	class:Mirror.SimpleWeb.WebSocketClientStandAlone	file:
AfterConnectionDisposed	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        void AfterConnectionDisposed(Connection conn)$/;"	m	class:Mirror.SimpleWeb.WebSocketServer	file:
AllPlayersReady	Assets/Project/Scripts/UI/LobbyManager.cs	/^    public bool AllPlayersReady() {$/;"	m	class:LobbyManager
AlsoCheckUnityLockFileStaPref	Assets/ParrelSync/ParrelSync/Editor/Preferences.cs	/^        public static BoolPreference AlsoCheckUnityLockFileStaPref = new BoolPreference("ParrelS/;"	f	class:ParrelSync.Preferences
AnySyncObjectDirty	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        bool AnySyncObjectDirty()$/;"	m	class:Mirror.NetworkBehaviour	file:
Api Key	Assets/Mirror/Examples/Cloud/PongWithListServer/README.md	/^## Api Key$/;"	s
Api Key	Assets/Mirror/Examples/Cloud/TanksWithListServer/README.md	/^## Api Key$/;"	s
ApiAddress	Assets/Mirror/Cloud/ApiConnector.cs	/^        [SerializeField] string ApiAddress = "";$/;"	f	class:Mirror.Cloud.ApiConnector	file:
ApiConnector	Assets/Mirror/Cloud/ApiConnector.cs	/^    public class ApiConnector : MonoBehaviour, IApiConnector, ICoroutineRunner$/;"	c	namespace:Mirror.Cloud
ApiKey	Assets/Mirror/Cloud/ApiConnector.cs	/^        [SerializeField] string ApiKey = "";$/;"	f	class:Mirror.Cloud.ApiConnector	file:
ApiUpdater	Assets/Mirror/Examples/Cloud/GUI/Scripts/ApiUpdater.cs	/^    public class ApiUpdater : MonoBehaviour$/;"	c	namespace:Mirror.Cloud.Example
AppendAndScroll	Assets/Mirror/Examples/Chat/Scripts/ChatWindow.cs	/^        IEnumerator AppendAndScroll(string message)$/;"	m	class:Mirror.Examples.Chat.ChatWindow	file:
AppendGuid	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        static void AppendGuid(byte[] keyBuffer)$/;"	m	class:Mirror.SimpleWeb.ServerHandshake	file:
AppendMessage	Assets/Mirror/Examples/Chat/Scripts/ChatWindow.cs	/^        internal void AppendMessage(string message)$/;"	m	class:Mirror.Examples.Chat.ChatWindow	file:
ApplyPositionRotationScale	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        void ApplyPositionRotationScale(Vector3 position, Quaternion rotation, Vector3 scale)$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
ApplyPositionRotationScale	Assets/Mirror/Components/NetworkTransformBase.cs	/^        void ApplyPositionRotationScale(Vector3 position, Quaternion rotation, Vector3 scale)$/;"	m	class:Mirror.NetworkTransformBase	file:
ApplySpawnPayload	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static void ApplySpawnPayload(NetworkIdentity identity, SpawnMessage message)$/;"	m	class:Mirror.NetworkClient	file:
ApplyTo	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/TcpConfig.cs	/^        public void ApplyTo(TcpClient client)$/;"	m	struct:Mirror.SimpleWeb.TcpConfig
AreEqual	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        public bool AreEqual(Type invokeClass, MirrorInvokeType invokeType, CmdDelegate invokeFu/;"	m	class:Mirror.RemoteCalls.Invoker
ArgumentFileName	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public const string ArgumentFileName = ".parrelsyncarg";$/;"	f	class:ParrelSync.ClonesManager
ArrayBuffer	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public ArrayBuffer(IBufferOwner owner, int size)$/;"	m	class:Mirror.SimpleWeb.ArrayBuffer
ArrayBuffer	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^    public sealed class ArrayBuffer : IDisposable$/;"	c	namespace:Mirror.SimpleWeb
ArraySegmentConstructorReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference ArraySegmentConstructorReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
AskFeedbackDialog	Assets/ParrelSync/ParrelSync/Editor/NonCore/AskFeedbackDialog.cs	/^        static AskFeedbackDialog()$/;"	m	class:ParrelSync.NonCore.AskFeedbackDialog	file:
AskFeedbackDialog	Assets/ParrelSync/ParrelSync/Editor/NonCore/AskFeedbackDialog.cs	/^    public class AskFeedbackDialog$/;"	c	namespace:ParrelSync.NonCore
AssetModPref	Assets/ParrelSync/ParrelSync/Editor/Preferences.cs	/^        public static BoolPreference AssetModPref = new BoolPreference("ParrelSync_DisableClones/;"	f	class:ParrelSync.Preferences
AssignAssetID	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        void AssignAssetID(string path) => m_AssetId = AssetDatabase.AssetPathToGUID(path);$/;"	m	class:Mirror.NetworkIdentity	file:
AssignClientAuthority	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public bool AssignClientAuthority(NetworkConnection conn)$/;"	m	class:Mirror.NetworkIdentity
AssignSceneID	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        void AssignSceneID()$/;"	m	class:Mirror.NetworkIdentity	file:
AuthRequestMessage	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^        public struct AuthRequestMessage : NetworkMessage$/;"	s	class:Mirror.Authenticators.BasicAuthenticator
AuthResponseMessage	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^        public struct AuthResponseMessage : NetworkMessage$/;"	s	class:Mirror.Authenticators.BasicAuthenticator
Authenticated	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^    enum KcpState { Connected, Authenticated, Disconnected }$/;"	e	enum:kcp2k.KcpState	file:
Available	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override bool Available()$/;"	m	class:Mirror.FallbackTransport
Available	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override bool Available() =>$/;"	m	class:kcp2k.KcpTransport
Available	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override bool Available() => wrap.Available();$/;"	m	class:Mirror.LatencySimulation
Available	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^        public override bool Available() => inner.Available();$/;"	m	class:Mirror.MiddlewareTransport
Available	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override bool Available()$/;"	m	class:Mirror.MultiplexTransport
Available	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override bool Available()$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
Available	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override bool Available()$/;"	m	class:Mirror.TelepathyTransport
Available	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public abstract bool Available();$/;"	m	class:Mirror.Transport
Awake	Assets/Mirror/Authenticators/TimeoutAuthenticator.cs	/^        public void Awake()$/;"	m	class:Mirror.Authenticators.TimeoutAuthenticator
Awake	Assets/Mirror/Cloud/ApiConnector.cs	/^        void Awake()$/;"	m	class:Mirror.Cloud.ApiConnector	file:
Awake	Assets/Mirror/Components/GUIConsole.cs	/^        void Awake()$/;"	m	class:Mirror.GUIConsole	file:
Awake	Assets/Mirror/Components/NetworkAnimator.cs	/^        void Awake()$/;"	m	class:Mirror.NetworkAnimator	file:
Awake	Assets/Mirror/Components/NetworkSceneChecker.cs	/^        void Awake()$/;"	m	class:Mirror.NetworkSceneChecker	file:
Awake	Assets/Mirror/Examples/Chat/Scripts/ChatWindow.cs	/^        public void Awake()$/;"	m	class:Mirror.Examples.Chat.ChatWindow
Awake	Assets/Mirror/Examples/Cloud/GUI/Scripts/ApiUpdater.cs	/^        void Awake()$/;"	m	class:Mirror.Cloud.Example.ApiUpdater	file:
Awake	Assets/Mirror/Examples/Cloud/GUI/Scripts/InstantiateNetworkManager.cs	/^        void Awake()$/;"	m	class:Mirror.Cloud.Examples.InstantiateNetworkManager	file:
Awake	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PhysicsSimulator.cs	/^        void Awake()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.PhysicsSimulator	file:
Awake	Assets/Mirror/Examples/MultipleMatches/Scripts/CellGUI.cs	/^        public void Awake()$/;"	m	class:Mirror.Examples.MultipleMatch.CellGUI
Awake	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        void Awake()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController	file:
Awake	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchGUI.cs	/^        public void Awake()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchGUI
Awake	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchNetworkManager.cs	/^        public override void Awake()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchNetworkManager
Awake	Assets/Mirror/Runtime/InterestManagement.cs	/^        void Awake()$/;"	m	class:Mirror.InterestManagement	file:
Awake	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        void Awake()$/;"	m	class:Mirror.NetworkIdentity	file:
Awake	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void Awake()$/;"	m	class:Mirror.NetworkManager
Awake	Assets/Mirror/Runtime/NetworkManagerHUD.cs	/^        void Awake()$/;"	m	class:Mirror.NetworkManagerHUD	file:
Awake	Assets/Mirror/Runtime/NetworkStartPosition.cs	/^        public void Awake()$/;"	m	class:Mirror.NetworkStartPosition
Awake	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public void Awake()$/;"	m	class:Mirror.FallbackTransport
Awake	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        void Awake()$/;"	m	class:kcp2k.KcpTransport	file:
Awake	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public void Awake()$/;"	m	class:Mirror.LatencySimulation
Awake	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public void Awake()$/;"	m	class:Mirror.MultiplexTransport
Awake	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        void Awake()$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport	file:
Awake	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        void Awake()$/;"	m	class:Mirror.TelepathyTransport	file:
Awake	Assets/Project/Scripts/GameManager.cs	/^    private void Awake() {$/;"	m	class:GameManager	file:
Awake	Assets/Project/Scripts/Player/PlayerMovement.cs	/^    private void Awake() {$/;"	m	class:PlayerMovement	file:
Awake	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    private void Awake() {$/;"	m	class:LobbyPlayer	file:
Awake	Assets/Project/Scripts/UI/ScreenManager.cs	/^    private void Awake() {$/;"	m	class:ScreenManager	file:
B1	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        B1 = 1 << 1,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
B2	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        B2 = 1 << 4,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
B3	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        B3 = 1 << 7,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
Ball	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/Ball.cs	/^    public class Ball : NetworkBehaviour$/;"	c	namespace:Mirror.Cloud.Examples.Pong
Ball	Assets/Mirror/Examples/Pong/Scripts/Ball.cs	/^    public class Ball : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.Pong
BallManager	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/BallManager.cs	/^    public class BallManager : NetworkBehaviour$/;"	c	namespace:Mirror.Cloud.Examples.Pong
BaseApi	Assets/Mirror/Cloud/Core/BaseApi.cs	/^        protected BaseApi(ICoroutineRunner runner, IRequestCreator requestCreator)$/;"	m	class:Mirror.Cloud.BaseApi
BaseApi	Assets/Mirror/Cloud/Core/BaseApi.cs	/^    public abstract class BaseApi$/;"	c	namespace:Mirror.Cloud
Basic Example	Assets/Mirror/Examples/Basic/README.md	/^# Basic Example$/;"	c
BasicAuthenticator	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^    public class BasicAuthenticator : NetworkAuthenticator$/;"	c	namespace:Mirror.Authenticators
BasicNetManager	Assets/Mirror/Examples/Basic/Scripts/BasicNetManager.cs	/^    public class BasicNetManager : NetworkManager$/;"	c	namespace:Mirror.Examples.Basic
Batch	Assets/Mirror/Runtime/NetworkConnectionToClient.cs	/^        internal class Batch$/;"	c	class:Mirror.NetworkConnectionToClient
BeginAuthentication	Assets/Mirror/Authenticators/TimeoutAuthenticator.cs	/^        IEnumerator BeginAuthentication(NetworkConnection conn)$/;"	m	class:Mirror.Authenticators.TimeoutAuthenticator	file:
Beginning	Assets/Mirror/Runtime/NetworkLoop.cs	/^        internal enum AddMode { Beginning, End }$/;"	e	enum:Mirror.NetworkLoop.AddMode	file:
BenchmarkNetworkManager	Assets/Mirror/Examples/Benchmark/Scripts/BenchmarkNetworkManager.cs	/^    public class BenchmarkNetworkManager : NetworkManager$/;"	c	namespace:Mirror.Examples.Benchmark
BoolPreference	Assets/ParrelSync/ParrelSync/Editor/Preferences.cs	/^        public BoolPreference(string key, bool defaultValue)$/;"	m	class:ParrelSync.BoolPreference
BoolPreference	Assets/ParrelSync/ParrelSync/Editor/Preferences.cs	/^    public class BoolPreference$/;"	c	namespace:ParrelSync
BotRow	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        BotRow = A3 + B3 + C3,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
BroadcastDiscoveryRequest	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        public void BroadcastDiscoveryRequest()$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase
BufferBucket	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public BufferBucket(int arraySize)$/;"	m	class:Mirror.SimpleWeb.BufferBucket
BufferBucket	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^    internal class BufferBucket : IBufferOwner$/;"	c	namespace:Mirror.SimpleWeb
BufferPool	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public BufferPool(int bucketCount, int smallest, int largest)$/;"	m	class:Mirror.SimpleWeb.BufferPool
BufferPool	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^    public class BufferPool$/;"	c	namespace:Mirror.SimpleWeb
BufferToString	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^        public static string BufferToString(byte[] buffer, int offset = 0, int? length = null)$/;"	m	class:Mirror.SimpleWeb.Log
BytePayloadLength	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Constants.cs	/^        public const int BytePayloadLength = 125;$/;"	f	class:Mirror.SimpleWeb.Constants
BytesToIntBigEndian	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Utils.cs	/^        public static int BytesToIntBigEndian(byte[] bytes)$/;"	m	class:Telepathy.Utils
C	Assets/Mirror/Runtime/MessagePacking.cs	/^            where C : NetworkConnection$/;"	s	class:Mirror.MessagePacking
C1	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        C1 = 1 << 2,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
C2	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        C2 = 1 << 5,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
C3	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        C3 = 1 << 8,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
CHANNEL_HEADER_SIZE	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        const int CHANNEL_HEADER_SIZE = 1;$/;"	f	class:kcp2k.KcpConnection	file:
CMD_ACK	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int CMD_ACK  = 82;            \/\/ cmd: ack$/;"	f	class:kcp2k.Kcp
CMD_PUSH	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int CMD_PUSH = 81;            \/\/ cmd: push data$/;"	f	class:kcp2k.Kcp
CMD_WASK	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int CMD_WASK = 83;            \/\/ cmd: window probe (ask)$/;"	f	class:kcp2k.Kcp
CMD_WINS	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int CMD_WINS = 84;            \/\/ cmd: window size (tell)$/;"	f	class:kcp2k.Kcp
CallOnClientEnterRoom	Assets/Mirror/Components/NetworkRoomManager.cs	/^        internal void CallOnClientEnterRoom()$/;"	m	class:Mirror.NetworkRoomManager	file:
CallOnClientExitRoom	Assets/Mirror/Components/NetworkRoomManager.cs	/^        internal void CallOnClientExitRoom()$/;"	m	class:Mirror.NetworkRoomManager	file:
Callback	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public event SyncDictionaryChanged Callback;$/;"	E	class:Mirror.SyncIDictionary
Callback	Assets/Mirror/Runtime/SyncList.cs	/^        public event SyncListChanged Callback;$/;"	E	class:Mirror.SyncList
Callback	Assets/Mirror/Runtime/SyncSet.cs	/^        public event SyncSetChanged Callback;$/;"	E	class:Mirror.SyncSet
CanBeResolved	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static bool CanBeResolved(this TypeReference parent)$/;"	m	class:Mirror.Weaver.Extensions
Cancel	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        Cancel,$/;"	e	enum:Mirror.Examples.MultipleMatch.ServerMatchOperation	file:
Cancelled	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        Cancelled,$/;"	e	enum:Mirror.Examples.MultipleMatch.ClientMatchOperation	file:
CanvasController	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^    public class CanvasController : MonoBehaviour$/;"	c	namespace:Mirror.Examples.MultipleMatch
CellGUI	Assets/Mirror/Examples/MultipleMatches/Scripts/CellGUI.cs	/^    public class CellGUI : MonoBehaviour$/;"	c	namespace:Mirror.Examples.MultipleMatch
CellValue	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^    public enum CellValue : ushort$/;"	g	namespace:Mirror.Examples.MultipleMatch
Cert	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SslConfigLoader.cs	/^        internal struct Cert$/;"	s	class:Mirror.SimpleWeb.SslConfigLoader
Change	Assets/Mirror/Runtime/SyncDictionary.cs	/^        struct Change$/;"	s	class:Mirror.SyncIDictionary
Change	Assets/Mirror/Runtime/SyncList.cs	/^        struct Change$/;"	s	class:Mirror.SyncList
Change	Assets/Mirror/Runtime/SyncSet.cs	/^        struct Change$/;"	s	class:Mirror.SyncSet
Changed	Assets/Mirror/Editor/NetworkManagerEditor.cs	/^        internal void Changed(ReorderableList list)$/;"	m	class:Mirror.NetworkManagerEditor	file:
Channels	Assets/Mirror/Runtime/Utils.cs	/^    public static class Channels$/;"	c	namespace:Mirror
ChatNetworkManager	Assets/Mirror/Examples/Chat/Scripts/ChatNetworkManager.cs	/^    public class ChatNetworkManager : NetworkManager$/;"	c	namespace:Mirror.Examples.Chat
ChatWindow	Assets/Mirror/Examples/Chat/Scripts/ChatWindow.cs	/^    public class ChatWindow : MonoBehaviour$/;"	c	namespace:Mirror.Examples.Chat
Check	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public uint Check(uint current_)$/;"	m	class:kcp2k.Kcp
Check logs	Assets/Mirror/Cloud/README.md	/^### Check logs$/;"	S
CheckAnimStateChanged	Assets/Mirror/Components/NetworkAnimator.cs	/^        bool CheckAnimStateChanged(out int stateHash, out float normalizedTime, int layerId)$/;"	m	class:Mirror.NetworkAnimator	file:
CheckForInterupt	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Utils.cs	/^        public static void CheckForInterupt()$/;"	m	class:Mirror.SimpleWeb.Utils
CheckForLocalPlayer	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static void CheckForLocalPlayer(NetworkIdentity identity)$/;"	m	class:Mirror.NetworkClient	file:
CheckForUpdate	Assets/ParrelSync/ParrelSync/Editor/UpdateChecker.cs	/^        static void CheckForUpdate()$/;"	m	class:ParrelSync.Update.UpdateChecker	file:
CheckIfDeligateExists	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        static bool CheckIfDeligateExists(Type invokeClass, MirrorInvokeType invokerType, CmdDel/;"	m	class:Mirror.RemoteCalls.RemoteCallHelper	file:
CheckJsConnected	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^        public bool CheckJsConnected() => SimpleWebJSLib.IsConnected(index);$/;"	m	class:Mirror.SimpleWeb.WebSocketClientWebGl
CheckMethod	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^        public enum CheckMethod$/;"	g	class:Mirror.SpatialHashingInterestManagement
CheckMonoBehaviour	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        static void CheckMonoBehaviour(TypeDefinition td)$/;"	m	class:Mirror.Weaver.Weaver	file:
CheckPlayModeOptions	Assets/Mirror/Editor/EnterPlayModeSettingsCheck.cs	/^        static void CheckPlayModeOptions()$/;"	m	class:Mirror.EnterPlayModeSettingsCheck	file:
CheckReadyToBegin	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public void CheckReadyToBegin()$/;"	m	class:Mirror.NetworkRoomManager
CheckSendRate	Assets/Mirror/Components/NetworkAnimator.cs	/^        void CheckSendRate()$/;"	m	class:Mirror.NetworkAnimator	file:
CheckSpeed	Assets/Mirror/Components/NetworkAnimator.cs	/^        void CheckSpeed()$/;"	m	class:Mirror.NetworkAnimator	file:
CheckSuccessfulWeave	Assets/Mirror/Editor/EnterPlayModeSettingsCheck.cs	/^        static void CheckSuccessfulWeave()$/;"	m	class:Mirror.EnterPlayModeSettingsCheck	file:
CheckWinner	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        bool CheckWinner(CellValue currentScore)$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController	file:
ClaimPrize	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/Reward.cs	/^        public void ClaimPrize(GameObject player)$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.Reward
ClaimPrize	Assets/Mirror/Examples/Room/Scripts/Reward.cs	/^        public void ClaimPrize(GameObject player)$/;"	m	class:Mirror.Examples.NetworkRoom.Reward
Clamp	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Utils.cs	/^        public static int Clamp(int value, int min, int max)$/;"	m	class:kcp2k.Utils
CleanupNetworkIdentities	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void CleanupNetworkIdentities()$/;"	m	class:Mirror.NetworkServer	file:
Clear	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public void Clear()$/;"	m	class:Mirror.SyncIDictionary
Clear	Assets/Mirror/Runtime/SyncList.cs	/^        public void Clear()$/;"	m	class:Mirror.SyncList
Clear	Assets/Mirror/Runtime/SyncSet.cs	/^        public void Clear()$/;"	m	class:Mirror.SyncSet
Clear	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^        public void Clear()$/;"	m	class:Telepathy.MagnificentReceivePipe
Clear	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentSendPipe.cs	/^        public void Clear()$/;"	m	class:Telepathy.MagnificentSendPipe
Clear	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Pool.cs	/^        public void Clear() => objects.Clear();$/;"	m	class:Telepathy.Pool
ClearAllComponentsDirtyBits	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void ClearAllComponentsDirtyBits()$/;"	m	class:Mirror.NetworkIdentity	file:
ClearAllDirtyBits	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public void ClearAllDirtyBits()$/;"	m	class:Mirror.NetworkBehaviour
ClearDirtyComponentsDirtyBits	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void ClearDirtyComponentsDirtyBits()$/;"	m	class:Mirror.NetworkIdentity	file:
ClearHandlers	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void ClearHandlers() => handlers.Clear();$/;"	m	class:Mirror.NetworkServer
ClearNonAlloc	Assets/Mirror/Components/InterestManagement/SpatialHashing/Grid2D.cs	/^        public void ClearNonAlloc()$/;"	m	class:Mirror.Grid2D
ClearNullFromSpawned	Assets/Mirror/Runtime/NetworkClient.cs	/^        static void ClearNullFromSpawned()$/;"	m	class:Mirror.NetworkClient	file:
ClearObservers	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void ClearObservers()$/;"	m	class:Mirror.NetworkIdentity	file:
ClearSpawners	Assets/Mirror/Runtime/ClientScene.cs	/^        public static void ClearSpawners() => NetworkClient.ClearSpawners();$/;"	m	class:Mirror.ClientScene
ClearSpawners	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void ClearSpawners()$/;"	m	class:Mirror.NetworkClient
ClearValue	Assets/ParrelSync/ParrelSync/Editor/Preferences.cs	/^        public void ClearValue()$/;"	m	class:ParrelSync.BoolPreference
Client	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public Client(int MaxMessageSize) : base(MaxMessageSize) {}$/;"	m	class:Telepathy.Client
Client	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^    public class Client : Common$/;"	c	namespace:Telepathy
Client Api Example	Assets/Mirror/Cloud/README.md	/^### Client Api Example$/;"	S
ClientAccept	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^        protected void ClientAccept(NetworkConnection conn)$/;"	m	class:Mirror.NetworkAuthenticator
ClientApi	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^        public readonly IListServerClientApi ClientApi;$/;"	f	class:Mirror.Cloud.ListServerService.ListServer
ClientApi_onServerListUpdated	Assets/Mirror/Examples/Cloud/GUI/Scripts/QuickListServerDebug.cs	/^        void ClientApi_onServerListUpdated(ServerCollectionJson arg0)$/;"	m	class:Mirror.Cloud.Example.QuickListServerDebug	file:
ClientAttribute	Assets/Mirror/Runtime/Attributes.cs	/^    public class ClientAttribute : Attribute {}$/;"	c	namespace:Mirror
ClientAuthorityCallback	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public delegate void ClientAuthorityCallback(NetworkConnection conn, NetworkIdentity ide/;"	m	class:Mirror.NetworkIdentity
ClientAuthorityUpdate	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        void ClientAuthorityUpdate()$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
ClientCallbackAttribute	Assets/Mirror/Runtime/Attributes.cs	/^    public class ClientCallbackAttribute : Attribute {}$/;"	c	namespace:Mirror
ClientChangeScene	Assets/Mirror/Runtime/NetworkManager.cs	/^        internal void ClientChangeScene(string newSceneName, SceneOperation sceneOperation = Sce/;"	m	class:Mirror.NetworkManager	file:
ClientConnect	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override void ClientConnect(Uri uri)$/;"	m	class:Mirror.FallbackTransport
ClientConnect	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override void ClientConnect(string address)$/;"	m	class:Mirror.FallbackTransport
ClientConnect	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override void ClientConnect(string address)$/;"	m	class:kcp2k.KcpTransport
ClientConnect	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override void ClientConnect(Uri uri)$/;"	m	class:Mirror.LatencySimulation
ClientConnect	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override void ClientConnect(string address)$/;"	m	class:Mirror.LatencySimulation
ClientConnect	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^        public override void ClientConnect(string address)$/;"	m	class:Mirror.MiddlewareTransport
ClientConnect	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override void ClientConnect(Uri uri)$/;"	m	class:Mirror.MultiplexTransport
ClientConnect	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override void ClientConnect(string address)$/;"	m	class:Mirror.MultiplexTransport
ClientConnect	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override void ClientConnect(string hostname)$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
ClientConnect	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override void ClientConnect(Uri uri)$/;"	m	class:Mirror.TelepathyTransport
ClientConnect	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override void ClientConnect(string address) => client.Connect(address, port);$/;"	m	class:Mirror.TelepathyTransport
ClientConnect	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public abstract void ClientConnect(string address);$/;"	m	class:Mirror.Transport
ClientConnect	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public virtual void ClientConnect(Uri uri)$/;"	m	class:Mirror.Transport
ClientConnected	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override bool ClientConnected()$/;"	m	class:Mirror.FallbackTransport
ClientConnected	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override bool ClientConnected() => client.connected;$/;"	m	class:kcp2k.KcpTransport
ClientConnected	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override bool ClientConnected() => wrap.ClientConnected();$/;"	m	class:Mirror.LatencySimulation
ClientConnected	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^        public override bool ClientConnected() => inner.ClientConnected();$/;"	m	class:Mirror.MiddlewareTransport
ClientConnected	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override bool ClientConnected()$/;"	m	class:Mirror.MultiplexTransport
ClientConnected	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override bool ClientConnected()$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
ClientConnected	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override bool ClientConnected() => client.Connected;$/;"	m	class:Mirror.TelepathyTransport
ClientConnected	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public abstract bool ClientConnected();$/;"	m	class:Mirror.Transport
ClientConnectionState	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public ClientConnectionState(int MaxMessageSize) : base(new TcpClient(), MaxMessageSize)$/;"	m	class:Telepathy.ClientConnectionState
ClientConnectionState	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^    class ClientConnectionState : ConnectionState$/;"	c	namespace:Telepathy
ClientDisconnect	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override void ClientDisconnect()$/;"	m	class:Mirror.FallbackTransport
ClientDisconnect	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override void ClientDisconnect() => client.Disconnect();$/;"	m	class:kcp2k.KcpTransport
ClientDisconnect	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override void ClientDisconnect()$/;"	m	class:Mirror.LatencySimulation
ClientDisconnect	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^        public override void ClientDisconnect() => inner.ClientDisconnect();$/;"	m	class:Mirror.MiddlewareTransport
ClientDisconnect	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override void ClientDisconnect()$/;"	m	class:Mirror.MultiplexTransport
ClientDisconnect	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override void ClientDisconnect()$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
ClientDisconnect	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override void ClientDisconnect() => client.Disconnect();$/;"	m	class:Mirror.TelepathyTransport
ClientDisconnect	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public abstract void ClientDisconnect();$/;"	m	class:Mirror.Transport
ClientEarlyUpdate	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override void ClientEarlyUpdate()$/;"	m	class:kcp2k.KcpTransport
ClientEarlyUpdate	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override void ClientEarlyUpdate() => wrap.ClientEarlyUpdate();$/;"	m	class:Mirror.LatencySimulation
ClientEarlyUpdate	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override void ClientEarlyUpdate()$/;"	m	class:Mirror.MultiplexTransport
ClientEarlyUpdate	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override void ClientEarlyUpdate()$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
ClientEarlyUpdate	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override void ClientEarlyUpdate()$/;"	m	class:Mirror.TelepathyTransport
ClientEarlyUpdate	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public virtual void ClientEarlyUpdate() {}$/;"	m	class:Mirror.Transport
ClientHandshake	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/ClientHandshake.cs	/^    internal class ClientHandshake$/;"	c	namespace:Mirror.SimpleWeb
ClientLateUpdate	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override void ClientLateUpdate() => client.TickOutgoing();$/;"	m	class:kcp2k.KcpTransport
ClientLateUpdate	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override void ClientLateUpdate()$/;"	m	class:Mirror.LatencySimulation
ClientLateUpdate	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override void ClientLateUpdate()$/;"	m	class:Mirror.MultiplexTransport
ClientLateUpdate	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public virtual void ClientLateUpdate() {}$/;"	m	class:Mirror.Transport
ClientListenAsync	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        public async Task ClientListenAsync()$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase
ClientMatchMessage	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^    public struct ClientMatchMessage : NetworkMessage$/;"	s	namespace:Mirror.Examples.MultipleMatch
ClientMatchOperation	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^    public enum ClientMatchOperation : byte$/;"	g	namespace:Mirror.Examples.MultipleMatch
ClientOnly	Assets/Mirror/Runtime/NetworkManager.cs	/^    public enum NetworkManagerMode { Offline, ServerOnly, ClientOnly, Host }$/;"	e	enum:Mirror.NetworkManagerMode	file:
ClientReject	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^        protected void ClientReject(NetworkConnection conn)$/;"	m	class:Mirror.NetworkAuthenticator
ClientRemoteUpdate	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        void ClientRemoteUpdate()$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
ClientRpc	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        ClientRpc,$/;"	e	enum:Mirror.Weaver.RemoteCallType	file:
ClientRpc	Assets/Mirror/Runtime/Utils.cs	/^        ClientRpc$/;"	e	enum:Mirror.MirrorInvokeType	file:
ClientRpcAttribute	Assets/Mirror/Runtime/Attributes.cs	/^    public class ClientRpcAttribute : Attribute$/;"	c	namespace:Mirror
ClientRpcResult	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public struct ClientRpcResult$/;"	s	class:Mirror.Weaver.NetworkBehaviourProcessor
ClientScene	Assets/Mirror/Runtime/ClientScene.cs	/^    public static class ClientScene$/;"	c	namespace:Mirror
ClientSend	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override void ClientSend(int channelId, ArraySegment<byte> segment)$/;"	m	class:Mirror.FallbackTransport
ClientSend	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override void ClientSend(int channelId, ArraySegment<byte> segment)$/;"	m	class:kcp2k.KcpTransport
ClientSend	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override void ClientSend(int channelId, ArraySegment<byte> segment)$/;"	m	class:Mirror.LatencySimulation
ClientSend	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^        public override void ClientSend(int channelId, ArraySegment<byte> segment) => inner.Clie/;"	m	class:Mirror.MiddlewareTransport
ClientSend	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override void ClientSend(int channelId, ArraySegment<byte> segment)$/;"	m	class:Mirror.MultiplexTransport
ClientSend	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override void ClientSend(int channelId, ArraySegment<byte> segment)$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
ClientSend	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override void ClientSend(int channelId, ArraySegment<byte> segment) => client.Sen/;"	m	class:Mirror.TelepathyTransport
ClientSend	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public abstract void ClientSend(int channelId, ArraySegment<byte> segment);$/;"	m	class:Mirror.Transport
ClientSslHelper	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/ClientSslHelper.cs	/^    internal class ClientSslHelper$/;"	c	namespace:Mirror.SimpleWeb
ClientState	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^    public enum ClientState$/;"	g	namespace:Mirror.SimpleWeb
ClientSyncState	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        public class ClientSyncState$/;"	c	class:Mirror.Experimental.NetworkRigidbody
ClientSyncState	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        public class ClientSyncState$/;"	c	class:Mirror.Experimental.NetworkRigidbody2D
ClientUnloadSubScenes	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^        IEnumerator ClientUnloadSubScenes()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.MultiSceneNetManager	file:
ClientWithAuthority	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^        bool ClientWithAuthority => clientAuthority && hasAuthority;$/;"	f	class:Mirror.Experimental.NetworkLerpRigidbody	file:
ClientWithAuthority	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        bool ClientWithAuthority => clientAuthority && hasAuthority;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
ClientWithAuthority	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        bool ClientWithAuthority => clientAuthority && hasAuthority;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
Clone	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        public object Clone()$/;"	m	class:ParrelSync.Project
CloneFileName	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public const string CloneFileName = ".clone";$/;"	f	class:ParrelSync.ClonesManager
CloneNameSuffix	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public const string CloneNameSuffix = "_clone";$/;"	f	class:ParrelSync.ClonesManager
ClonesManager	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^    public class ClonesManager$/;"	c	namespace:ParrelSync
ClonesManagerWindow	Assets/ParrelSync/ParrelSync/Editor/ClonesManagerWindow.cs	/^	public class ClonesManagerWindow : EditorWindow$/;"	c	namespace:ParrelSync
CloseCallBack	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^        static void CloseCallBack(int index) => instances[index].onClose();$/;"	m	class:Mirror.SimpleWeb.WebSocketClientWebGl	file:
CloseConnection	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        public bool CloseConnection(int id)$/;"	m	class:Mirror.SimpleWeb.WebSocketServer
Cloud GUI	Assets/Mirror/Examples/Cloud/GUI/README.md	/^# Cloud GUI$/;"	c
CmdChangeGravityScale	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void CmdChangeGravityScale(float gravityScale)$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
CmdChangeReadyState	Assets/Mirror/Components/NetworkRoomPlayer.cs	/^        public void CmdChangeReadyState(bool readyState)$/;"	m	class:Mirror.NetworkRoomPlayer
CmdClientToServerSync	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        void CmdClientToServerSync(Vector3 position, uint packedRotation, Vector3 scale)$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
CmdClientToServerSync	Assets/Mirror/Components/NetworkTransformBase.cs	/^        void CmdClientToServerSync(ArraySegment<byte> payload)$/;"	m	class:Mirror.NetworkTransformBase	file:
CmdDelegate	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^    public delegate void CmdDelegate(NetworkBehaviour obj, NetworkReader reader, NetworkConnecti/;"	m	namespace:Mirror.RemoteCalls
CmdDelegateConstructor	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference CmdDelegateConstructor;$/;"	f	class:Mirror.Weaver.WeaverTypes
CmdFire	Assets/Mirror/Examples/Tanks/Scripts/Tank.cs	/^        void CmdFire()$/;"	m	class:Mirror.Examples.Tanks.Tank	file:
CmdMakePlay	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public void CmdMakePlay(CellValue cellValue, NetworkConnectionToClient sender = null)$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
CmdOnAnimationParametersServerMessage	Assets/Mirror/Components/NetworkAnimator.cs	/^        void CmdOnAnimationParametersServerMessage(byte[] parameters)$/;"	m	class:Mirror.NetworkAnimator	file:
CmdOnAnimationResetTriggerServerMessage	Assets/Mirror/Components/NetworkAnimator.cs	/^        void CmdOnAnimationResetTriggerServerMessage(int hash)$/;"	m	class:Mirror.NetworkAnimator	file:
CmdOnAnimationServerMessage	Assets/Mirror/Components/NetworkAnimator.cs	/^        void CmdOnAnimationServerMessage(int stateHash, float normalizedTime, int layerId, float/;"	m	class:Mirror.NetworkAnimator	file:
CmdOnAnimationTriggerServerMessage	Assets/Mirror/Components/NetworkAnimator.cs	/^        void CmdOnAnimationTriggerServerMessage(int hash)$/;"	m	class:Mirror.NetworkAnimator	file:
CmdPlayAgain	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public void CmdPlayAgain(NetworkConnectionToClient sender = null)$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
CmdRequestExitGame	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public void CmdRequestExitGame(NetworkConnectionToClient sender = null)$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
CmdResult	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public struct CmdResult$/;"	s	class:Mirror.Weaver.NetworkBehaviourProcessor
CmdSend	Assets/Mirror/Examples/Chat/Scripts/Player.cs	/^        public void CmdSend(string message)$/;"	m	class:Mirror.Examples.Chat.Player
CmdSendAngularDrag	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void CmdSendAngularDrag(float angularDrag)$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
CmdSendAngularDrag	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void CmdSendAngularDrag(float angularDrag)$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
CmdSendDrag	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void CmdSendDrag(float drag)$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
CmdSendDrag	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void CmdSendDrag(float drag)$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
CmdSendIsKinematic	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void CmdSendIsKinematic(bool isKinematic)$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
CmdSendIsKinematic	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void CmdSendIsKinematic(bool isKinematic)$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
CmdSendState	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^        void CmdSendState(Vector3 velocity, Vector3 position)$/;"	m	class:Mirror.Experimental.NetworkLerpRigidbody	file:
CmdSendUseGravity	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void CmdSendUseGravity(bool useGravity)$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
CmdSendVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void CmdSendVelocity(Vector3 velocity)$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
CmdSendVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void CmdSendVelocity(Vector2 velocity)$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
CmdSendVelocityAndAngular	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void CmdSendVelocityAndAngular(Vector3 velocity, Vector3 angularVelocity)$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
CmdSendVelocityAndAngular	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void CmdSendVelocityAndAngular(Vector2 velocity, float angularVelocity)$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
CmdSetAnimatorSpeed	Assets/Mirror/Components/NetworkAnimator.cs	/^        void CmdSetAnimatorSpeed(float newSpeed)$/;"	m	class:Mirror.NetworkAnimator	file:
CmdSetIsReady	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    public void CmdSetIsReady(bool isReady) {$/;"	m	class:LobbyPlayer
CmdSetUsername	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    private void CmdSetUsername(string username) {$/;"	m	class:LobbyPlayer	file:
CmdTeleportFinished	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        void CmdTeleportFinished()$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
CmdTeleportFinished	Assets/Mirror/Components/NetworkTransformBase.cs	/^        void CmdTeleportFinished()$/;"	m	class:Mirror.NetworkTransformBase	file:
Command	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        Command,$/;"	e	enum:Mirror.Weaver.RemoteCallType	file:
Command	Assets/Mirror/Runtime/Utils.cs	/^        Command,$/;"	e	enum:Mirror.MirrorInvokeType	file:
CommandAttribute	Assets/Mirror/Runtime/Attributes.cs	/^    public class CommandAttribute : Attribute$/;"	c	namespace:Mirror
CommandInfo	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^    public struct CommandInfo$/;"	s	namespace:Mirror.RemoteCalls
CommandMessage	Assets/Mirror/Runtime/Messages.cs	/^    public struct CommandMessage : NetworkMessage$/;"	s	namespace:Mirror
CommandProcessor	Assets/Mirror/Editor/Weaver/Processors/CommandProcessor.cs	/^    public static class CommandProcessor$/;"	c	namespace:Mirror.Weaver
Common	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Common.cs	/^        protected Common(int MaxMessageSize)$/;"	m	class:Telepathy.Common
Common	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Common.cs	/^    public abstract class Common$/;"	c	namespace:Telepathy
CompilationFinishedHook	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^    public static class CompilationFinishedHook$/;"	c	namespace:Mirror.Weaver
CompilerMessagesContainError	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^        static bool CompilerMessagesContainError(CompilerMessage[] messages)$/;"	m	class:Mirror.Weaver.CompilationFinishedHook	file:
ComponentIndex	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public int ComponentIndex$/;"	p	class:Mirror.NetworkBehaviour
CompressQuaternion	Assets/Mirror/Runtime/Compression.cs	/^        public static uint CompressQuaternion(Quaternion q)$/;"	m	class:Mirror.Compression
Compression	Assets/Mirror/Runtime/Compression.cs	/^    public static class Compression$/;"	c	namespace:Mirror
Conditional	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^using Conditional = System.Diagnostics.ConditionalAttribute;$/;"	t	file:
Config	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^            public Config(Connection conn, int maxMessageSize, bool expectMask, ConcurrentQueue</;"	m	struct:Mirror.SimpleWeb.ReceiveLoop.Config
Config	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^        public struct Config$/;"	s	class:Mirror.SimpleWeb.ReceiveLoop
Config	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^            public Config(Connection conn, int bufferSize, bool setMask)$/;"	m	struct:Mirror.SimpleWeb.SendLoop.Config
Config	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^        public struct Config$/;"	s	class:Mirror.SimpleWeb.SendLoop
ConfigureServerFrameRate	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void ConfigureServerFrameRate()$/;"	m	class:Mirror.NetworkManager
CongestionWindow	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public bool CongestionWindow = false; \/\/ KCP 'NoCongestionWindow' is false by default./;"	f	class:kcp2k.KcpTransport
CongestionWindow	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public bool CongestionWindow;$/;"	f	class:kcp2k.KcpServer
Connect	Assets/Mirror/Components/Discovery/NetworkDiscoveryHUD.cs	/^        void Connect(ServerResponse info)$/;"	m	class:Mirror.Discovery.NetworkDiscoveryHUD	file:
Connect	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void Connect(Uri uri)$/;"	m	class:Mirror.NetworkClient
Connect	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void Connect(string address)$/;"	m	class:Mirror.NetworkClient
Connect	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^        public void Connect(string address, ushort port, bool noDelay, uint interval, int fastRe/;"	m	class:kcp2k.KcpClient
Connect	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClientConnection.cs	/^        public void Connect(string host, ushort port, bool noDelay, uint interval = Kcp.INTERVAL/;"	m	class:kcp2k.KcpClientConnection
Connect	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        public abstract void Connect(Uri serverAddress);$/;"	m	class:Mirror.SimpleWeb.SimpleWebClient
Connect	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/WebSocketClientStandAlone.cs	/^        public override void Connect(Uri serverAddress)$/;"	m	class:Mirror.SimpleWeb.WebSocketClientStandAlone
Connect	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/SimpleWebJSLib.cs	/^        internal static extern int Connect(string address, Action<int> openCallback, Action<int>/;"	m	class:Mirror.SimpleWeb.SimpleWebJSLib	file:
Connect	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^        public override void Connect(Uri serverAddress)$/;"	m	class:Mirror.SimpleWeb.WebSocketClientWebGl
Connect	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public void Connect(string ip, int port)$/;"	m	class:Telepathy.Client
ConnectAndReceiveLoop	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/WebSocketClientStandAlone.cs	/^        void ConnectAndReceiveLoop(Uri serverAddress)$/;"	m	class:Mirror.SimpleWeb.WebSocketClientStandAlone	file:
ConnectHost	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void ConnectHost()$/;"	m	class:Mirror.NetworkClient
ConnectLocalServer	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void ConnectLocalServer()$/;"	m	class:Mirror.NetworkClient
ConnectState	Assets/Mirror/Runtime/NetworkClient.cs	/^    public enum ConnectState$/;"	g	namespace:Mirror
Connected	Assets/Mirror/Runtime/NetworkClient.cs	/^        Connected,$/;"	e	enum:Mirror.ConnectState	file:
Connected	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^    enum KcpState { Connected, Authenticated, Disconnected }$/;"	e	enum:kcp2k.KcpState	file:
Connected	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        Connected = 2,$/;"	e	enum:Mirror.SimpleWeb.ClientState	file:
Connected	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/EventType.cs	/^        Connected,$/;"	e	enum:Mirror.SimpleWeb.EventType	file:
Connected	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public bool Connected => client != null &&$/;"	f	class:Telepathy.ClientConnectionState
Connected	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public bool Connected => state != null && state.Connected;$/;"	f	class:Telepathy.Client
Connected	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/EventType.cs	/^        Connected,$/;"	e	enum:Telepathy.EventType	file:
Connecting	Assets/Mirror/Runtime/NetworkClient.cs	/^        Connecting,$/;"	e	enum:Mirror.ConnectState	file:
Connecting	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        Connecting = 1,$/;"	e	enum:Mirror.SimpleWeb.ClientState	file:
Connecting	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public bool Connecting => state != null && state.Connecting;$/;"	f	class:Telepathy.Client
Connecting	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public volatile bool Connecting;$/;"	f	class:Telepathy.ClientConnectionState
Connection	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^        public Connection(TcpClient client, Action<Connection> onDispose)$/;"	m	class:Mirror.SimpleWeb.Connection
Connection	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^    internal sealed class Connection : IDisposable$/;"	c	namespace:Mirror.SimpleWeb
ConnectionState	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        public ClientState ConnectionState => state;$/;"	f	class:Mirror.SimpleWeb.SimpleWebClient
ConnectionState	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/ConnectionState.cs	/^        public ConnectionState(TcpClient client, int MaxMessageSize)$/;"	m	class:Telepathy.ConnectionState
ConnectionState	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/ConnectionState.cs	/^    public class ConnectionState$/;"	c	namespace:Telepathy
ConsiderForSpawning	Assets/Mirror/Runtime/NetworkClient.cs	/^        static bool ConsiderForSpawning(NetworkIdentity identity)$/;"	m	class:Mirror.NetworkClient	file:
Constants	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Constants.cs	/^    internal static class Constants$/;"	c	namespace:Mirror.SimpleWeb
Contains	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public bool Contains(KeyValuePair<TKey, TValue> item)$/;"	m	class:Mirror.SyncIDictionary
ContainsGeneratedCodeClass	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        static bool ContainsGeneratedCodeClass(ModuleDefinition module)$/;"	m	class:Mirror.Weaver.Weaver	file:
CopyDirectoryWithProgressBar	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static void CopyDirectoryWithProgressBar(string sourcePath, string destinationPat/;"	m	class:ParrelSync.ClonesManager
CopyDirectoryWithProgressBarRecursive	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        private static void CopyDirectoryWithProgressBarRecursive(DirectoryInfo source, Director/;"	m	class:ParrelSync.ClonesManager	file:
CopyFrom	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public void CopyFrom(ArraySegment<byte> segment)$/;"	m	class:Mirror.SimpleWeb.ArrayBuffer
CopyFrom	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public void CopyFrom(IntPtr bufferPtr, int length)$/;"	m	class:Mirror.SimpleWeb.ArrayBuffer
CopyFrom	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public void CopyFrom(byte[] source, int offset, int length)$/;"	m	class:Mirror.SimpleWeb.ArrayBuffer
CopyLibraryFolder	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static void CopyLibraryFolder(Project sourceProject, Project destinationProject)$/;"	m	class:ParrelSync.ClonesManager
CopyTo	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public void CopyTo([NotNull] KeyValuePair<TKey, TValue>[] array, int arrayIndex)$/;"	m	class:Mirror.SyncIDictionary
CopyTo	Assets/Mirror/Runtime/SyncList.cs	/^        public void CopyTo(T[] array, int index) => objects.CopyTo(array, index);$/;"	m	class:Mirror.SyncList
CopyTo	Assets/Mirror/Runtime/SyncSet.cs	/^        public void CopyTo(T[] array, int index) => objects.CopyTo(array, index);$/;"	m	class:Mirror.SyncSet
CopyTo	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public void CopyTo(byte[] target, int offset)$/;"	m	class:Mirror.SimpleWeb.ArrayBuffer
Count	Assets/Mirror/Runtime/Pool.cs	/^        public int Count => objects.Count;$/;"	f	class:Mirror.Pool
Count	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public int Count => objects.Count;$/;"	f	class:Mirror.SyncIDictionary
Count	Assets/Mirror/Runtime/SyncList.cs	/^        public int Count => objects.Count;$/;"	f	class:Mirror.SyncList
Count	Assets/Mirror/Runtime/SyncSet.cs	/^        public int Count => objects.Count;$/;"	f	class:Mirror.SyncSet
Count	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^        public int Count(int connectionId)$/;"	m	class:Telepathy.MagnificentReceivePipe
Count	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentSendPipe.cs	/^        public int Count$/;"	p	class:Telepathy.MagnificentSendPipe
Count	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Pool.cs	/^        public int Count() => objects.Count;$/;"	m	class:Telepathy.Pool
Create	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        Create,$/;"	e	enum:Mirror.Examples.MultipleMatch.ServerMatchOperation	file:
Create	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        public static SimpleWebClient Create(int maxMessageSize, int maxMessagesPerTick, TcpConf/;"	m	class:Mirror.SimpleWeb.SimpleWebClient
CreateCloneFromCurrent	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static Project CreateCloneFromCurrent()$/;"	m	class:ParrelSync.ClonesManager
CreateCloneFromPath	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static Project CreateCloneFromPath(string sourceProjectPath)$/;"	m	class:ParrelSync.ClonesManager
CreateGeneratedCodeClass	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        static void CreateGeneratedCodeClass()$/;"	m	class:Mirror.Weaver.Weaver	file:
CreateHash	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        byte[] CreateHash(byte[] keyBuffer)$/;"	m	class:Mirror.SimpleWeb.ServerHandshake	file:
CreateLinkLinux	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        private static void CreateLinkLinux(string sourcePath, string destinationPath)$/;"	m	class:ParrelSync.ClonesManager	file:
CreateLinkMac	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        private static void CreateLinkMac(string sourcePath, string destinationPath)$/;"	m	class:ParrelSync.ClonesManager	file:
CreateLinkWin	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        private static void CreateLinkWin(string sourcePath, string destinationPath)$/;"	m	class:ParrelSync.ClonesManager	file:
CreateMd5ForFolder	Assets/ParrelSync/ParrelSync/Editor/ValidateCopiedFoldersIntegrity.cs	/^        static string CreateMd5ForFolder(string path)$/;"	m	class:ParrelSync.NonCore.ValidateCopiedFoldersIntegrity	file:
CreateNew	Assets/Mirror/Editor/Weaver/Readers.cs	/^        static void CreateNew(TypeReference variable, ILProcessor worker, TypeDefinition td)$/;"	m	class:Mirror.Weaver.Readers	file:
CreateNewItems	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUI.cs	/^        void CreateNewItems(ServerJson[] servers)$/;"	m	class:Mirror.Cloud.Example.ServerListUI	file:
CreatePlayerMessage	Assets/Mirror/Examples/Chat/Scripts/ChatNetworkManager.cs	/^        public struct CreatePlayerMessage : NetworkMessage$/;"	s	class:Mirror.Examples.Chat.ChatNetworkManager
CreateProjectFolder	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static void CreateProjectFolder(Project project)$/;"	m	class:ParrelSync.ClonesManager
CreateResponse	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        static void CreateResponse(byte[] keyHash, byte[] responseBuffer)$/;"	m	class:Mirror.SimpleWeb.ServerHandshake	file:
CreateSpawnMessagePayload	Assets/Mirror/Runtime/NetworkServer.cs	/^        static ArraySegment<byte> CreateSpawnMessagePayload(bool isOwner, NetworkIdentity identi/;"	m	class:Mirror.NetworkServer	file:
CreateStream	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/ClientSslHelper.cs	/^        Stream CreateStream(NetworkStream stream, Uri uri)$/;"	m	class:Mirror.SimpleWeb.ClientSslHelper	file:
CreateStream	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerSslHelper.cs	/^        Stream CreateStream(NetworkStream stream)$/;"	m	class:Mirror.SimpleWeb.ServerSslHelper	file:
CreateUri	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        Uri CreateUri(string page)$/;"	m	class:Mirror.Cloud.RequestCreator	file:
CreateWebRequest	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        UnityWebRequest CreateWebRequest(string page, string method, string json = null)$/;"	m	class:Mirror.Cloud.RequestCreator	file:
Created	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        Created,$/;"	e	enum:Mirror.Examples.MultipleMatch.ClientMatchOperation	file:
CreatedIdJson	Assets/Mirror/Cloud/Core/JsonStructs.cs	/^    public struct CreatedIdJson : ICanBeJson$/;"	s	namespace:Mirror.Cloud
Credits	Assets/ParrelSync/README.md	/^## Credits$/;"	s
Current	Assets/Mirror/Runtime/SyncList.cs	/^            public T Current { get; private set; }$/;"	p	struct:Mirror.SyncList.Enumerator
Current	Assets/Mirror/Runtime/Utils.cs	/^        Current = 1$/;"	e	enum:Mirror.Version	file:
CurrentAssembly	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public static AssemblyDefinition CurrentAssembly { get; private set; }$/;"	p	class:Mirror.Weaver.Weaver
CurrentInterpolationFactor	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        static float CurrentInterpolationFactor(DataPoint start, DataPoint goal)$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
CurrentInterpolationFactor	Assets/Mirror/Components/NetworkTransformBase.cs	/^        static float CurrentInterpolationFactor(DataPoint start, DataPoint goal)$/;"	m	class:Mirror.NetworkTransformBase	file:
CustomArgumentExample	Assets/ParrelSync/Examples/CustomArgumentExample.cs	/^    public class CustomArgumentExample : MonoBehaviour$/;"	c	namespace:ParrelSync.Example
CustomArgumentHelpLink	Assets/ParrelSync/ParrelSync/Editor/ExternalLinks.cs	/^        public const string CustomArgumentHelpLink = "https:\/\/github.com\/VeriorPies\/ParrelSy/;"	f	class:ParrelSync.ExternalLinks
CustomDataHelper	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^    public static class CustomDataHelper$/;"	c	namespace:Mirror.Cloud.ListServerService
DEADLINK	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int DEADLINK = 20;$/;"	f	class:kcp2k.Kcp
DEBUG	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^        const string DEBUG = nameof(DEBUG);$/;"	f	class:Mirror.SimpleWeb.Log	file:
DELETE	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        const string DELETE = "DELETE";$/;"	f	class:Mirror.Cloud.RequestCreator	file:
DLog	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public static void DLog(TypeDefinition td, string fmt, params object[] args)$/;"	m	class:Mirror.Weaver.Weaver
Data	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpHeader.cs	/^        Data = 0x03,$/;"	e	enum:kcp2k.KcpHeader	file:
Data	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/EventType.cs	/^        Data,$/;"	e	enum:Mirror.SimpleWeb.EventType	file:
Data	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/EventType.cs	/^        Data,$/;"	e	enum:Telepathy.EventType	file:
DataPoint	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public struct DataPoint$/;"	s	class:Mirror.Experimental.NetworkTransformBase
DataPoint	Assets/Mirror/Components/NetworkTransformBase.cs	/^        public class DataPoint$/;"	c	class:Mirror.NetworkTransformBase
DeSerializeObjectsAll	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        internal void DeSerializeObjectsAll(NetworkReader reader)$/;"	m	class:Mirror.NetworkBehaviour	file:
DeSerializeObjectsDelta	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        internal void DeSerializeObjectsDelta(NetworkReader reader)$/;"	m	class:Mirror.NetworkBehaviour	file:
Debug	Assets/Mirror/Cloud/README.md	/^## Debug$/;"	s
Debug	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^using Debug = UnityEngine.Debug;$/;"	t	file:
DebugLogEnabled	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        static readonly bool DebugLogEnabled = true;$/;"	f	class:Mirror.Weaver.Weaver	file:
Decode16U	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Utils.cs	/^        public static int Decode16U(byte[] p, int offset, ref ushort c)$/;"	m	class:kcp2k.Utils
Decode32U	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Utils.cs	/^        public static int Decode32U(byte[] p, int offset, ref uint c)$/;"	m	class:kcp2k.Utils
Decode8u	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Utils.cs	/^        public static int Decode8u(byte[] p, int offset, ref byte c)$/;"	m	class:kcp2k.Utils
DecompressQuaternion	Assets/Mirror/Runtime/Compression.cs	/^        public static Quaternion DecompressQuaternion(uint data)$/;"	m	class:Mirror.Compression
Deconstruct	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^            public void Deconstruct(out Connection conn, out int maxMessageSize, out bool expect/;"	m	struct:Mirror.SimpleWeb.ReceiveLoop.Config
Deconstruct	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^            public void Deconstruct(out Connection conn, out int bufferSize, out bool setMask)$/;"	m	struct:Mirror.SimpleWeb.SendLoop.Config
DecrementCreated	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        void DecrementCreated()$/;"	m	class:Mirror.SimpleWeb.BufferBucket	file:
Default	Assets/Mirror/Runtime/NetworkIdentity.cs	/^    public enum Visibility { Default, ForceHidden, ForceShown }$/;"	e	enum:Mirror.Visibility	file:
DefaultArgument	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public const string DefaultArgument = "client";$/;"	f	class:ParrelSync.ClonesManager
DefaultReliable	Assets/Mirror/Runtime/Utils.cs	/^        public const int DefaultReliable = Reliable;$/;"	f	class:Mirror.Channels
DefaultUnreliable	Assets/Mirror/Runtime/Utils.cs	/^        public const int DefaultUnreliable = Unreliable;$/;"	f	class:Mirror.Channels
DelayedDisconnect	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^        IEnumerator DelayedDisconnect(NetworkConnection conn, float waitTime)$/;"	m	class:Mirror.Authenticators.BasicAuthenticator	file:
Delete	Assets/Mirror/Cloud/Core/IRequestCreator.cs	/^        UnityWebRequest Delete(string page);$/;"	m	interface:Mirror.Cloud.IRequestCreator
Delete	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        public UnityWebRequest Delete(string page)$/;"	m	class:Mirror.Cloud.RequestCreator
DeleteClone	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static void DeleteClone(string cloneProjectPath)$/;"	m	class:ParrelSync.ClonesManager
DeleteOldItems	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUI.cs	/^        void DeleteOldItems()$/;"	m	class:Mirror.Cloud.Example.ServerListUI	file:
Departed	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        Departed,$/;"	e	enum:Mirror.Examples.MultipleMatch.ClientMatchOperation	file:
DequeueAndSerializeAll	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentSendPipe.cs	/^        public bool DequeueAndSerializeAll(ref byte[] payload, out int packetSize)$/;"	m	class:Telepathy.MagnificentSendPipe
DeserializeField	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        void DeserializeField(FieldDefinition syncVar, ILProcessor worker, MethodDefinition dese/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
DeserializeFromReader	Assets/Mirror/Components/NetworkTransformBase.cs	/^        void DeserializeFromReader(NetworkReader reader)$/;"	m	class:Mirror.NetworkTransformBase	file:
DeserializeNetworkBehaviourField	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        void DeserializeNetworkBehaviourField(FieldDefinition syncVar, ILProcessor worker, Metho/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
DeserializeNetworkIdentityField	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        void DeserializeNetworkIdentityField(FieldDefinition syncVar, ILProcessor worker, Method/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
DeserializeNormalField	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        void DeserializeNormalField(FieldDefinition syncVar, ILProcessor serWorker, MethodDefini/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
DeserializeSyncVars	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected virtual void DeserializeSyncVars(NetworkReader reader, bool initialState)$/;"	m	class:Mirror.NetworkBehaviour
DestroyAllClientObjects	Assets/Mirror/Runtime/ClientScene.cs	/^        public static void DestroyAllClientObjects() => NetworkClient.DestroyAllClientObjects();$/;"	m	class:Mirror.ClientScene
DestroyAllClientObjects	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void DestroyAllClientObjects()$/;"	m	class:Mirror.NetworkClient
DestroyBall	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/BallManager.cs	/^        void DestroyBall()$/;"	m	class:Mirror.Cloud.Examples.Pong.BallManager	file:
DestroyObject	Assets/Mirror/Runtime/NetworkClient.cs	/^        static void DestroyObject(uint netId)$/;"	m	class:Mirror.NetworkClient	file:
DestroyObject	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void DestroyObject(GameObject obj, bool destroyServerObject)$/;"	m	class:Mirror.NetworkServer	file:
DestroyObject	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void DestroyObject(NetworkIdentity identity, bool destroyServerObject)$/;"	m	class:Mirror.NetworkServer	file:
DestroyPlayerForConnection	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void DestroyPlayerForConnection(NetworkConnection conn)$/;"	m	class:Mirror.NetworkServer
DestroySelf	Assets/Mirror/Examples/Tanks/Scripts/Projectile.cs	/^        void DestroySelf()$/;"	m	class:Mirror.Examples.Tanks.Projectile	file:
Diag1	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        Diag1 = A1 + B2 + C3,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
Diag2	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        Diag2 = A3 + B2 + C1,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
Direction	Assets/Project/Scripts/Joystick/Joystick.cs	/^    public Vector2 Direction => _direction;$/;"	f	class:Joystick
DirtyObjectBits	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        internal ulong DirtyObjectBits()$/;"	m	class:Mirror.NetworkBehaviour	file:
Disconnect	Assets/Mirror/Runtime/LocalConnections.cs	/^        public override void Disconnect()$/;"	m	class:Mirror.LocalConnectionToClient
Disconnect	Assets/Mirror/Runtime/LocalConnections.cs	/^        public override void Disconnect()$/;"	m	class:Mirror.LocalConnectionToServer
Disconnect	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void Disconnect()$/;"	m	class:Mirror.NetworkClient
Disconnect	Assets/Mirror/Runtime/NetworkConnection.cs	/^        public abstract void Disconnect();$/;"	m	class:Mirror.NetworkConnection
Disconnect	Assets/Mirror/Runtime/NetworkConnectionToClient.cs	/^        public override void Disconnect()$/;"	m	class:Mirror.NetworkConnectionToClient
Disconnect	Assets/Mirror/Runtime/NetworkConnectionToServer.cs	/^        public override void Disconnect()$/;"	m	class:Mirror.NetworkConnectionToServer
Disconnect	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^        public void Disconnect()$/;"	m	class:kcp2k.KcpClient
Disconnect	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public void Disconnect()$/;"	m	class:kcp2k.KcpConnection
Disconnect	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpHeader.cs	/^        Disconnect = 0x04$/;"	e	enum:kcp2k.KcpHeader	file:
Disconnect	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public void Disconnect(int connectionId)$/;"	m	class:kcp2k.KcpServer
Disconnect	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        public abstract void Disconnect();$/;"	m	class:Mirror.SimpleWeb.SimpleWebClient
Disconnect	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/WebSocketClientStandAlone.cs	/^        public override void Disconnect()$/;"	m	class:Mirror.SimpleWeb.WebSocketClientStandAlone
Disconnect	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/SimpleWebJSLib.cs	/^        internal static extern void Disconnect(int index);$/;"	m	class:Mirror.SimpleWeb.SimpleWebJSLib	file:
Disconnect	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^        public override void Disconnect()$/;"	m	class:Mirror.SimpleWeb.WebSocketClientWebGl
Disconnect	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public void Disconnect()$/;"	m	class:Telepathy.Client
Disconnect	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public bool Disconnect(int connectionId)$/;"	m	class:Telepathy.Server
DisconnectAll	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void DisconnectAll()$/;"	m	class:Mirror.NetworkServer
DisconnectAllConnections	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void DisconnectAllConnections() => DisconnectAllExternalConnections();$/;"	m	class:Mirror.NetworkServer
DisconnectAllExternalConnections	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void DisconnectAllExternalConnections()$/;"	m	class:Mirror.NetworkServer
DisconnectInternal	Assets/Mirror/Runtime/LocalConnections.cs	/^        internal void DisconnectInternal()$/;"	m	class:Mirror.LocalConnectionToClient	file:
DisconnectInternal	Assets/Mirror/Runtime/LocalConnections.cs	/^        internal void DisconnectInternal()$/;"	m	class:Mirror.LocalConnectionToServer	file:
DisconnectLocalServer	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void DisconnectLocalServer()$/;"	m	class:Mirror.NetworkClient
Disconnected	Assets/Mirror/Runtime/NetworkClient.cs	/^        Disconnected$/;"	e	enum:Mirror.ConnectState	file:
Disconnected	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^    enum KcpState { Connected, Authenticated, Disconnected }$/;"	e	enum:kcp2k.KcpState	file:
Disconnected	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/EventType.cs	/^        Disconnected,$/;"	e	enum:Mirror.SimpleWeb.EventType	file:
Disconnected	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/EventType.cs	/^        Disconnected$/;"	e	enum:Telepathy.EventType	file:
Disconnecting	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        Disconnecting = 3,$/;"	e	enum:Mirror.SimpleWeb.ClientState	file:
Discord Server	Assets/ParrelSync/README.md	/^## Discord Server$/;"	s
Dispose	Assets/Mirror/Runtime/NetworkReaderPool.cs	/^        public void Dispose() => NetworkReaderPool.Recycle(this);$/;"	m	class:Mirror.PooledNetworkReader
Dispose	Assets/Mirror/Runtime/NetworkWriterPool.cs	/^        public void Dispose() => NetworkWriterPool.Recycle(this);$/;"	m	class:Mirror.PooledNetworkWriter
Dispose	Assets/Mirror/Runtime/SyncList.cs	/^            public void Dispose() {}$/;"	m	struct:Mirror.SyncList.Enumerator
Dispose	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClientConnection.cs	/^        protected override void Dispose()$/;"	m	class:kcp2k.KcpClientConnection
Dispose	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        protected virtual void Dispose() {}$/;"	m	class:kcp2k.KcpConnection
Dispose	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public void Dispose()$/;"	m	class:Mirror.SimpleWeb.ArrayBuffer
Dispose	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^        public void Dispose()$/;"	m	class:Mirror.SimpleWeb.Connection
Dispose	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^            public void Dispose()$/;"	m	class:Mirror.SimpleWeb.SendLoop.MaskHelper
Dispose	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public void Dispose()$/;"	m	class:Telepathy.ClientConnectionState
DistanceInterestManagement	Assets/Mirror/Components/InterestManagement/Distance/DistanceInterestManagement.cs	/^    public class DistanceInterestManagement : InterestManagement$/;"	c	namespace:Mirror
DoTeleport	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        void DoTeleport(Vector3 newLocalPosition, Quaternion newLocalRotation)$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
DoTeleport	Assets/Mirror/Components/NetworkTransformBase.cs	/^        void DoTeleport(Vector3 newPosition, Quaternion newRotation)$/;"	m	class:Mirror.NetworkTransformBase	file:
Draw	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^        public void Draw()$/;"	m	class:Mirror.SyncListDrawer
DrawChild	Assets/Mirror/Editor/NetworkManagerEditor.cs	/^        internal void DrawChild(Rect r, int index, bool isActive, bool isFocused)$/;"	m	class:Mirror.NetworkManagerEditor	file:
DrawDataPointGizmo	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        static void DrawDataPointGizmo(DataPoint data, Color color)$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
DrawDataPointGizmo	Assets/Mirror/Components/NetworkTransformBase.cs	/^        static void DrawDataPointGizmo(DataPoint data, Color color)$/;"	m	class:Mirror.NetworkTransformBase	file:
DrawDefaultSyncLists	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^        protected void DrawDefaultSyncLists()$/;"	m	class:Mirror.NetworkBehaviourInspector
DrawDefaultSyncSettings	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^        protected void DrawDefaultSyncSettings()$/;"	m	class:Mirror.NetworkBehaviourInspector
DrawGUI	Assets/Mirror/Components/Discovery/NetworkDiscoveryHUD.cs	/^        void DrawGUI()$/;"	m	class:Mirror.Discovery.NetworkDiscoveryHUD	file:
DrawHeader	Assets/Mirror/Editor/NetworkManagerEditor.cs	/^        static void DrawHeader(Rect headerRect)$/;"	m	class:Mirror.NetworkManagerEditor	file:
DrawLineBetweenDataPoints	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        static void DrawLineBetweenDataPoints(DataPoint data1, DataPoint data2, Color color)$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
DrawLineBetweenDataPoints	Assets/Mirror/Components/NetworkTransformBase.cs	/^        static void DrawLineBetweenDataPoints(DataPoint data1, DataPoint data2, Color color)$/;"	m	class:Mirror.NetworkTransformBase	file:
DrawNetworkBehaviors	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        float DrawNetworkBehaviors(NetworkIdentity identity, float initialX, float Y)$/;"	m	class:Mirror.NetworkInformationPreview	file:
DrawNetworkIdentityInfo	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        float DrawNetworkIdentityInfo(NetworkIdentity identity, float initialX, float Y)$/;"	m	class:Mirror.NetworkInformationPreview	file:
DrawObservers	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        float DrawObservers(NetworkIdentity identity, float initialX, float Y)$/;"	m	class:Mirror.NetworkInformationPreview	file:
DrawOwner	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        float DrawOwner(NetworkIdentity identity, float initialX, float Y)$/;"	m	class:Mirror.NetworkInformationPreview	file:
DrawPlayerReadyButton	Assets/Mirror/Components/NetworkRoomPlayer.cs	/^        void DrawPlayerReadyButton()$/;"	m	class:Mirror.NetworkRoomPlayer	file:
DrawPlayerReadyState	Assets/Mirror/Components/NetworkRoomPlayer.cs	/^        void DrawPlayerReadyState()$/;"	m	class:Mirror.NetworkRoomPlayer	file:
DrawSyncList	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^        void DrawSyncList(SyncListField syncListField)$/;"	m	class:Mirror.SyncListDrawer	file:
DumpBuffer	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^        public static void DumpBuffer(string label, ArrayBuffer arrayBuffer)$/;"	m	class:Mirror.SimpleWeb.Log
DumpBuffer	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^        public static void DumpBuffer(string label, byte[] buffer, int offset, int length)$/;"	m	class:Mirror.SimpleWeb.Log
EditorHelper	Assets/Mirror/Editor/EditorHelper.cs	/^    public static class EditorHelper$/;"	c	namespace:Mirror
EditorQuit	Assets/ParrelSync/ParrelSync/Editor/AssetModBlock/EditorQuit.cs	/^        static EditorQuit()$/;"	m	class:ParrelSync.EditorQuit	file:
EditorQuit	Assets/ParrelSync/ParrelSync/Editor/AssetModBlock/EditorQuit.cs	/^    public class EditorQuit$/;"	c	namespace:ParrelSync
EmptyJson	Assets/Mirror/Cloud/Core/JsonStructs.cs	/^    public struct EmptyJson : ICanBeJson$/;"	s	namespace:Mirror.Cloud
Encode	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        internal int Encode(byte[] ptr, int offset)$/;"	m	class:kcp2k.Segment	file:
Encode16U	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Utils.cs	/^        public static int Encode16U(byte[] p, int offset, ushort w)$/;"	m	class:kcp2k.Utils
Encode32U	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Utils.cs	/^        public static int Encode32U(byte[] p, int offset, uint l)$/;"	m	class:kcp2k.Utils
Encode8u	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Utils.cs	/^        public static int Encode8u(byte[] p, int offset, byte c)$/;"	m	class:kcp2k.Utils
End	Assets/Mirror/Runtime/NetworkLoop.cs	/^        internal enum AddMode { Beginning, End }$/;"	e	enum:Mirror.NetworkLoop.AddMode	file:
EndPoint	Assets/Mirror/Components/Discovery/ServerResponse.cs	/^        public IPEndPoint EndPoint { get; set; }$/;"	p	struct:Mirror.Discovery.ServerResponse
Enqueue	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^        public void Enqueue(int connectionId, EventType eventType, ArraySegment<byte> message)$/;"	m	class:Telepathy.MagnificentReceivePipe
Enqueue	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentSendPipe.cs	/^        public void Enqueue(ArraySegment<byte> message)$/;"	m	class:Telepathy.MagnificentSendPipe
EnsureCapacity	Assets/Mirror/Runtime/NetworkWriter.cs	/^        void EnsureCapacity(int value)$/;"	m	class:Mirror.NetworkWriter	file:
EnsureLength	Assets/Mirror/Runtime/NetworkWriter.cs	/^        void EnsureLength(int value)$/;"	m	class:Mirror.NetworkWriter	file:
EnterPlayModeSettingsCheck	Assets/Mirror/Editor/EnterPlayModeSettingsCheck.cs	/^    public class EnterPlayModeSettingsCheck : MonoBehaviour$/;"	c	namespace:Mirror
Entry	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^            public Entry(int connectionId, EventType eventType, ArraySegment<byte> data)$/;"	m	struct:Telepathy.MagnificentReceivePipe.Entry
Entry	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^        struct Entry$/;"	s	class:Telepathy.MagnificentReceivePipe
Enumerator	Assets/Mirror/Runtime/SyncList.cs	/^            public Enumerator(SyncList<T> list)$/;"	m	struct:Mirror.SyncList.Enumerator
Enumerator	Assets/Mirror/Runtime/SyncList.cs	/^        public struct Enumerator : IEnumerator<T>$/;"	s	class:Mirror.SyncList
Equals	Assets/Mirror/Editor/Weaver/TypeReferenceComparer.cs	/^        public bool Equals(TypeReference x, TypeReference y)$/;"	m	class:Mirror.Weaver.TypeReferenceComparer
Equals	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^            public bool Equals(NetworkBehaviourSyncVar other)$/;"	m	struct:Mirror.NetworkBehaviour.NetworkBehaviourSyncVar
Equals	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^            public bool Equals(uint netId, int componentIndex)$/;"	m	struct:Mirror.NetworkBehaviour.NetworkBehaviourSyncVar
Error	Assets/Mirror/Editor/Weaver/Log.cs	/^        public static Action<string> Error;$/;"	f	class:Mirror.Weaver.Log
Error	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public static void Error(string message)$/;"	m	class:Mirror.Weaver.Weaver
Error	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public static void Error(string message, MemberReference mr)$/;"	m	class:Mirror.Weaver.Weaver
Error	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/Log.cs	/^        public static Action<string> Error = Console.Error.WriteLine;$/;"	f	class:kcp2k.Log
Error	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/EventType.cs	/^        Error$/;"	e	enum:Mirror.SimpleWeb.EventType	file:
Error	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^        public static void Error(string msg, bool showColor = true)$/;"	m	class:Mirror.SimpleWeb.Log
Error	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Log.cs	/^        public static Action<string> Error = Console.Error.WriteLine;$/;"	f	class:Telepathy.Log
ErrorCallback	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^        static void ErrorCallback(int index) => instances[index].onErr();$/;"	m	class:Mirror.SimpleWeb.WebSocketClientWebGl	file:
ErrorJson	Assets/Mirror/Cloud/Core/JsonStructs.cs	/^    public struct ErrorJson : ICanBeJson$/;"	s	namespace:Mirror.Cloud
EstimateMovementSpeed	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        static float EstimateMovementSpeed(DataPoint from, DataPoint to, Transform transform, fl/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
EstimateMovementSpeed	Assets/Mirror/Components/NetworkTransformBase.cs	/^        static float EstimateMovementSpeed(DataPoint from, DataPoint to, Transform transform, fl/;"	m	class:Mirror.NetworkTransformBase	file:
EventType	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/EventType.cs	/^    public enum EventType$/;"	g	namespace:Mirror.SimpleWeb
EventType	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/EventType.cs	/^    public enum EventType$/;"	g	namespace:Telepathy
ExceptWith	Assets/Mirror/Runtime/SyncSet.cs	/^        public void ExceptWith(IEnumerable<T> other)$/;"	m	class:Mirror.SyncSet
Exception	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^        public static void Exception(Exception e)$/;"	m	class:Mirror.SimpleWeb.Log
ExecuteBashCommand	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        private static void ExecuteBashCommand(string command)$/;"	m	class:ParrelSync.ClonesManager	file:
ExponentialMovingAverage	Assets/Mirror/Runtime/ExponentialMovingAverage.cs	/^        public ExponentialMovingAverage(int n)$/;"	m	class:Mirror.ExponentialMovingAverage
ExponentialMovingAverage	Assets/Mirror/Runtime/ExponentialMovingAverage.cs	/^    public class ExponentialMovingAverage$/;"	c	namespace:Mirror
Extensions	Assets/Mirror/Cloud/Core/Extensions.cs	/^    public static class Extensions$/;"	c	namespace:Mirror.Cloud
Extensions	Assets/Mirror/Editor/Weaver/Extensions.cs	/^    public static class Extensions$/;"	c	namespace:Mirror.Weaver
Extensions	Assets/Mirror/Runtime/Extensions.cs	/^    public static class Extensions$/;"	c	namespace:Mirror
ExternalLinks	Assets/ParrelSync/ParrelSync/Editor/ExternalLinks.cs	/^    public class ExternalLinks $/;"	c	namespace:ParrelSync
FAQ	Assets/ParrelSync/ParrelSync/Editor/ExternalLinks.cs	/^        public const string FAQ = "https:\/\/github.com\/VeriorPies\/ParrelSync\/wiki\/Troublesh/;"	f	class:ParrelSync.ExternalLinks
FASTACK_LIMIT	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int FASTACK_LIMIT = 5;        \/\/ max times to trigger fastack$/;"	f	class:kcp2k.Kcp
FallbackTransport	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^    public class FallbackTransport : Transport$/;"	c	namespace:Mirror
FastResend	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public int FastResend = 2;$/;"	f	class:kcp2k.KcpTransport
FastResend	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public int FastResend;$/;"	f	class:kcp2k.KcpServer
Features	Assets/ParrelSync/README.md	/^## Features$/;"	s
FileUtilities	Assets/ParrelSync/ParrelSync/Editor/FileUtilities.cs	/^    public class FileUtilities : MonoBehaviour$/;"	c	namespace:ParrelSync
Find	Assets/Mirror/Runtime/SyncList.cs	/^        public T Find(Predicate<T> match)$/;"	m	class:Mirror.SyncList
FindAll	Assets/Mirror/Runtime/SyncList.cs	/^        public List<T> FindAll(Predicate<T> match)$/;"	m	class:Mirror.SyncList
FindAllPublicFields	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static IEnumerable<FieldDefinition> FindAllPublicFields(this TypeDefinition typeD/;"	m	class:Mirror.Weaver.Extensions
FindAllPublicFields	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static IEnumerable<FieldDefinition> FindAllPublicFields(this TypeReference variab/;"	m	class:Mirror.Weaver.Extensions
FindHookMethod	Assets/Mirror/Editor/Weaver/Processors/SyncVarProcessor.cs	/^        static MethodDefinition FindHookMethod(TypeDefinition td, FieldDefinition syncVar, strin/;"	m	class:Mirror.Weaver.SyncVarProcessor	file:
FindIndex	Assets/Mirror/Runtime/SyncList.cs	/^        public int FindIndex(Predicate<T> match)$/;"	m	class:Mirror.SyncList
FindMirrorRuntime	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^        static string FindMirrorRuntime()$/;"	m	class:Mirror.Weaver.CompilationFinishedHook	file:
FindOrSpawnObject	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static bool FindOrSpawnObject(SpawnMessage message, out NetworkIdentity identit/;"	m	class:Mirror.NetworkClient	file:
FindPath	Assets/Mirror/Editor/EditorHelper.cs	/^        public static string FindPath<T>()$/;"	m	class:Mirror.EditorHelper
FindPlayerLoopEntryIndex	Assets/Mirror/Runtime/NetworkLoop.cs	/^        internal static int FindPlayerLoopEntryIndex(PlayerLoopSystem.UpdateFunction function, P/;"	m	class:Mirror.NetworkLoop	file:
FindScreen	Assets/Project/Scripts/UI/ScreenManager.cs	/^    public GameObject FindScreen(string screenName) {$/;"	m	class:ScreenManager
FindSyncObjectsFields	Assets/Mirror/Editor/Weaver/Processors/SyncObjectProcessor.cs	/^        public static List<FieldDefinition> FindSyncObjectsFields(TypeDefinition td)$/;"	m	class:Mirror.Weaver.SyncObjectProcessor
FinishLoadScene	Assets/Mirror/Runtime/NetworkManager.cs	/^        protected void FinishLoadScene()$/;"	m	class:Mirror.NetworkManager
FinishLoadSceneClientOnly	Assets/Mirror/Runtime/NetworkManager.cs	/^        void FinishLoadSceneClientOnly()$/;"	m	class:Mirror.NetworkManager	file:
FinishLoadSceneHost	Assets/Mirror/Runtime/NetworkManager.cs	/^        void FinishLoadSceneHost()$/;"	m	class:Mirror.NetworkManager	file:
FinishLoadSceneServerOnly	Assets/Mirror/Runtime/NetworkManager.cs	/^        void FinishLoadSceneServerOnly()$/;"	m	class:Mirror.NetworkManager	file:
FinishStartHost	Assets/Mirror/Runtime/NetworkManager.cs	/^        void FinishStartHost()$/;"	m	class:Mirror.NetworkManager	file:
FixRemoteCallToBaseMethod	Assets/Mirror/Editor/Weaver/Processors/MethodProcessor.cs	/^        public static void FixRemoteCallToBaseMethod(TypeDefinition type, MethodDefinition metho/;"	m	class:Mirror.Weaver.MethodProcessor
FixedUpdate	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^        void FixedUpdate()$/;"	m	class:Mirror.Experimental.NetworkLerpRigidbody	file:
FixedUpdate	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        internal void FixedUpdate()$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
FixedUpdate	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        internal void FixedUpdate()$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
FixedUpdate	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        void FixedUpdate()$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
FixedUpdate	Assets/Mirror/Components/NetworkAnimator.cs	/^        void FixedUpdate()$/;"	m	class:Mirror.NetworkAnimator	file:
FixedUpdate	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        void FixedUpdate()$/;"	m	class:Mirror.Examples.Additive.PlayerController	file:
FixedUpdate	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/Player.cs	/^        void FixedUpdate()$/;"	m	class:Mirror.Cloud.Examples.Pong.Player	file:
FixedUpdate	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PhysicsSimulator.cs	/^        void FixedUpdate()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.PhysicsSimulator	file:
FixedUpdate	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        void FixedUpdate()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController	file:
FixedUpdate	Assets/Mirror/Examples/Pong/Scripts/Player.cs	/^        void FixedUpdate()$/;"	m	class:Mirror.Examples.Pong.Player	file:
FixedUpdate	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        void FixedUpdate()$/;"	m	class:Mirror.Examples.NetworkRoom.PlayerController	file:
FixedUpdate	Assets/Project/Scripts/Player/PlayerMovement.cs	/^    private void FixedUpdate() {$/;"	m	class:PlayerMovement	file:
Flush	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public void Flush() => changes.Clear();$/;"	m	class:Mirror.SyncIDictionary
Flush	Assets/Mirror/Runtime/SyncList.cs	/^        public void Flush() => changes.Clear();$/;"	m	class:Mirror.SyncList
Flush	Assets/Mirror/Runtime/SyncObject.cs	/^        void Flush();$/;"	m	interface:Mirror.SyncObject
Flush	Assets/Mirror/Runtime/SyncSet.cs	/^        public void Flush() => changes.Clear();$/;"	m	class:Mirror.SyncSet
Flush	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public void Flush()$/;"	m	class:kcp2k.Kcp
ForceHidden	Assets/Mirror/Runtime/NetworkIdentity.cs	/^    public enum Visibility { Default, ForceHidden, ForceShown }$/;"	e	enum:Mirror.Visibility	file:
ForceShown	Assets/Mirror/Runtime/NetworkIdentity.cs	/^    public enum Visibility { Default, ForceHidden, ForceShown }$/;"	e	enum:Mirror.Visibility	file:
FromBaseId	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        int FromBaseId(int transportId, int connectionId)$/;"	m	class:Mirror.MultiplexTransport	file:
Full	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        Full = TopRow + MidRow + BotRow$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
GET	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        const string GET = "GET";$/;"	f	class:Mirror.Cloud.RequestCreator	file:
GUIConsole	Assets/Mirror/Components/GUIConsole.cs	/^    public class GUIConsole : MonoBehaviour$/;"	c	namespace:Mirror
GameManager	Assets/Project/Scripts/GameManager.cs	/^public class GameManager : MonoBehaviour {$/;"	c
GameplayScene	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public string GameplayScene;$/;"	f	class:Mirror.NetworkRoomManager
GenerateArraySegmentReadFunc	Assets/Mirror/Editor/Weaver/Readers.cs	/^        static MethodDefinition GenerateArraySegmentReadFunc(TypeReference variable)$/;"	m	class:Mirror.Weaver.Readers	file:
GenerateClassOrStructReadFunction	Assets/Mirror/Editor/Weaver/Readers.cs	/^        static MethodDefinition GenerateClassOrStructReadFunction(TypeReference variable)$/;"	m	class:Mirror.Weaver.Readers	file:
GenerateClassOrStructWriterFunction	Assets/Mirror/Editor/Weaver/Writers.cs	/^        static MethodDefinition GenerateClassOrStructWriterFunction(TypeReference variable)$/;"	m	class:Mirror.Weaver.Writers	file:
GenerateCollectionWriter	Assets/Mirror/Editor/Weaver/Writers.cs	/^        static MethodDefinition GenerateCollectionWriter(TypeReference variable, TypeReference e/;"	m	class:Mirror.Weaver.Writers	file:
GenerateConstants	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        void GenerateConstants()$/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
GenerateDeSerialization	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        void GenerateDeSerialization()$/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
GenerateEnumReadFunc	Assets/Mirror/Editor/Weaver/Readers.cs	/^        static MethodDefinition GenerateEnumReadFunc(TypeReference variable)$/;"	m	class:Mirror.Weaver.Readers	file:
GenerateEnumWriteFunc	Assets/Mirror/Editor/Weaver/Writers.cs	/^        static MethodDefinition GenerateEnumWriteFunc(TypeReference variable)$/;"	m	class:Mirror.Weaver.Writers	file:
GenerateLogErrors	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public static bool GenerateLogErrors;$/;"	f	class:Mirror.Weaver.Weaver
GenerateNullCheck	Assets/Mirror/Editor/Weaver/Readers.cs	/^        static void GenerateNullCheck(ILProcessor worker)$/;"	m	class:Mirror.Weaver.Readers	file:
GenerateReadCollection	Assets/Mirror/Editor/Weaver/Readers.cs	/^        static MethodDefinition GenerateReadCollection(TypeReference variable, TypeReference ele/;"	m	class:Mirror.Weaver.Readers	file:
GenerateReader	Assets/Mirror/Editor/Weaver/Readers.cs	/^        static MethodReference GenerateReader(TypeReference variableReference)$/;"	m	class:Mirror.Weaver.Readers	file:
GenerateReaderFunction	Assets/Mirror/Editor/Weaver/Readers.cs	/^        static MethodDefinition GenerateReaderFunction(TypeReference variable)$/;"	m	class:Mirror.Weaver.Readers	file:
GenerateReadersAndWriters	Assets/Mirror/Editor/Weaver/Processors/SyncObjectProcessor.cs	/^        static void GenerateReadersAndWriters(TypeReference tr)$/;"	m	class:Mirror.Weaver.SyncObjectProcessor	file:
GenerateRegisterCommandDelegate	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        void GenerateRegisterCommandDelegate(ILProcessor worker, MethodReference registerMethod,/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
GenerateRegisterRemoteDelegate	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        void GenerateRegisterRemoteDelegate(ILProcessor worker, MethodReference registerMethod, /;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
GenerateSerialization	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        void GenerateSerialization()$/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
GenerateSyncObjectInitializer	Assets/Mirror/Editor/Weaver/Processors/SyncObjectInitializer.cs	/^        public static void GenerateSyncObjectInitializer(ILProcessor worker, FieldDefinition fd)$/;"	m	class:Mirror.Weaver.SyncObjectInitializer
GenerateSyncObjectRegistration	Assets/Mirror/Editor/Weaver/Processors/SyncObjectInitializer.cs	/^        static void GenerateSyncObjectRegistration(ILProcessor worker, FieldDefinition fd)$/;"	m	class:Mirror.Weaver.SyncObjectInitializer	file:
GenerateSyncVarGetter	Assets/Mirror/Editor/Weaver/Processors/SyncVarProcessor.cs	/^        public static MethodDefinition GenerateSyncVarGetter(FieldDefinition fd, string original/;"	m	class:Mirror.Weaver.SyncVarProcessor
GenerateSyncVarSetter	Assets/Mirror/Editor/Weaver/Processors/SyncVarProcessor.cs	/^        public static MethodDefinition GenerateSyncVarSetter(TypeDefinition td, FieldDefinition /;"	m	class:Mirror.Weaver.SyncVarProcessor
GenerateWriter	Assets/Mirror/Editor/Weaver/Writers.cs	/^        static MethodReference GenerateWriter(TypeReference variableReference)$/;"	m	class:Mirror.Weaver.Writers	file:
GenerateWriterException	Assets/Mirror/Editor/Weaver/WeaverExceptions.cs	/^        protected GenerateWriterException(System.Runtime.Serialization.SerializationInfo seriali/;"	m	class:Mirror.Weaver.GenerateWriterException
GenerateWriterException	Assets/Mirror/Editor/Weaver/WeaverExceptions.cs	/^        public GenerateWriterException(string message, MemberReference member) : base(message, m/;"	m	class:Mirror.Weaver.GenerateWriterException
GenerateWriterException	Assets/Mirror/Editor/Weaver/WeaverExceptions.cs	/^    public class GenerateWriterException : WeaverException$/;"	c	namespace:Mirror.Weaver
GenerateWriterFunc	Assets/Mirror/Editor/Weaver/Writers.cs	/^        static MethodDefinition GenerateWriterFunc(TypeReference variable)$/;"	m	class:Mirror.Weaver.Writers	file:
GeneratedCodeClass	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public static TypeDefinition GeneratedCodeClass;$/;"	f	class:Mirror.Weaver.Weaver
GeneratedCodeClassName	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public const string GeneratedCodeClassName = "GeneratedNetworkCode";$/;"	f	class:Mirror.Weaver.Weaver
GeneratedCodeNamespace	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public const string GeneratedCodeNamespace = "Mirror";$/;"	f	class:Mirror.Weaver.Weaver
Get	Assets/Mirror/Cloud/Core/IRequestCreator.cs	/^        UnityWebRequest Get(string page);$/;"	m	interface:Mirror.Cloud.IRequestCreator
Get	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        public UnityWebRequest Get(string page)$/;"	m	class:Mirror.Cloud.RequestCreator
Get Servers	Assets/Mirror/Cloud/README.md	/^#### Get Servers$/;"	t
GetAllFields	Assets/Mirror/Editor/InspectorHelper.cs	/^        public static IEnumerable<FieldInfo> GetAllFields(Type type, Type deepestBaseType)$/;"	m	class:Mirror.InspectorHelper
GetAndRemoveSceneObject	Assets/Mirror/Runtime/NetworkClient.cs	/^        static NetworkIdentity GetAndRemoveSceneObject(ulong sceneId)$/;"	m	class:Mirror.NetworkClient	file:
GetApplicationPath	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        private static string GetApplicationPath()$/;"	m	class:ParrelSync.ClonesManager	file:
GetArgument	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static string GetArgument()$/;"	m	class:ParrelSync.ClonesManager
GetAssetId	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        NetworkIdentityInfo GetAssetId(NetworkIdentity identity)$/;"	m	class:Mirror.NetworkInformationPreview	file:
GetAt	Assets/Mirror/Components/InterestManagement/SpatialHashing/Grid2D.cs	/^        void GetAt(Vector2Int position, HashSet<T> result)$/;"	m	class:Mirror.Grid2D	file:
GetAvailableTransport	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        Transport GetAvailableTransport()$/;"	m	class:Mirror.FallbackTransport	file:
GetAverageMaxReceiveRate	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public int GetAverageMaxReceiveRate() =>$/;"	m	class:kcp2k.KcpTransport
GetAverageMaxSendRate	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public int GetAverageMaxSendRate() =>$/;"	m	class:kcp2k.KcpTransport
GetBatchForChannelId	Assets/Mirror/Runtime/NetworkConnectionToClient.cs	/^        Batch GetBatchForChannelId(int channelId)$/;"	m	class:Mirror.NetworkConnectionToClient	file:
GetBoolean	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        static NetworkIdentityInfo GetBoolean(string name, bool value)$/;"	m	class:Mirror.NetworkInformationPreview	file:
GetBuildSettingsSceneObject	Assets/Mirror/Editor/SceneDrawer.cs	/^        protected SceneAsset GetBuildSettingsSceneObject(string sceneName)$/;"	m	class:Mirror.SceneDrawer
GetClientAddress	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public string GetClientAddress(int connectionId)$/;"	m	class:kcp2k.KcpServer
GetClientAddress	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        public string GetClientAddress(int connectionId)$/;"	m	class:Mirror.SimpleWeb.SimpleWebServer
GetClientAddress	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        public string GetClientAddress(int id)$/;"	m	class:Mirror.SimpleWeb.WebSocketServer
GetClientAddress	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public string GetClientAddress(int connectionId)$/;"	m	class:Telepathy.Server
GetClientScheme	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        string GetClientScheme() => (sslEnabled || clientUseWss) ? SecureScheme : NormalScheme;$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport	file:
GetCloneProjectsPath	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static List<string> GetCloneProjectsPath()$/;"	m	class:ParrelSync.ClonesManager
GetCloseCode	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^        static int GetCloseCode(byte[] buffer, int msgOffset)$/;"	m	class:Mirror.SimpleWeb.ReceiveLoop	file:
GetCloseMessage	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^        static string GetCloseMessage(byte[] buffer, int msgOffset, int payloadLength)$/;"	m	class:Mirror.SimpleWeb.ReceiveLoop	file:
GetCommandInfo	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal CommandInfo GetCommandInfo(int componentIndex, int cmdHash)$/;"	m	class:Mirror.NetworkIdentity	file:
GetCommandInfo	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        internal static CommandInfo GetCommandInfo(int cmdHash, NetworkBehaviour invokingType)$/;"	m	class:Mirror.RemoteCalls.RemoteCallHelper	file:
GetCurrentProject	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static Project GetCurrentProject()$/;"	m	class:ParrelSync.ClonesManager
GetCurrentProjectPath	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static string GetCurrentProjectPath()$/;"	m	class:ParrelSync.ClonesManager
GetCustomAttribute	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static CustomAttribute GetCustomAttribute<TAttribute>(this ICustomAttributeProvid/;"	m	class:Mirror.Weaver.Extensions
GetCustomUri	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public Uri GetCustomUri() => new Uri(customAddress);$/;"	m	struct:Mirror.Cloud.ListServerService.ServerJson
GetDelegate	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        public static CmdDelegate GetDelegate(int cmdHash)$/;"	m	class:Mirror.RemoteCalls.RemoteCallHelper
GetDependecyPaths	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^        static HashSet<string> GetDependecyPaths(string assemblyPath)$/;"	m	class:Mirror.Weaver.CompilationFinishedHook	file:
GetDirectorySize	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        private static long GetDirectorySize(DirectoryInfo directory, bool includeNested = false/;"	m	class:ParrelSync.ClonesManager	file:
GetEnumUnderlyingType	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static TypeReference GetEnumUnderlyingType(this TypeDefinition td)$/;"	m	class:Mirror.Weaver.Extensions
GetEnumerator	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator() => objects.GetEnumerator(/;"	m	class:Mirror.SyncIDictionary
GetEnumerator	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public new Dictionary<TKey, TValue>.Enumerator GetEnumerator() => ((Dictionary<TKey, TVa/;"	m	class:Mirror.SyncDictionary
GetEnumerator	Assets/Mirror/Runtime/SyncList.cs	/^        IEnumerator<T> IEnumerable<T>.GetEnumerator() => new Enumerator(this);$/;"	m	class:Mirror.SyncList	file:
GetEnumerator	Assets/Mirror/Runtime/SyncList.cs	/^        public Enumerator GetEnumerator() => new Enumerator(this);$/;"	m	class:Mirror.SyncList
GetEnumerator	Assets/Mirror/Runtime/SyncSet.cs	/^        public IEnumerator<T> GetEnumerator() => objects.GetEnumerator();$/;"	m	class:Mirror.SyncSet
GetEnumerator	Assets/Mirror/Runtime/SyncSet.cs	/^        public new HashSet<T>.Enumerator GetEnumerator() => ((HashSet<T>)objects).GetEnumerator(/;"	m	class:Mirror.SyncHashSet
GetEnumerator	Assets/Mirror/Runtime/SyncSet.cs	/^        public new SortedSet<T>.Enumerator GetEnumerator() => ((SortedSet<T>)objects).GetEnumera/;"	m	class:Mirror.SyncSortedSet
GetExistingObject	Assets/Mirror/Runtime/NetworkClient.cs	/^        static NetworkIdentity GetExistingObject(uint netid)$/;"	m	class:Mirror.NetworkClient	file:
GetField	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static T GetField<T>(this CustomAttribute ca, string field, T defaultValue)$/;"	m	class:Mirror.Weaver.Extensions
GetHashCode	Assets/Mirror/Editor/Weaver/TypeReferenceComparer.cs	/^        public int GetHashCode(TypeReference obj)$/;"	m	class:Mirror.Weaver.TypeReferenceComparer
GetHookMethod	Assets/Mirror/Editor/Weaver/Processors/SyncVarProcessor.cs	/^        public static MethodDefinition GetHookMethod(TypeDefinition td, FieldDefinition syncVar)$/;"	m	class:Mirror.Weaver.SyncVarProcessor
GetInvokerForHash	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        static bool GetInvokerForHash(int cmdHash, MirrorInvokeType invokeType, out Invoker invo/;"	m	class:Mirror.RemoteCalls.RemoteCallHelper	file:
GetKey	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        static void GetKey(string msg, byte[] keyBuffer)$/;"	m	class:Mirror.SimpleWeb.ServerHandshake	file:
GetMatchId	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchGUI.cs	/^        public Guid GetMatchId()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchGUI
GetMaxBatchSize	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override int GetMaxBatchSize(int channelId) =>$/;"	m	class:kcp2k.KcpTransport
GetMaxBatchSize	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override int GetMaxBatchSize(int channelId) => wrap.GetMaxBatchSize(channelId);$/;"	m	class:Mirror.LatencySimulation
GetMaxBatchSize	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public virtual int GetMaxBatchSize(int channelId) =>$/;"	m	class:Mirror.Transport
GetMaxBehaviourLabelSize	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        Vector2 GetMaxBehaviourLabelSize(IEnumerable<NetworkBehaviourInfo> behavioursInfo)$/;"	m	class:Mirror.NetworkInformationPreview	file:
GetMaxNameLabelSize	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        Vector2 GetMaxNameLabelSize(IEnumerable<NetworkIdentityInfo> infos)$/;"	m	class:Mirror.NetworkInformationPreview	file:
GetMaxPacketSize	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override int GetMaxPacketSize(int channelId = 0)$/;"	m	class:Mirror.FallbackTransport
GetMaxPacketSize	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override int GetMaxPacketSize(int channelId = Channels.Reliable)$/;"	m	class:kcp2k.KcpTransport
GetMaxPacketSize	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override int GetMaxPacketSize(int channelId = 0) => wrap.GetMaxPacketSize(channel/;"	m	class:Mirror.LatencySimulation
GetMaxPacketSize	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^        public override int GetMaxPacketSize(int channelId = 0) => inner.GetMaxPacketSize(channe/;"	m	class:Mirror.MiddlewareTransport
GetMaxPacketSize	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override int GetMaxPacketSize(int channelId = 0)$/;"	m	class:Mirror.MultiplexTransport
GetMaxPacketSize	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override int GetMaxPacketSize(int channelId = 0)$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
GetMaxPacketSize	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override int GetMaxPacketSize(int channelId)$/;"	m	class:Mirror.TelepathyTransport
GetMaxPacketSize	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public abstract int GetMaxPacketSize(int channelId = Channels.Reliable);$/;"	m	class:Mirror.Transport
GetMessageLength	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^        static int GetMessageLength(byte[] buffer, int offset, byte lenByte)$/;"	m	class:Mirror.SimpleWeb.MessageProcessor	file:
GetMethod	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static MethodDefinition GetMethod(this TypeDefinition td, string methodName)$/;"	m	class:Mirror.Weaver.Extensions
GetMethodHash	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        internal static int GetMethodHash(Type invokeClass, string methodName)$/;"	m	class:Mirror.RemoteCalls.RemoteCallHelper	file:
GetMethodInBaseType	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static MethodDefinition GetMethodInBaseType(this TypeDefinition td, string method/;"	m	class:Mirror.Weaver.Extensions
GetMethodName	Assets/Mirror/Runtime/Extensions.cs	/^        internal static string GetMethodName(this Delegate func)$/;"	m	class:Mirror.Extensions	file:
GetMethods	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static List<MethodDefinition> GetMethods(this TypeDefinition td, string methodNam/;"	m	class:Mirror.Weaver.Extensions
GetNetworkBehaviorInfo	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        IEnumerable<NetworkBehaviourInfo> GetNetworkBehaviorInfo(NetworkIdentity identity)$/;"	m	class:Mirror.NetworkInformationPreview	file:
GetNetworkBehaviourReader	Assets/Mirror/Editor/Weaver/Readers.cs	/^        static MethodReference GetNetworkBehaviourReader(TypeReference variableReference)$/;"	m	class:Mirror.Weaver.Readers	file:
GetNetworkBehaviourWriter	Assets/Mirror/Editor/Weaver/Writers.cs	/^        static MethodReference GetNetworkBehaviourWriter(TypeReference variableReference)$/;"	m	class:Mirror.Weaver.Writers	file:
GetNetworkIdentity	Assets/Mirror/Runtime/NetworkServer.cs	/^        internal static bool GetNetworkIdentity(GameObject go, out NetworkIdentity identity)$/;"	m	class:Mirror.NetworkServer	file:
GetNetworkIdentityInfo	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        IEnumerable<NetworkIdentityInfo> GetNetworkIdentityInfo(NetworkIdentity identity)$/;"	m	class:Mirror.NetworkInformationPreview	file:
GetNextNetworkId	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal static uint GetNextNetworkId() => nextNetworkId++;$/;"	m	class:Mirror.NetworkIdentity	file:
GetOpcode	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^        public static int GetOpcode(byte[] buffer)$/;"	m	class:Mirror.SimpleWeb.MessageProcessor
GetOriginalProjectPath	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static string GetOriginalProjectPath()$/;"	m	class:ParrelSync.ClonesManager
GetPayloadLength	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^        public static int GetPayloadLength(byte[] buffer)$/;"	m	class:Mirror.SimpleWeb.MessageProcessor
GetPooledWriterReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference GetPooledWriterReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
GetPrefab	Assets/Mirror/Runtime/ClientScene.cs	/^        public static bool GetPrefab(Guid assetId, out GameObject prefab) => NetworkClient.GetPr/;"	m	class:Mirror.ClientScene
GetPrefab	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static bool GetPrefab(Guid assetId, out GameObject prefab)$/;"	m	class:Mirror.NetworkClient
GetPreviewTitle	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        public override GUIContent GetPreviewTitle()$/;"	m	class:Mirror.NetworkInformationPreview
GetPropertyHeight	Assets/Mirror/Editor/SyncVarAttributeDrawer.cs	/^        public override float GetPropertyHeight(SerializedProperty property, GUIContent label)$/;"	m	class:Mirror.SyncVarAttributeDrawer
GetReadFunc	Assets/Mirror/Editor/Weaver/Readers.cs	/^        public static MethodReference GetReadFunc(TypeReference variable)$/;"	m	class:Mirror.Weaver.Readers
GetReader	Assets/Mirror/Runtime/NetworkReaderPool.cs	/^        public static PooledNetworkReader GetReader(ArraySegment<byte> segment)$/;"	m	class:Mirror.NetworkReaderPool
GetReader	Assets/Mirror/Runtime/NetworkReaderPool.cs	/^        public static PooledNetworkReader GetReader(byte[] bytes)$/;"	m	class:Mirror.NetworkReaderPool
GetRemoteEndPoint	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public EndPoint GetRemoteEndPoint() => remoteEndpoint;$/;"	m	class:kcp2k.KcpConnection
GetRequest	Assets/Mirror/Components/Discovery/NetworkDiscovery.cs	/^        protected override ServerRequest GetRequest() => new ServerRequest();$/;"	m	class:Mirror.Discovery.NetworkDiscovery
GetRequest	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        protected virtual Request GetRequest() => default;$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase
GetSceneIdentity	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public static NetworkIdentity GetSceneIdentity(ulong id) => sceneIds[id];$/;"	m	class:Mirror.NetworkIdentity
GetServerList	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^        void GetServerList();$/;"	m	interface:Mirror.Cloud.ListServerService.IListServerClientApi
GetServerList	Assets/Mirror/Cloud/ListServer/ListServerClientApi.cs	/^        public void GetServerList()$/;"	m	class:Mirror.Cloud.ListServerService.ListServerClientApi
GetServerListRepeat	Assets/Mirror/Cloud/ListServer/ListServerClientApi.cs	/^        IEnumerator GetServerListRepeat(int interval)$/;"	m	class:Mirror.Cloud.ListServerService.ListServerClientApi	file:
GetServerScheme	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        string GetServerScheme() => sslEnabled ? SecureScheme : NormalScheme;$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport	file:
GetServerUri	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public Uri GetServerUri() => new Uri(address);$/;"	m	struct:Mirror.Cloud.ListServerService.ServerJson
GetSize	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        const int GetSize = 3;$/;"	f	class:Mirror.SimpleWeb.ServerHandshake	file:
GetStableHashCode	Assets/Mirror/Runtime/Extensions.cs	/^        public static int GetStableHashCode(this string text)$/;"	m	class:Mirror.Extensions
GetStartPosition	Assets/Mirror/Runtime/NetworkManager.cs	/^        public Transform GetStartPosition()$/;"	m	class:Mirror.NetworkManager
GetString	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        static NetworkIdentityInfo GetString(string name, string value)$/;"	m	class:Mirror.NetworkInformationPreview	file:
GetSyncVarGameObject	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected GameObject GetSyncVarGameObject(uint netId, ref GameObject gameObjectField)$/;"	m	class:Mirror.NetworkBehaviour
GetSyncVarNetworkIdentity	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected NetworkIdentity GetSyncVarNetworkIdentity(uint netId, ref NetworkIdentity iden/;"	m	class:Mirror.NetworkBehaviour
GetSyncVarStart	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public int GetSyncVarStart(string className)$/;"	m	class:Mirror.Weaver.WeaverLists
GetTotalReceiveBuffer	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        int GetTotalReceiveBuffer() =>$/;"	m	class:kcp2k.KcpTransport	file:
GetTotalReceiveQueue	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        int GetTotalReceiveQueue() =>$/;"	m	class:kcp2k.KcpTransport	file:
GetTotalSendBuffer	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        int GetTotalSendBuffer() =>$/;"	m	class:kcp2k.KcpTransport	file:
GetTotalSendQueue	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        int GetTotalSendQueue() =>$/;"	m	class:kcp2k.KcpTransport	file:
GetTrueRandomUInt	Assets/Mirror/Runtime/Utils.cs	/^        public static uint GetTrueRandomUInt()$/;"	m	class:Mirror.Utils
GetWithNeighbours	Assets/Mirror/Components/InterestManagement/SpatialHashing/Grid2D.cs	/^        public void GetWithNeighbours(Vector2Int position, HashSet<T> result)$/;"	m	class:Mirror.Grid2D
GetWriteFunc	Assets/Mirror/Editor/Weaver/Writers.cs	/^        public static MethodReference GetWriteFunc(TypeReference variable)$/;"	m	class:Mirror.Weaver.Writers
GetWriter	Assets/Mirror/Runtime/NetworkWriterPool.cs	/^        public static PooledNetworkWriter GetWriter()$/;"	m	class:Mirror.NetworkWriterPool
GitHubHome	Assets/ParrelSync/ParrelSync/Editor/ExternalLinks.cs	/^        public const string GitHubHome = "https:\/\/github.com\/VeriorPies\/ParrelSync\/";$/;"	f	class:ParrelSync.ExternalLinks
GitHubIssue	Assets/ParrelSync/ParrelSync/Editor/ExternalLinks.cs	/^        public const string GitHubIssue = "https:\/\/github.com\/VeriorPies\/ParrelSync\/issues"/;"	f	class:ParrelSync.ExternalLinks
Grid2D	Assets/Mirror/Components/InterestManagement/SpatialHashing/Grid2D.cs	/^    public class Grid2D<T>$/;"	c	namespace:Mirror
Guid	Assets/Mirror/Runtime/ClientScene.cs	/^using Guid = System.Guid;$/;"	t	file:
HandleAnimMsg	Assets/Mirror/Components/NetworkAnimator.cs	/^        void HandleAnimMsg(int stateHash, float normalizedTime, int layerId, float weight, Netwo/;"	m	class:Mirror.NetworkAnimator	file:
HandleAnimParamsMsg	Assets/Mirror/Components/NetworkAnimator.cs	/^        void HandleAnimParamsMsg(NetworkReader reader)$/;"	m	class:Mirror.NetworkAnimator	file:
HandleAnimResetTriggerMsg	Assets/Mirror/Components/NetworkAnimator.cs	/^        void HandleAnimResetTriggerMsg(int hash)$/;"	m	class:Mirror.NetworkAnimator	file:
HandleAnimTriggerMsg	Assets/Mirror/Components/NetworkAnimator.cs	/^        void HandleAnimTriggerMsg(int hash)$/;"	m	class:Mirror.NetworkAnimator	file:
HandleArrayMessage	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^        static void HandleArrayMessage(Config config, byte[] buffer, int msgOffset, int payloadL/;"	m	class:Mirror.SimpleWeb.ReceiveLoop	file:
HandleChoked	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        void HandleChoked()$/;"	m	class:kcp2k.KcpConnection	file:
HandleCloseMessage	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^        static void HandleCloseMessage(Config config, byte[] buffer, int msgOffset, int payloadL/;"	m	class:Mirror.SimpleWeb.ReceiveLoop	file:
HandleDeadLink	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        void HandleDeadLink()$/;"	m	class:kcp2k.KcpConnection	file:
HandleError	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^        static void HandleError(string msg)$/;"	m	class:Mirror.Weaver.CompilationFinishedHook	file:
HandlePing	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        void HandlePing(uint time)$/;"	m	class:kcp2k.KcpConnection	file:
HandleRemoteCall	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void HandleRemoteCall(int componentIndex, int functionHash, MirrorInvokeType in/;"	m	class:Mirror.NetworkIdentity	file:
HandleTimeout	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        void HandleTimeout(uint time)$/;"	m	class:kcp2k.KcpConnection	file:
HandleWarning	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^        static void HandleWarning(string msg)$/;"	m	class:Mirror.Weaver.CompilationFinishedHook	file:
Handshake	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpHeader.cs	/^        Handshake = 0x01,$/;"	e	enum:kcp2k.KcpHeader	file:
HandshakeAndReceiveLoop	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        void HandshakeAndReceiveLoop(Connection conn)$/;"	m	class:Mirror.SimpleWeb.WebSocketServer	file:
HandshakeGUID	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Constants.cs	/^        public const string HandshakeGUID = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";$/;"	f	class:Mirror.SimpleWeb.Constants
HandshakeGUIDBytes	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Constants.cs	/^        public static readonly byte[] HandshakeGUIDBytes = Encoding.ASCII.GetBytes(HandshakeGUID/;"	f	class:Mirror.SimpleWeb.Constants
HandshakeGUIDLength	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Constants.cs	/^        public static readonly int HandshakeGUIDLength = HandshakeGUID.Length;$/;"	f	class:Mirror.SimpleWeb.Constants
HasCustomAttribute	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static bool HasCustomAttribute<TAttribute>(this ICustomAttributeProvider attribut/;"	m	class:Mirror.Weaver.Extensions
HasEitherMovedRotatedScaled	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        bool HasEitherMovedRotatedScaled()$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
HasEitherMovedRotatedScaled	Assets/Mirror/Components/NetworkTransformBase.cs	/^        bool HasEitherMovedRotatedScaled()$/;"	m	class:Mirror.NetworkTransformBase	file:
HasMoved	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        bool HasMoved => syncPosition && Vector3.SqrMagnitude(lastPosition - targetTransform.loc/;"	f	class:Mirror.Experimental.NetworkTransformBase	file:
HasNetworkConnectionParameter	Assets/Mirror/Editor/Weaver/Processors/TargetRpcProcessor.cs	/^        public static bool HasNetworkConnectionParameter(MethodDefinition md)$/;"	m	class:Mirror.Weaver.TargetRpcProcessor
HasPreviewGUI	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        public override bool HasPreviewGUI()$/;"	m	class:Mirror.NetworkInformationPreview
HasRotated	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        bool HasRotated => syncRotation && Quaternion.Angle(lastRotation, targetTransform.localR/;"	f	class:Mirror.Experimental.NetworkTransformBase	file:
HasScaled	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        bool HasScaled => syncScale && Vector3.SqrMagnitude(lastScale - targetTransform.localSca/;"	f	class:Mirror.Experimental.NetworkTransformBase	file:
HasServerClientAttribute	Assets/Mirror/Editor/Weaver/Processors/ServerClientAttributeProcessor.cs	/^        public static bool HasServerClientAttribute(MethodDefinition md)$/;"	m	class:Mirror.Weaver.ServerClientAttributeProcessor
HasShowInInspector	Assets/Mirror/Editor/InspectorHelper.cs	/^        public static bool HasShowInInspector(this FieldInfo field)$/;"	m	class:Mirror.InspectorHelper
HeaderMinSize	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Constants.cs	/^        public const int HeaderMinSize = 2;$/;"	f	class:Mirror.SimpleWeb.Constants
HeaderSize	Assets/Mirror/Runtime/MessagePacking.cs	/^        internal const int HeaderSize = sizeof(ushort);$/;"	f	class:Mirror.MessagePacking	file:
HeaderSize	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Constants.cs	/^        public const int HeaderSize = 4;$/;"	f	class:Mirror.SimpleWeb.Constants
Helpers	Assets/Mirror/Editor/Weaver/Helpers.cs	/^    static class Helpers$/;"	c	namespace:Mirror.Weaver
HideForConnection	Assets/Mirror/Runtime/NetworkServer.cs	/^        internal static void HideForConnection(NetworkIdentity identity, NetworkConnection conn)$/;"	m	class:Mirror.NetworkServer	file:
HitFactor	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/Ball.cs	/^        float HitFactor(Vector2 ballPos, Vector2 racketPos, float racketHeight)$/;"	m	class:Mirror.Cloud.Examples.Pong.Ball	file:
HitFactor	Assets/Mirror/Examples/Pong/Scripts/Ball.cs	/^        float HitFactor(Vector2 ballPos, Vector2 racketPos, float racketHeight)$/;"	m	class:Mirror.Examples.Pong.Ball	file:
HookParameterMessage	Assets/Mirror/Editor/Weaver/Processors/SyncVarProcessor.cs	/^        static string HookParameterMessage(string hookName, TypeReference ValueType)$/;"	m	class:Mirror.Weaver.SyncVarProcessor	file:
Horizontal	Assets/Project/Scripts/Joystick/Joystick.cs	/^    public float Horizontal => _direction.x;$/;"	f	class:Joystick
Host	Assets/Mirror/Runtime/NetworkManager.cs	/^    public enum NetworkManagerMode { Offline, ServerOnly, ClientOnly, Host }$/;"	e	enum:Mirror.NetworkManagerMode	file:
HostLobby	Assets/Project/Scripts/UI/MainMenuManager.cs	/^    public void HostLobby() {$/;"	m	class:MainMenuManager
How does it work?	Assets/ParrelSync/README.md	/^## How does it work?$/;"	s
How to use	Assets/Mirror/Cloud/README.md	/^## How to use$/;"	s
HtmlCode	Assets/Mirror/Cloud/Core/JsonStructs.cs	/^        public int HtmlCode => int.Parse(code);$/;"	f	struct:Mirror.Cloud.ErrorJson
IApiConnector	Assets/Mirror/Cloud/ApiConnector.cs	/^    public interface IApiConnector$/;"	i	namespace:Mirror.Cloud
IBaseApi	Assets/Mirror/Cloud/Core/BaseApi.cs	/^    public interface IBaseApi$/;"	i	namespace:Mirror.Cloud
IBufferOwner	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^    public interface IBufferOwner$/;"	i	namespace:Mirror.SimpleWeb
ICanBeJson	Assets/Mirror/Cloud/Core/IRequestCreator.cs	/^        UnityWebRequest Patch<T>(string page, T json) where T : struct, ICanBeJson;$/;"	f	interface:Mirror.Cloud.IRequestCreator
ICanBeJson	Assets/Mirror/Cloud/Core/IRequestCreator.cs	/^        UnityWebRequest Post<T>(string page, T json) where T : struct, ICanBeJson;$/;"	f	interface:Mirror.Cloud.IRequestCreator
ICanBeJson	Assets/Mirror/Cloud/Core/IRequestCreator.cs	/^    public interface ICanBeJson {}$/;"	i	namespace:Mirror.Cloud
ICanBeJson	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        public UnityWebRequest Patch<T>(string page, T json) where T : struct, ICanBeJson$/;"	s	class:Mirror.Cloud.RequestCreator
ICanBeJson	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        public UnityWebRequest Post<T>(string page, T json) where T : struct, ICanBeJson$/;"	s	class:Mirror.Cloud.RequestCreator
ICoroutineRunner	Assets/Mirror/Cloud/Core/ICoroutineRunner.cs	/^    public interface ICoroutineRunner : IUnityEqualCheck$/;"	i	namespace:Mirror.Cloud
IEnumerable.GetEnumerator	Assets/Mirror/Runtime/SyncDictionary.cs	/^        IEnumerator IEnumerable.GetEnumerator() => objects.GetEnumerator();$/;"	m	class:Mirror.SyncIDictionary	file:
IEnumerable.GetEnumerator	Assets/Mirror/Runtime/SyncList.cs	/^        IEnumerator IEnumerable.GetEnumerator() => new Enumerator(this);$/;"	m	class:Mirror.SyncList	file:
IEnumerable.GetEnumerator	Assets/Mirror/Runtime/SyncSet.cs	/^        IEnumerator IEnumerable.GetEnumerator() => GetEnumerator();$/;"	m	class:Mirror.SyncSet	file:
IEnumerator.Current	Assets/Mirror/Runtime/SyncList.cs	/^            object IEnumerator.Current => Current;$/;"	f	struct:Mirror.SyncList.Enumerator
IListServerClientApi	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^    public interface IListServerClientApi : IBaseApi$/;"	i	namespace:Mirror.Cloud.ListServerService
IListServerServerApi	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^    public interface IListServerServerApi : IBaseApi$/;"	i	namespace:Mirror.Cloud.ListServerService
IMessageBase	Assets/Mirror/Runtime/Messages.cs	/^    public interface IMessageBase {}$/;"	i	namespace:Mirror
INTERVAL	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int INTERVAL = 100;$/;"	f	class:kcp2k.Kcp
IRequestCreator	Assets/Mirror/Cloud/Core/IRequestCreator.cs	/^    public interface IRequestCreator$/;"	i	namespace:Mirror.Cloud
IUnityEqualCheck	Assets/Mirror/Cloud/Core/IUnityEqualCheck.cs	/^    public interface IUnityEqualCheck$/;"	i	namespace:Mirror.Cloud
IdNotSet	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^        public const int IdNotSet = -1;$/;"	f	class:Mirror.SimpleWeb.Connection
IgnoreSync	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^        bool IgnoreSync => isServer || ClientWithAuthority;$/;"	f	class:Mirror.Experimental.NetworkLerpRigidbody	file:
IgnoreSync	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        bool IgnoreSync => isServer || ClientWithAuthority;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
IgnoreSync	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        bool IgnoreSync => isServer || ClientWithAuthority;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
ImplementsInterface	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static bool ImplementsInterface<TInterface>(this TypeDefinition td)$/;"	m	class:Mirror.Weaver.Extensions
ImplementsSyncObject	Assets/Mirror/Editor/Weaver/Processors/SyncObjectInitializer.cs	/^        public static bool ImplementsSyncObject(TypeReference typeRef)$/;"	m	class:Mirror.Weaver.SyncObjectInitializer
Import	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static TypeReference Import<T>() => Import(typeof(T));$/;"	m	class:Mirror.Weaver.WeaverTypes
InMessageEvent	Assets/Mirror/Runtime/NetworkDiagnostics.cs	/^        public static event Action<MessageInfo> InMessageEvent;$/;"	E	class:Mirror.NetworkDiagnostics
IncrementCreated	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        void IncrementCreated()$/;"	m	class:Mirror.SimpleWeb.BufferBucket	file:
IndexChanged	Assets/Mirror/Components/NetworkRoomPlayer.cs	/^        public virtual void IndexChanged(int oldIndex, int newIndex) {}$/;"	m	class:Mirror.NetworkRoomPlayer
IndexOf	Assets/Mirror/Runtime/SyncList.cs	/^        public int IndexOf(T item)$/;"	m	class:Mirror.SyncList
Info	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/Log.cs	/^        public static Action<string> Info = Console.WriteLine;$/;"	f	class:kcp2k.Log
Info	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^        public static void Info(string msg, bool showColor = true)$/;"	m	class:Mirror.SimpleWeb.Log
Info	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Log.cs	/^        public static Action<string> Info = Console.WriteLine;$/;"	f	class:Telepathy.Log
InfoException	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^        public static void InfoException(Exception e)$/;"	m	class:Mirror.SimpleWeb.Log
Init	Assets/Mirror/Editor/NetworkManagerEditor.cs	/^        protected void Init()$/;"	m	class:Mirror.NetworkManagerEditor
Init	Assets/Mirror/Editor/Weaver/Readers.cs	/^        public static void Init()$/;"	m	class:Mirror.Weaver.Readers
Init	Assets/Mirror/Editor/Weaver/Writers.cs	/^        public static void Init()$/;"	m	class:Mirror.Weaver.Writers
InitListServer	Assets/Mirror/Cloud/ApiConnector.cs	/^        void InitListServer()$/;"	m	class:Mirror.Cloud.ApiConnector	file:
InitSyncObject	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected void InitSyncObject(SyncObject syncObject)$/;"	m	class:Mirror.NetworkBehaviour
InitSyncObjectReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference InitSyncObjectReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
InitWindow	Assets/ParrelSync/ParrelSync/Editor/ClonesManagerWindow.cs	/^        private static void InitWindow()$/;"	m	class:ParrelSync.ClonesManagerWindow	file:
InitWindow	Assets/ParrelSync/ParrelSync/Editor/Preferences.cs	/^        private static void InitWindow()$/;"	m	class:ParrelSync.Preferences	file:
InitialSpawn	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/Spawner.cs	/^        internal static void InitialSpawn(Scene scene)$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.Spawner	file:
InitialSpawn	Assets/Mirror/Examples/Room/Scripts/Spawner.cs	/^        internal static void InitialSpawn()$/;"	m	class:Mirror.Examples.NetworkRoom.Spawner	file:
Initialize	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void Initialize()$/;"	m	class:Mirror.NetworkServer	file:
InitializeData	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal void InitializeData()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
InitializeOnLoadCountKey	Assets/ParrelSync/ParrelSync/Editor/NonCore/AskFeedbackDialog.cs	/^        const string InitializeOnLoadCountKey = "ParrelSync_InitOnLoadCount", StopShowingKey = "/;"	f	class:ParrelSync.NonCore.AskFeedbackDialog	file:
InitializeReaderAndWriters	Assets/Mirror/Editor/Weaver/Processors/ReaderWriterProcessor.cs	/^        public static void InitializeReaderAndWriters(AssemblyDefinition currentAssembly)$/;"	m	class:Mirror.Weaver.ReaderWriterProcessor
InitializeReaders	Assets/Mirror/Editor/Weaver/Readers.cs	/^        internal static void InitializeReaders(ILProcessor worker)$/;"	m	class:Mirror.Weaver.Readers	file:
InitializeSingleton	Assets/Mirror/Runtime/NetworkManager.cs	/^        bool InitializeSingleton()$/;"	m	class:Mirror.NetworkManager	file:
InitializeWriters	Assets/Mirror/Editor/Weaver/Writers.cs	/^        internal static void InitializeWriters(ILProcessor worker)$/;"	m	class:Mirror.Weaver.Writers	file:
InjectClientGuard	Assets/Mirror/Editor/Weaver/Processors/ServerClientAttributeProcessor.cs	/^        static void InjectClientGuard(MethodDefinition md, bool logWarning)$/;"	m	class:Mirror.Weaver.ServerClientAttributeProcessor	file:
InjectGuardParameters	Assets/Mirror/Editor/Weaver/Processors/ServerClientAttributeProcessor.cs	/^        static void InjectGuardParameters(MethodDefinition md, ILProcessor worker, Instruction t/;"	m	class:Mirror.Weaver.ServerClientAttributeProcessor	file:
InjectGuardReturnValue	Assets/Mirror/Editor/Weaver/Processors/ServerClientAttributeProcessor.cs	/^        static void InjectGuardReturnValue(MethodDefinition md, ILProcessor worker, Instruction /;"	m	class:Mirror.Weaver.ServerClientAttributeProcessor	file:
InjectServerGuard	Assets/Mirror/Editor/Weaver/Processors/ServerClientAttributeProcessor.cs	/^        static void InjectServerGuard(MethodDefinition md, bool logWarning)$/;"	m	class:Mirror.Weaver.ServerClientAttributeProcessor	file:
Input	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public int Input(byte[] data, int offset, int size)$/;"	m	class:kcp2k.Kcp
Insert	Assets/Mirror/Runtime/SyncList.cs	/^        public void Insert(int index, T item)$/;"	m	class:Mirror.SyncList
InsertRange	Assets/Mirror/Runtime/SyncList.cs	/^        public void InsertRange(int index, IEnumerable<T> range)$/;"	m	class:Mirror.SyncList
InsertSegmentInReceiveBuffer	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal void InsertSegmentInReceiveBuffer(Segment newseg)$/;"	m	class:kcp2k.Kcp	file:
InspectorHelper	Assets/Mirror/Editor/InspectorHelper.cs	/^    public static class InspectorHelper$/;"	c	namespace:Mirror
Installation	Assets/ParrelSync/README.md	/^## Installation$/;"	s
Instance	Assets/Project/Scripts/GameManager.cs	/^    public static GameManager Instance;$/;"	f	class:GameManager
Instance	Assets/Project/Scripts/UI/ScreenManager.cs	/^    public static ScreenManager Instance;$/;"	f	class:ScreenManager
InstantiateNetworkManager	Assets/Mirror/Examples/Cloud/GUI/Scripts/InstantiateNetworkManager.cs	/^    public class InstantiateNetworkManager : MonoBehaviour$/;"	c	namespace:Mirror.Cloud.Examples
IntToBytesBigEndianNonAlloc	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Utils.cs	/^        public static void IntToBytesBigEndianNonAlloc(int value, byte[] bytes, int offset = 0)$/;"	m	class:Telepathy.Utils
InterestManagement	Assets/Mirror/Runtime/InterestManagement.cs	/^    public abstract class InterestManagement : MonoBehaviour$/;"	c	namespace:Mirror
InternalAddPlayer	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static void InternalAddPlayer(NetworkIdentity identity)$/;"	m	class:Mirror.NetworkClient	file:
InterpolatePosition	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        Vector3 InterpolatePosition(DataPoint start, DataPoint goal, Vector3 currentPosition)$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
InterpolatePosition	Assets/Mirror/Components/NetworkTransformBase.cs	/^        static Vector3 InterpolatePosition(DataPoint start, DataPoint goal, Vector3 currentPosit/;"	m	class:Mirror.NetworkTransformBase	file:
InterpolateRotation	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        Quaternion InterpolateRotation(DataPoint start, DataPoint goal, Quaternion defaultRotati/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
InterpolateRotation	Assets/Mirror/Components/NetworkTransformBase.cs	/^        static Quaternion InterpolateRotation(DataPoint start, DataPoint goal, Quaternion defaul/;"	m	class:Mirror.NetworkTransformBase	file:
InterpolateScale	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        Vector3 InterpolateScale(DataPoint start, DataPoint goal, Vector3 currentScale)$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
InterpolateScale	Assets/Mirror/Components/NetworkTransformBase.cs	/^        Vector3 InterpolateScale(DataPoint start, DataPoint goal, Vector3 currentScale)$/;"	m	class:Mirror.NetworkTransformBase	file:
IntersectWith	Assets/Mirror/Runtime/SyncSet.cs	/^        public void IntersectWith(IEnumerable<T> other)$/;"	m	class:Mirror.SyncSet
IntersectWithSet	Assets/Mirror/Runtime/SyncSet.cs	/^        void IntersectWithSet(ISet<T> otherSet)$/;"	m	class:Mirror.SyncSet	file:
Interval	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public uint Interval = 10;$/;"	f	class:kcp2k.KcpTransport
Interval	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public uint Interval;$/;"	f	class:kcp2k.KcpServer
InvokeHandlerDelegate	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        internal static bool InvokeHandlerDelegate(int cmdHash, MirrorInvokeType invokeType, Net/;"	m	class:Mirror.RemoteCalls.RemoteCallHelper	file:
InvokeRpcPrefix	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public static string InvokeRpcPrefix => "InvokeUserCode_";$/;"	f	class:Mirror.Weaver.Weaver
InvokeUnSpawnHandler	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static bool InvokeUnSpawnHandler(Guid assetId, GameObject obj)$/;"	m	class:Mirror.NetworkClient	file:
Invoker	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^    class Invoker$/;"	c	namespace:Mirror.RemoteCalls
Is	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static bool Is(this TypeReference td, Type t)$/;"	m	class:Mirror.Weaver.Extensions
Is	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static bool Is<T>(this TypeReference td) => Is(td, typeof(T));$/;"	m	class:Mirror.Weaver.Extensions
IsActive	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public bool IsActive() => socket != null;$/;"	m	class:kcp2k.KcpServer
IsAlive	Assets/Mirror/Runtime/LocalConnections.cs	/^        internal override bool IsAlive(float timeout) => true;$/;"	m	class:Mirror.LocalConnectionToClient	file:
IsAlive	Assets/Mirror/Runtime/LocalConnections.cs	/^        internal override bool IsAlive(float timeout) => true;$/;"	m	class:Mirror.LocalConnectionToServer	file:
IsCallToMethod	Assets/Mirror/Editor/Weaver/Processors/MethodProcessor.cs	/^        static bool IsCallToMethod(Instruction instruction, out MethodDefinition calledMethod)$/;"	m	class:Mirror.Weaver.MethodProcessor	file:
IsClientWithAuthority	Assets/Mirror/Components/NetworkTransformBase.cs	/^        bool IsClientWithAuthority => hasAuthority && clientAuthority;$/;"	f	class:Mirror.NetworkTransformBase	file:
IsClone	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static bool IsClone()$/;"	m	class:ParrelSync.ClonesManager
IsCloneProjectRunning	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static bool IsCloneProjectRunning(string projectPath)$/;"	m	class:ParrelSync.ClonesManager
IsConnected	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/SimpleWebJSLib.cs	/^        internal static extern bool IsConnected(int index);$/;"	m	class:Mirror.SimpleWeb.SimpleWebJSLib	file:
IsDerivedFrom	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static bool IsDerivedFrom(this TypeReference tr, Type baseClass)$/;"	m	class:Mirror.Weaver.Extensions
IsDerivedFrom	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static bool IsDerivedFrom<T>(this TypeReference tr) => IsDerivedFrom(tr, typeof(T/;"	m	class:Mirror.Weaver.Extensions
IsDirty	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public bool IsDirty()$/;"	m	class:Mirror.NetworkBehaviour
IsDirty	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public bool IsDirty => changes.Count > 0;$/;"	f	class:Mirror.SyncIDictionary
IsDirty	Assets/Mirror/Runtime/SyncList.cs	/^        public bool IsDirty => changes.Count > 0;$/;"	f	class:Mirror.SyncList
IsDirty	Assets/Mirror/Runtime/SyncObject.cs	/^        bool IsDirty { get; }$/;"	p	interface:Mirror.SyncObject
IsDirty	Assets/Mirror/Runtime/SyncSet.cs	/^        public bool IsDirty => changes.Count > 0;$/;"	f	class:Mirror.SyncSet
IsEditorAssembly	Assets/Mirror/Editor/Weaver/Processors/ReaderWriterProcessor.cs	/^        static bool IsEditorAssembly(AssemblyDefinition currentAssembly)$/;"	m	class:Mirror.Weaver.ReaderWriterProcessor	file:
IsFileLocked	Assets/ParrelSync/ParrelSync/Editor/FileUtilities.cs	/^        public static bool IsFileLocked(string path)$/;"	m	class:ParrelSync.FileUtilities
IsGet	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        static bool IsGet(byte[] getHeader)$/;"	m	class:Mirror.SimpleWeb.ServerHandshake	file:
IsMultidimensionalArray	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static bool IsMultidimensionalArray(this TypeReference tr)$/;"	m	class:Mirror.Weaver.Extensions
IsNetworkIdentityField	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static bool IsNetworkIdentityField(this TypeReference tr)$/;"	m	class:Mirror.Weaver.Extensions
IsNotNull	Assets/Mirror/Cloud/Core/IUnityEqualCheck.cs	/^        public static bool IsNotNull(this IUnityEqualCheck obj)$/;"	m	class:Mirror.Cloud.UnityEqualCheckExtension
IsNull	Assets/Mirror/Cloud/Core/IUnityEqualCheck.cs	/^        public static bool IsNull(this IUnityEqualCheck obj)$/;"	m	class:Mirror.Cloud.UnityEqualCheckExtension
IsOk	Assets/Mirror/Cloud/Core/Extensions.cs	/^        public static bool IsOk(this UnityWebRequest webRequest)$/;"	m	class:Mirror.Cloud.Extensions
IsOwnerWithClientAuthority	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        bool IsOwnerWithClientAuthority => hasAuthority && clientAuthority;$/;"	f	class:Mirror.Experimental.NetworkTransformBase	file:
IsPrefab	Assets/Mirror/Runtime/Utils.cs	/^        public static bool IsPrefab(GameObject obj)$/;"	m	class:Mirror.Utils
IsQuiting	Assets/ParrelSync/ParrelSync/Editor/AssetModBlock/EditorQuit.cs	/^        static public bool IsQuiting { get; private set; }$/;"	p	class:ParrelSync.EditorQuit
IsReadOnly	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public bool IsReadOnly { get; private set; }$/;"	p	class:Mirror.SyncIDictionary
IsReadOnly	Assets/Mirror/Runtime/SyncList.cs	/^        public bool IsReadOnly { get; private set; }$/;"	p	class:Mirror.SyncList
IsReadOnly	Assets/Mirror/Runtime/SyncSet.cs	/^        public bool IsReadOnly { get; private set; }$/;"	p	class:Mirror.SyncSet
IsReady	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    public bool IsReady;$/;"	f	class:LobbyPlayer
IsSceneActive	Assets/Mirror/Runtime/NetworkManager.cs	/^        public static bool IsSceneActive(string scene)$/;"	m	class:Mirror.NetworkManager
IsSceneObjectWithPrefabParent	Assets/Mirror/Runtime/Utils.cs	/^        public static bool IsSceneObjectWithPrefabParent(GameObject gameObject, out GameObject p/;"	m	class:Mirror.Utils
IsSenderConnection	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public static bool IsSenderConnection(ParameterDefinition param, RemoteCallType callType/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor
IsSerializeField	Assets/Mirror/Editor/InspectorHelper.cs	/^        public static bool IsSerializeField(this FieldInfo field)$/;"	m	class:Mirror.InspectorHelper
IsServerOnlineSceneChangeNeeded	Assets/Mirror/Runtime/NetworkManager.cs	/^        bool IsServerOnlineSceneChangeNeeded()$/;"	m	class:Mirror.NetworkManager	file:
IsSyncObject	Assets/Mirror/Editor/InspectorHelper.cs	/^        public static bool IsSyncObject(this FieldInfo field)$/;"	m	class:Mirror.InspectorHelper
IsSyncVar	Assets/Mirror/Editor/InspectorHelper.cs	/^        public static bool IsSyncVar(this FieldInfo field)$/;"	m	class:Mirror.InspectorHelper
IsVisibleField	Assets/Mirror/Editor/InspectorHelper.cs	/^        public static bool IsVisibleField(this FieldInfo field)$/;"	m	class:Mirror.InspectorHelper
IsVisibleSyncObject	Assets/Mirror/Editor/InspectorHelper.cs	/^        public static bool IsVisibleSyncObject(this FieldInfo field)$/;"	m	class:Mirror.InspectorHelper
Join	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        Join,$/;"	e	enum:Mirror.Examples.MultipleMatch.ServerMatchOperation	file:
JoinLobby	Assets/Project/Scripts/UI/MainMenuManager.cs	/^    public void JoinLobby() {$/;"	m	class:MainMenuManager
Joined	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        Joined,$/;"	e	enum:Mirror.Examples.MultipleMatch.ClientMatchOperation	file:
Joystick	Assets/Project/Scripts/Joystick/Joystick.cs	/^public abstract class Joystick : MonoBehaviour, IPointerDownHandler, IDragHandler, IPointerUpHan/;"	c
Kcp	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public Kcp(uint conv, Action<byte[], int> output)$/;"	m	class:kcp2k.Kcp
Kcp	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^    public class Kcp$/;"	c	namespace:kcp2k
KcpChannel	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpChannel.cs	/^    public enum KcpChannel : byte$/;"	g	namespace:kcp2k
KcpClient	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^        public KcpClient(Action OnConnected, Action<ArraySegment<byte>> OnData, Action OnDisconn/;"	m	class:kcp2k.KcpClient
KcpClient	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^    public class KcpClient$/;"	c	namespace:kcp2k
KcpClientConnection	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClientConnection.cs	/^    public class KcpClientConnection : KcpConnection$/;"	c	namespace:kcp2k
KcpConnection	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^    public abstract class KcpConnection$/;"	c	namespace:kcp2k
KcpHeader	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpHeader.cs	/^    public enum KcpHeader : byte$/;"	g	namespace:kcp2k
KcpServer	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public KcpServer(Action<int> OnConnected,$/;"	m	class:kcp2k.KcpServer
KcpServer	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^    public class KcpServer$/;"	c	namespace:kcp2k
KcpServerConnection	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServerConnection.cs	/^        public KcpServerConnection(Socket socket, EndPoint remoteEndpoint, bool noDelay, uint in/;"	m	class:kcp2k.KcpServerConnection
KcpServerConnection	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServerConnection.cs	/^    public class KcpServerConnection : KcpConnection$/;"	c	namespace:kcp2k
KcpState	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^    enum KcpState { Connected, Authenticated, Disconnected }$/;"	g	namespace:kcp2k
KcpTransport	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^    public class KcpTransport : Transport$/;"	c	namespace:kcp2k
Key features	Assets/Mirror/Cloud/README.md	/^### Key features$/;"	S
KeyHeaderString	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        const string KeyHeaderString = "Sec-WebSocket-Key: ";$/;"	f	class:Mirror.SimpleWeb.ServerHandshake	file:
KeyLength	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        const int KeyLength = 24;$/;"	f	class:Mirror.SimpleWeb.ServerHandshake	file:
KeyValue	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public KeyValue(string key, string value)$/;"	m	struct:Mirror.Cloud.ListServerService.KeyValue
KeyValue	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^    public struct KeyValue$/;"	s	namespace:Mirror.Cloud.ListServerService
Keys	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public ICollection<TKey> Keys => objects.Keys;$/;"	f	class:Mirror.SyncIDictionary
KickClient	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        public bool KickClient(int connectionId)$/;"	m	class:Mirror.SimpleWeb.SimpleWebServer
LEVEL01_SCENE_NAME	Assets/Project/Scripts/GameManager.cs	/^    public const string LEVEL01_SCENE_NAME = "Level01";$/;"	f	class:GameManager
LOBBY_OBJECT_NAME	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    private const string LOBBY_OBJECT_NAME = "Lobby";$/;"	f	class:LobbyPlayer	file:
LOBBY_PLAYERS_OBJECT_NAME	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    private const string LOBBY_PLAYERS_OBJECT_NAME = "LobbyPlayers";$/;"	f	class:LobbyPlayer	file:
LOBBY_SCENE_NAME	Assets/Project/Scripts/GameManager.cs	/^    public const string LOBBY_SCENE_NAME = "Lobby";$/;"	f	class:GameManager
LargestAbsoluteComponentIndex	Assets/Mirror/Runtime/Compression.cs	/^        public static int LargestAbsoluteComponentIndex(Vector4 value, out float largest, out Ve/;"	m	class:Mirror.Compression
LateUpdate	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void LateUpdate()$/;"	m	class:Mirror.NetworkManager
LateUpdate	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public void LateUpdate() {}$/;"	m	class:Mirror.Transport
LatencySimulation	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^    public class LatencySimulation : Transport$/;"	c	namespace:Mirror
Leave	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        Leave,$/;"	e	enum:Mirror.Examples.MultipleMatch.ServerMatchOperation	file:
LeftCol	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        LeftCol = A1 + A2 + A3,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
Length	Assets/Mirror/Runtime/NetworkReader.cs	/^        public int Length => buffer.Count;$/;"	f	class:Mirror.NetworkReader
Length	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public int Length => length;$/;"	f	class:Mirror.NetworkWriter
Levels	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^        public enum Levels$/;"	g	class:Mirror.SimpleWeb.Log
LinkFolders	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static void LinkFolders(string sourcePath, string destinationPath)$/;"	m	class:ParrelSync.ClonesManager
List	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        List,$/;"	e	enum:Mirror.Examples.MultipleMatch.ClientMatchOperation	file:
List Server Examples	Assets/Mirror/Cloud/README.md	/^## List Server Examples$/;"	s
ListServer	Assets/Mirror/Cloud/ApiConnector.cs	/^        ListServer ListServer { get; }$/;"	p	interface:Mirror.Cloud.IApiConnector
ListServer	Assets/Mirror/Cloud/ApiConnector.cs	/^        public ListServer ListServer { get; private set; }$/;"	p	class:Mirror.Cloud.ApiConnector
ListServer	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^        public ListServer(IListServerServerApi serverApi, IListServerClientApi clientApi)$/;"	m	class:Mirror.Cloud.ListServerService.ListServer
ListServer	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^    public sealed class ListServer$/;"	c	namespace:Mirror.Cloud.ListServerService
ListServerBaseApi	Assets/Mirror/Cloud/ListServer/ListServerBaseApi.cs	/^        protected ListServerBaseApi(ICoroutineRunner runner, IRequestCreator requestCreator) : b/;"	m	class:Mirror.Cloud.ListServerService.ListServerBaseApi
ListServerBaseApi	Assets/Mirror/Cloud/ListServer/ListServerBaseApi.cs	/^    public abstract class ListServerBaseApi : BaseApi$/;"	c	namespace:Mirror.Cloud.ListServerService
ListServerClientApi	Assets/Mirror/Cloud/ListServer/ListServerClientApi.cs	/^        public ListServerClientApi(ICoroutineRunner runner, IRequestCreator requestCreator, Serv/;"	m	class:Mirror.Cloud.ListServerService.ListServerClientApi
ListServerClientApi	Assets/Mirror/Cloud/ListServer/ListServerClientApi.cs	/^    public sealed class ListServerClientApi : ListServerBaseApi, IListServerClientApi$/;"	c	namespace:Mirror.Cloud.ListServerService
ListServerServerApi	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        public ListServerServerApi(ICoroutineRunner runner, IRequestCreator requestCreator) : ba/;"	m	class:Mirror.Cloud.ListServerService.ListServerServerApi
ListServerServerApi	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^    public sealed class ListServerServerApi : ListServerBaseApi, IListServerServerApi$/;"	c	namespace:Mirror.Cloud.ListServerService
Listen	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void Listen(int maxConns)$/;"	m	class:Mirror.NetworkServer
Listen	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        public void Listen(int port)$/;"	m	class:Mirror.SimpleWeb.WebSocketServer
Listen	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        void Listen(int port)$/;"	m	class:Telepathy.Server	file:
Load	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SslConfigLoader.cs	/^        internal static SslConfig Load(SimpleWebTransport transport)$/;"	m	class:Mirror.SimpleWeb.SslConfigLoader	file:
LoadAdditive	Assets/Mirror/Runtime/Messages.cs	/^        LoadAdditive,$/;"	e	enum:Mirror.SceneOperation	file:
LoadCertJson	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SslConfigLoader.cs	/^        internal static Cert LoadCertJson(string certJsonPath)$/;"	m	class:Mirror.SimpleWeb.SslConfigLoader	file:
LoadDeclaredReaders	Assets/Mirror/Editor/Weaver/Processors/ReaderWriterProcessor.cs	/^        static bool LoadDeclaredReaders(AssemblyDefinition currentAssembly, TypeDefinition klass/;"	m	class:Mirror.Weaver.ReaderWriterProcessor	file:
LoadDeclaredWriters	Assets/Mirror/Editor/Weaver/Processors/ReaderWriterProcessor.cs	/^        static bool LoadDeclaredWriters(AssemblyDefinition currentAssembly, TypeDefinition klass/;"	m	class:Mirror.Weaver.ReaderWriterProcessor	file:
LoadMessageReadWriter	Assets/Mirror/Editor/Weaver/Processors/ReaderWriterProcessor.cs	/^        static bool LoadMessageReadWriter(ModuleDefinition module, TypeDefinition klass)$/;"	m	class:Mirror.Weaver.ReaderWriterProcessor	file:
LoadSubScenes	Assets/Mirror/Examples/AdditiveScenes/Scripts/AdditiveNetworkManager.cs	/^        IEnumerator LoadSubScenes()$/;"	m	class:Mirror.Examples.Additive.AdditiveNetworkManager	file:
LobbyManager	Assets/Project/Scripts/UI/LobbyManager.cs	/^public class LobbyManager : MonoBehaviour {$/;"	c
LobbyPlayer	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^public class LobbyPlayer : NetworkBehaviour {$/;"	c
LocalConnectionId	Assets/Mirror/Runtime/NetworkConnection.cs	/^        public const int LocalConnectionId = 0;$/;"	f	class:Mirror.NetworkConnection
LocalConnectionToClient	Assets/Mirror/Runtime/LocalConnections.cs	/^        public LocalConnectionToClient() : base(LocalConnectionId, false, 0) {}$/;"	m	class:Mirror.LocalConnectionToClient
LocalConnectionToClient	Assets/Mirror/Runtime/LocalConnections.cs	/^    class LocalConnectionToClient : NetworkConnectionToClient$/;"	c	namespace:Mirror
LocalConnectionToServer	Assets/Mirror/Runtime/LocalConnections.cs	/^    internal class LocalConnectionToServer : NetworkConnectionToServer$/;"	c	namespace:Mirror
LocalTime	Assets/Mirror/Runtime/NetworkTime.cs	/^        static double LocalTime() => stopwatch.Elapsed.TotalSeconds;$/;"	m	class:Mirror.NetworkTime	file:
LocalVersion	Assets/ParrelSync/ParrelSync/Editor/UpdateChecker.cs	/^        public const string LocalVersion = "1.5.0";$/;"	f	class:ParrelSync.Update.UpdateChecker
Log	Assets/Mirror/Cloud/Core/Logger.cs	/^        internal static void Log(string msg)$/;"	m	class:Mirror.Cloud.Logger	file:
Log	Assets/Mirror/Editor/Weaver/Log.cs	/^    public static class Log$/;"	c	namespace:Mirror.Weaver
Log	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/Log.cs	/^    public static class Log$/;"	c	namespace:kcp2k
Log	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^    public static class Log$/;"	c	namespace:Mirror.SimpleWeb
Log	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Log.cs	/^    public static class Log$/;"	c	namespace:Telepathy
LogEntry	Assets/Mirror/Components/GUIConsole.cs	/^        public LogEntry(string message, LogType type)$/;"	m	struct:Mirror.LogEntry
LogEntry	Assets/Mirror/Components/GUIConsole.cs	/^    struct LogEntry$/;"	s	namespace:Mirror
LogError	Assets/Mirror/Cloud/Core/Logger.cs	/^        internal static void LogError(string msg)$/;"	m	class:Mirror.Cloud.Logger	file:
LogLevels	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public Log.Levels LogLevels$/;"	p	class:Mirror.SimpleWeb.SimpleWebTransport
LogRequest	Assets/Mirror/Cloud/Core/Logger.cs	/^        public static void LogRequest(string page, string method, bool hasJson, string json)$/;"	m	class:Mirror.Cloud.Logger
LogResponse	Assets/Mirror/Cloud/Core/Logger.cs	/^        public static void LogResponse(UnityWebRequest statusRequest)$/;"	m	class:Mirror.Cloud.Logger
LogWarning	Assets/Mirror/Cloud/Core/Logger.cs	/^        internal static void LogWarning(string msg)$/;"	m	class:Mirror.Cloud.Logger	file:
Logger	Assets/Mirror/Cloud/Core/Logger.cs	/^    public static class Logger$/;"	c	namespace:Mirror.Cloud
Login	Assets/Project/Scripts/UI/LoginManager.cs	/^    public void Login() {$/;"	m	class:LoginManager
LoginManager	Assets/Project/Scripts/UI/LoginManager.cs	/^public class LoginManager : MonoBehaviour {$/;"	c
Loop	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^        public static void Loop(Config config)$/;"	m	class:Mirror.SimpleWeb.ReceiveLoop
Loop	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^        public static void Loop(Config config)$/;"	m	class:Mirror.SimpleWeb.SendLoop
MAIN_MENU_SCENE_NAME	Assets/Project/Scripts/GameManager.cs	/^    public const string MAIN_MENU_SCENE_NAME = "MainMenu";$/;"	f	class:GameManager
MTU_DEF	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int MTU_DEF = 1200;           \/\/ default MTU (reduced to 1200 to fit all /;"	f	class:kcp2k.Kcp
MagnificentReceivePipe	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^        public MagnificentReceivePipe(int MaxMessageSize)$/;"	m	class:Telepathy.MagnificentReceivePipe
MagnificentReceivePipe	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^    public class MagnificentReceivePipe$/;"	c	namespace:Telepathy
MagnificentSendPipe	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentSendPipe.cs	/^        public MagnificentSendPipe(int MaxMessageSize)$/;"	m	class:Telepathy.MagnificentSendPipe
MagnificentSendPipe	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentSendPipe.cs	/^    public class MagnificentSendPipe$/;"	c	namespace:Telepathy
MainMenuManager	Assets/Project/Scripts/UI/MainMenuManager.cs	/^public class MainMenuManager : MonoBehaviour {$/;"	c
MakeGeneric	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static MethodReference MakeGeneric(this MethodReference generic, TypeReference va/;"	m	class:Mirror.Weaver.Extensions
MakeHostInstanceGeneric	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static MethodReference MakeHostInstanceGeneric(this MethodReference self, Generic/;"	m	class:Mirror.Weaver.Extensions
MakePlay	Assets/Mirror/Examples/MultipleMatches/Scripts/CellGUI.cs	/^        public void MakePlay()$/;"	m	class:Mirror.Examples.MultipleMatch.CellGUI
MarkAsProcessed	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public static void MarkAsProcessed(TypeDefinition td)$/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor
MaskHelper	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^            public MaskHelper()$/;"	m	class:Mirror.SimpleWeb.SendLoop.MaskHelper
MaskHelper	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^        sealed class MaskHelper : IDisposable$/;"	c	class:Mirror.SimpleWeb.SendLoop
MaskSize	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Constants.cs	/^        public const int MaskSize = 4;$/;"	f	class:Mirror.SimpleWeb.Constants
MatchCells	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        internal readonly Dictionary<CellValue, CellGUI> MatchCells = new Dictionary<CellValue, /;"	f	class:Mirror.Examples.MultipleMatch.MatchController	file:
MatchController	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^    public class MatchController : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.MultipleMatch
MatchFoundEvent	Assets/Mirror/Cloud/Core/Events.cs	/^    public class MatchFoundEvent : UnityEvent<ServerJson> {}$/;"	c	namespace:Mirror.Cloud
MatchGUI	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchGUI.cs	/^    public class MatchGUI : MonoBehaviour$/;"	c	namespace:Mirror.Examples.MultipleMatch
MatchInfo	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^    public struct MatchInfo$/;"	s	namespace:Mirror.Examples.MultipleMatch
MatchNetworkManager	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchNetworkManager.cs	/^    public class MatchNetworkManager : NetworkManager$/;"	c	namespace:Mirror.Examples.MultipleMatch
MatchPlayerData	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^    public struct MatchPlayerData$/;"	s	namespace:Mirror.Examples.MultipleMatch
MatchesParameters	Assets/Mirror/Editor/Weaver/Processors/SyncVarProcessor.cs	/^        static bool MatchesParameters(FieldDefinition syncVar, MethodDefinition method)$/;"	m	class:Mirror.Weaver.SyncVarProcessor	file:
MaxCloneProjectCount	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public const int MaxCloneProjectCount = 10;$/;"	f	class:ParrelSync.ClonesManager
MaxCustomData	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        const int MaxCustomData = 16;$/;"	f	class:Mirror.Cloud.ListServerService.CustomDataHelper	file:
MaxKeySize	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        const int MaxKeySize = 32;$/;"	f	struct:Mirror.Cloud.ListServerService.KeyValue
MaxMessageSize	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Common.cs	/^        public readonly int MaxMessageSize;$/;"	f	class:Telepathy.Common
MaxPingFails	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        const int MaxPingFails = 15;$/;"	f	class:Mirror.Cloud.ListServerService.ListServerServerApi	file:
MaxReceiveRate	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public uint MaxReceiveRate =>$/;"	f	class:kcp2k.KcpConnection
MaxSendRate	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public uint MaxSendRate =>$/;"	f	class:kcp2k.KcpConnection
MaxStringLength	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public const int MaxStringLength = 1024 * 32;$/;"	f	class:Mirror.NetworkWriter
MaxValueSize	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        const int MaxValueSize = 256;$/;"	f	struct:Mirror.Cloud.ListServerService.KeyValue
MemberReference	Assets/Mirror/Editor/Weaver/WeaverExceptions.cs	/^        public MemberReference MemberReference { get; }$/;"	p	class:Mirror.Weaver.WeaverException
MergedKeyLength	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        const int MergedKeyLength = 60;$/;"	f	class:Mirror.SimpleWeb.ServerHandshake	file:
Message	Assets/Mirror/Runtime/NetworkVisibility.cs	/^        public const string Message = "Per-NetworkIdentity Interest Management is being replaced/;"	f	class:Mirror.NetworkVisibilityObsoleteMessage
Message	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Message.cs	/^        public Message(ArrayBuffer data) : this()$/;"	m	struct:Mirror.SimpleWeb.Message
Message	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Message.cs	/^        public Message(EventType type) : this()$/;"	m	struct:Mirror.SimpleWeb.Message
Message	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Message.cs	/^        public Message(Exception exception) : this()$/;"	m	struct:Mirror.SimpleWeb.Message
Message	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Message.cs	/^        public Message(int connId, ArrayBuffer data) : this()$/;"	m	struct:Mirror.SimpleWeb.Message
Message	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Message.cs	/^        public Message(int connId, EventType type) : this()$/;"	m	struct:Mirror.SimpleWeb.Message
Message	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Message.cs	/^        public Message(int connId, Exception exception) : this()$/;"	m	struct:Mirror.SimpleWeb.Message
Message	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Message.cs	/^    public struct Message$/;"	s	namespace:Mirror.SimpleWeb
MessageBase	Assets/Mirror/Runtime/Messages.cs	/^    public class MessageBase : IMessageBase {}$/;"	c	namespace:Mirror
MessageCallback	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^        static void MessageCallback(int index, IntPtr bufferPtr, int count) => instances[index]./;"	m	class:Mirror.SimpleWeb.WebSocketClientWebGl	file:
MessageInfo	Assets/Mirror/Runtime/NetworkDiagnostics.cs	/^            internal MessageInfo(NetworkMessage message, int channel, int bytes, int count)$/;"	m	struct:Mirror.NetworkDiagnostics.MessageInfo
MessageInfo	Assets/Mirror/Runtime/NetworkDiagnostics.cs	/^        public readonly struct MessageInfo$/;"	s	class:Mirror.NetworkDiagnostics
MessagePacking	Assets/Mirror/Runtime/MessagePacking.cs	/^    public static class MessagePacking$/;"	c	namespace:Mirror
MessageProcessor	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^    public static class MessageProcessor$/;"	c	namespace:Mirror.SimpleWeb
MethodProcessor	Assets/Mirror/Editor/Weaver/Processors/MethodProcessor.cs	/^    public static class MethodProcessor$/;"	c	namespace:Mirror.Weaver
MidCol	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        MidCol = B1 + B2 + B3,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
MidRow	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        MidRow = A2 + B2 + C2,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
MiddlewareTransport	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^    public abstract class MiddlewareTransport : Transport$/;"	c	namespace:Mirror
Mirror	Assets/Mirror/CompilerSymbols/PreprocessorDefine.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/GUIConsole.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/InterestManagement/Distance/DistanceInterestManagement.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/InterestManagement/SpatialHashing/Grid2D.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/NetworkAnimator.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/NetworkLobbyManager.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/NetworkLobbyPlayer.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/NetworkMatchChecker.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/NetworkOwnerChecker.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/NetworkPingDisplay.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/NetworkProximityChecker.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/NetworkRoomManager.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/NetworkRoomPlayer.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/NetworkSceneChecker.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/NetworkTransform.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/NetworkTransformBase.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Components/NetworkTransformChild.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Editor/EditorHelper.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Editor/EnterPlayModeSettingsCheck.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Editor/InspectorHelper.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Editor/NetworkManagerEditor.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Editor/NetworkScenePostProcess.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Editor/SceneDrawer.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Editor/SyncVarAttributeDrawer.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/Attributes.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/ClientScene.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/Compression.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/ExponentialMovingAverage.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/Extensions.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/InterestManagement.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/LocalConnections.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/MessagePacking.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/Messages.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkClient.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkConnection.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkConnectionToClient.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkConnectionToServer.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkDiagnostics.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkIdentity.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkLoop.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkManager.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkManagerHUD.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkMessage.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkReader.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkReaderPool.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkServer.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkStartPosition.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkTime.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkVisibility.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkWriter.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/NetworkWriterPool.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/Pool.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/SyncDictionary.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/SyncList.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/SyncObject.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/SyncSet.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/Transport/Transport.cs	/^namespace Mirror$/;"	n
Mirror	Assets/Mirror/Runtime/Utils.cs	/^namespace Mirror$/;"	n
Mirror Cloud Services	Assets/Mirror/Cloud/README.md	/^# Mirror Cloud Services$/;"	c
Mirror List Server	Assets/Mirror/Cloud/README.md	/^## Mirror List Server$/;"	s
Mirror.Authenticators	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^namespace Mirror.Authenticators$/;"	n
Mirror.Authenticators	Assets/Mirror/Authenticators/TimeoutAuthenticator.cs	/^namespace Mirror.Authenticators$/;"	n
Mirror.Cloud	Assets/Mirror/Cloud/ApiConnector.cs	/^namespace Mirror.Cloud$/;"	n
Mirror.Cloud	Assets/Mirror/Cloud/Core/BaseApi.cs	/^namespace Mirror.Cloud$/;"	n
Mirror.Cloud	Assets/Mirror/Cloud/Core/Events.cs	/^namespace Mirror.Cloud$/;"	n
Mirror.Cloud	Assets/Mirror/Cloud/Core/Extensions.cs	/^namespace Mirror.Cloud$/;"	n
Mirror.Cloud	Assets/Mirror/Cloud/Core/ICoroutineRunner.cs	/^namespace Mirror.Cloud$/;"	n
Mirror.Cloud	Assets/Mirror/Cloud/Core/IRequestCreator.cs	/^namespace Mirror.Cloud$/;"	n
Mirror.Cloud	Assets/Mirror/Cloud/Core/IUnityEqualCheck.cs	/^namespace Mirror.Cloud$/;"	n
Mirror.Cloud	Assets/Mirror/Cloud/Core/JsonStructs.cs	/^namespace Mirror.Cloud$/;"	n
Mirror.Cloud	Assets/Mirror/Cloud/Core/Logger.cs	/^namespace Mirror.Cloud$/;"	n
Mirror.Cloud	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^namespace Mirror.Cloud$/;"	n
Mirror.Cloud.Example	Assets/Mirror/Examples/Cloud/GUI/Scripts/ApiUpdater.cs	/^namespace Mirror.Cloud.Example$/;"	n
Mirror.Cloud.Example	Assets/Mirror/Examples/Cloud/GUI/Scripts/NetworkManagerListServer.cs	/^namespace Mirror.Cloud.Example$/;"	n
Mirror.Cloud.Example	Assets/Mirror/Examples/Cloud/GUI/Scripts/QuickListServerDebug.cs	/^namespace Mirror.Cloud.Example$/;"	n
Mirror.Cloud.Example	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListManager.cs	/^namespace Mirror.Cloud.Example$/;"	n
Mirror.Cloud.Example	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUI.cs	/^namespace Mirror.Cloud.Example$/;"	n
Mirror.Cloud.Example	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUIItem.cs	/^namespace Mirror.Cloud.Example$/;"	n
Mirror.Cloud.Example	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/NetworkManagerListServerPong.cs	/^namespace Mirror.Cloud.Example$/;"	n
Mirror.Cloud.Examples	Assets/Mirror/Examples/Cloud/GUI/Scripts/InstantiateNetworkManager.cs	/^namespace Mirror.Cloud.Examples$/;"	n
Mirror.Cloud.Examples.Pong	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/Ball.cs	/^namespace Mirror.Cloud.Examples.Pong$/;"	n
Mirror.Cloud.Examples.Pong	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/BallManager.cs	/^namespace Mirror.Cloud.Examples.Pong$/;"	n
Mirror.Cloud.Examples.Pong	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/Player.cs	/^namespace Mirror.Cloud.Examples.Pong$/;"	n
Mirror.Cloud.ListServerService	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^namespace Mirror.Cloud.ListServerService$/;"	n
Mirror.Cloud.ListServerService	Assets/Mirror/Cloud/ListServer/ListServerBaseApi.cs	/^namespace Mirror.Cloud.ListServerService$/;"	n
Mirror.Cloud.ListServerService	Assets/Mirror/Cloud/ListServer/ListServerClientApi.cs	/^namespace Mirror.Cloud.ListServerService$/;"	n
Mirror.Cloud.ListServerService	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^namespace Mirror.Cloud.ListServerService$/;"	n
Mirror.Cloud.ListServerService	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^namespace Mirror.Cloud.ListServerService$/;"	n
Mirror.Discovery	Assets/Mirror/Components/Discovery/NetworkDiscovery.cs	/^namespace Mirror.Discovery$/;"	n
Mirror.Discovery	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^namespace Mirror.Discovery$/;"	n
Mirror.Discovery	Assets/Mirror/Components/Discovery/NetworkDiscoveryHUD.cs	/^namespace Mirror.Discovery$/;"	n
Mirror.Discovery	Assets/Mirror/Components/Discovery/ServerRequest.cs	/^namespace Mirror.Discovery$/;"	n
Mirror.Discovery	Assets/Mirror/Components/Discovery/ServerResponse.cs	/^namespace Mirror.Discovery$/;"	n
Mirror.Examples.Additive	Assets/Mirror/Examples/AdditiveScenes/Scripts/AdditiveNetworkManager.cs	/^namespace Mirror.Examples.Additive$/;"	n
Mirror.Examples.Additive	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^namespace Mirror.Examples.Additive$/;"	n
Mirror.Examples.Additive	Assets/Mirror/Examples/AdditiveScenes/Scripts/RandomColor.cs	/^namespace Mirror.Examples.Additive$/;"	n
Mirror.Examples.Additive	Assets/Mirror/Examples/AdditiveScenes/Scripts/ShootingTankBehaviour.cs	/^namespace Mirror.Examples.Additive$/;"	n
Mirror.Examples.Additive	Assets/Mirror/Examples/AdditiveScenes/Scripts/ZoneHandler.cs	/^namespace Mirror.Examples.Additive$/;"	n
Mirror.Examples.Basic	Assets/Mirror/Examples/Basic/Scripts/BasicNetManager.cs	/^namespace Mirror.Examples.Basic$/;"	n
Mirror.Examples.Basic	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^namespace Mirror.Examples.Basic$/;"	n
Mirror.Examples.Basic	Assets/Mirror/Examples/Basic/Scripts/PlayerUI.cs	/^namespace Mirror.Examples.Basic$/;"	n
Mirror.Examples.Benchmark	Assets/Mirror/Examples/Benchmark/Scripts/BenchmarkNetworkManager.cs	/^namespace Mirror.Examples.Benchmark$/;"	n
Mirror.Examples.Benchmark	Assets/Mirror/Examples/Benchmark/Scripts/MonsterMovement.cs	/^namespace Mirror.Examples.Benchmark$/;"	n
Mirror.Examples.Benchmark	Assets/Mirror/Examples/Benchmark/Scripts/PlayerMovement.cs	/^namespace Mirror.Examples.Benchmark$/;"	n
Mirror.Examples.Chat	Assets/Mirror/Examples/Chat/Scripts/ChatNetworkManager.cs	/^namespace Mirror.Examples.Chat$/;"	n
Mirror.Examples.Chat	Assets/Mirror/Examples/Chat/Scripts/ChatWindow.cs	/^namespace Mirror.Examples.Chat$/;"	n
Mirror.Examples.Chat	Assets/Mirror/Examples/Chat/Scripts/Player.cs	/^namespace Mirror.Examples.Chat$/;"	n
Mirror.Examples.MultipleAdditiveScenes	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^namespace Mirror.Examples.MultipleAdditiveScenes$/;"	n
Mirror.Examples.MultipleAdditiveScenes	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PhysicsCollision.cs	/^namespace Mirror.Examples.MultipleAdditiveScenes$/;"	n
Mirror.Examples.MultipleAdditiveScenes	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PhysicsSimulator.cs	/^namespace Mirror.Examples.MultipleAdditiveScenes$/;"	n
Mirror.Examples.MultipleAdditiveScenes	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^namespace Mirror.Examples.MultipleAdditiveScenes$/;"	n
Mirror.Examples.MultipleAdditiveScenes	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerScore.cs	/^namespace Mirror.Examples.MultipleAdditiveScenes$/;"	n
Mirror.Examples.MultipleAdditiveScenes	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/RandomColor.cs	/^namespace Mirror.Examples.MultipleAdditiveScenes$/;"	n
Mirror.Examples.MultipleAdditiveScenes	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/Reward.cs	/^namespace Mirror.Examples.MultipleAdditiveScenes$/;"	n
Mirror.Examples.MultipleAdditiveScenes	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/Spawner.cs	/^namespace Mirror.Examples.MultipleAdditiveScenes$/;"	n
Mirror.Examples.MultipleMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^namespace Mirror.Examples.MultipleMatch$/;"	n
Mirror.Examples.MultipleMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CellGUI.cs	/^namespace Mirror.Examples.MultipleMatch$/;"	n
Mirror.Examples.MultipleMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^namespace Mirror.Examples.MultipleMatch$/;"	n
Mirror.Examples.MultipleMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchGUI.cs	/^namespace Mirror.Examples.MultipleMatch$/;"	n
Mirror.Examples.MultipleMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^namespace Mirror.Examples.MultipleMatch$/;"	n
Mirror.Examples.MultipleMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchNetworkManager.cs	/^namespace Mirror.Examples.MultipleMatch$/;"	n
Mirror.Examples.MultipleMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/PlayerGUI.cs	/^namespace Mirror.Examples.MultipleMatch$/;"	n
Mirror.Examples.MultipleMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/RoomGUI.cs	/^namespace Mirror.Examples.MultipleMatch$/;"	n
Mirror.Examples.NetworkRoom	Assets/Mirror/Examples/Room/Scripts/NetworkRoomManagerExt.cs	/^namespace Mirror.Examples.NetworkRoom$/;"	n
Mirror.Examples.NetworkRoom	Assets/Mirror/Examples/Room/Scripts/NetworkRoomPlayerExt.cs	/^namespace Mirror.Examples.NetworkRoom$/;"	n
Mirror.Examples.NetworkRoom	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^namespace Mirror.Examples.NetworkRoom$/;"	n
Mirror.Examples.NetworkRoom	Assets/Mirror/Examples/Room/Scripts/PlayerScore.cs	/^namespace Mirror.Examples.NetworkRoom$/;"	n
Mirror.Examples.NetworkRoom	Assets/Mirror/Examples/Room/Scripts/RandomColor.cs	/^namespace Mirror.Examples.NetworkRoom$/;"	n
Mirror.Examples.NetworkRoom	Assets/Mirror/Examples/Room/Scripts/Reward.cs	/^namespace Mirror.Examples.NetworkRoom$/;"	n
Mirror.Examples.NetworkRoom	Assets/Mirror/Examples/Room/Scripts/Spawner.cs	/^namespace Mirror.Examples.NetworkRoom$/;"	n
Mirror.Examples.Pong	Assets/Mirror/Examples/Cloud/GUI/Scripts/QuitButtonHUD.cs	/^namespace Mirror.Examples.Pong$/;"	n
Mirror.Examples.Pong	Assets/Mirror/Examples/Pong/Scripts/Ball.cs	/^namespace Mirror.Examples.Pong$/;"	n
Mirror.Examples.Pong	Assets/Mirror/Examples/Pong/Scripts/NetworkManagerPong.cs	/^namespace Mirror.Examples.Pong$/;"	n
Mirror.Examples.Pong	Assets/Mirror/Examples/Pong/Scripts/Player.cs	/^namespace Mirror.Examples.Pong$/;"	n
Mirror.Examples.RigidbodyPhysics	Assets/Mirror/Examples/RigidbodyPhysics/Scripts/AddForce.cs	/^namespace Mirror.Examples.RigidbodyPhysics$/;"	n
Mirror.Examples.Tanks	Assets/Mirror/Examples/Tanks/Scripts/Projectile.cs	/^namespace Mirror.Examples.Tanks$/;"	n
Mirror.Examples.Tanks	Assets/Mirror/Examples/Tanks/Scripts/Tank.cs	/^namespace Mirror.Examples.Tanks$/;"	n
Mirror.Experimental	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^namespace Mirror.Experimental$/;"	n
Mirror.Experimental	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^namespace Mirror.Experimental$/;"	n
Mirror.Experimental	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^namespace Mirror.Experimental$/;"	n
Mirror.Experimental	Assets/Mirror/Components/Experimental/NetworkTransform.cs	/^namespace Mirror.Experimental$/;"	n
Mirror.Experimental	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^namespace Mirror.Experimental$/;"	n
Mirror.Experimental	Assets/Mirror/Components/Experimental/NetworkTransformChild.cs	/^namespace Mirror.Experimental$/;"	n
Mirror.RemoteCalls	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^namespace Mirror.RemoteCalls$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/ClientHandshake.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/ClientSslHelper.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/WebSocketClientStandAlone.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/SimpleWebJSLib.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Constants.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/EventType.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Message.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReadHelper.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/TcpConfig.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Utils.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerSslHelper.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.SimpleWeb	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SslConfigLoader.cs	/^namespace Mirror.SimpleWeb$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Extensions.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Helpers.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Log.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Processors/CommandProcessor.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Processors/MethodProcessor.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Processors/MonoBehaviourProcessor.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Processors/PropertySiteProcessor.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Processors/ReaderWriterProcessor.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Processors/RpcProcessor.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Processors/ServerClientAttributeProcessor.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Processors/SyncObjectInitializer.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Processors/SyncObjectProcessor.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Processors/SyncVarProcessor.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Processors/TargetRpcProcessor.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Readers.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Resolvers.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/TypeReferenceComparer.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Weaver.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/WeaverExceptions.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^namespace Mirror.Weaver$/;"	n
Mirror.Weaver	Assets/Mirror/Editor/Weaver/Writers.cs	/^namespace Mirror.Weaver$/;"	n
MirrorInvokeType	Assets/Mirror/Runtime/Utils.cs	/^    public enum MirrorInvokeType$/;"	g	namespace:Mirror
MirrorRuntimeAssemblyName	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^        const string MirrorRuntimeAssemblyName = "Mirror";$/;"	f	class:Mirror.Weaver.CompilationFinishedHook	file:
MirrorWeaverAssemblyName	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^        const string MirrorWeaverAssemblyName = "Mirror.Weaver";$/;"	f	class:Mirror.Weaver.CompilationFinishedHook	file:
MonoBehaviourProcessor	Assets/Mirror/Editor/Weaver/Processors/MonoBehaviourProcessor.cs	/^    static class MonoBehaviourProcessor$/;"	c	namespace:Mirror.Weaver
MonsterMovement	Assets/Mirror/Examples/Benchmark/Scripts/MonsterMovement.cs	/^    public class MonsterMovement : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.Benchmark
Move	Assets/Project/Scripts/Player/PlayerMovement.cs	/^    private void Move() {$/;"	m	class:PlayerMovement	file:
MoveNext	Assets/Mirror/Runtime/SyncList.cs	/^            public bool MoveNext()$/;"	m	struct:Mirror.SyncList.Enumerator
MoveReceiveBufferDataToReceiveQueue	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        void MoveReceiveBufferDataToReceiveQueue()$/;"	m	class:kcp2k.Kcp	file:
MovingJoystick	Assets/Project/Scripts/Joystick/MovingJoystick.cs	/^public class MovingJoystick : Joystick {$/;"	c
MultiScene Network Manager	Assets/Mirror/Examples/MultipleAdditiveScenes/README.md	/^## MultiScene Network Manager$/;"	s
MultiSceneNetManager	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^    public class MultiSceneNetManager : NetworkManager$/;"	c	namespace:Mirror.Examples.MultipleAdditiveScenes
Multiple Additive Scenes Example	Assets/Mirror/Examples/MultipleAdditiveScenes/README.md	/^# Multiple Additive Scenes Example$/;"	c
MultipleMatches Example	Assets/Mirror/Examples/MultipleMatches/README.md	/^# MultipleMatches Example$/;"	c
MultiplexTransport	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^    public class MultiplexTransport : Transport$/;"	c	namespace:Mirror
MyNetworkManager	Assets/Project/Scripts/Networking/MyNetworkManager.cs	/^public class MyNetworkManager : NetworkManager {$/;"	c
NOT_READY_STRING	Assets/Project/Scripts/UI/LobbyManager.cs	/^    private const string NOT_READY_STRING = "Cancel";$/;"	f	class:LobbyManager	file:
NOT_READY_STRING	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    private const string NOT_READY_STRING = "<color=red>Not Ready<\/color>";$/;"	f	class:LobbyPlayer	file:
Need Help?	Assets/ParrelSync/README.md	/^## Need Help?$/;"	s
NeedToReadShortLength	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^        public static bool NeedToReadShortLength(byte[] buffer)$/;"	m	class:Mirror.SimpleWeb.MessageProcessor
NeedsTeleport	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        bool NeedsTeleport()$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
NeedsTeleport	Assets/Mirror/Components/NetworkTransformBase.cs	/^        bool NeedsTeleport()$/;"	m	class:Mirror.NetworkTransformBase	file:
NetworkAnimator	Assets/Mirror/Components/NetworkAnimator.cs	/^    public class NetworkAnimator : NetworkBehaviour$/;"	c	namespace:Mirror
NetworkAuthenticator	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^    public abstract class NetworkAuthenticator : MonoBehaviour$/;"	c	namespace:Mirror
NetworkBehaviour	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected T GetSyncVarNetworkBehaviour<T>(NetworkBehaviourSyncVar syncNetBehaviour, ref /;"	p	class:Mirror.NetworkBehaviour
NetworkBehaviour	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected bool SyncVarNetworkBehaviourEqual<T>(T newBehaviour, NetworkBehaviourSyncVar s/;"	p	class:Mirror.NetworkBehaviour
NetworkBehaviour	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected void SetSyncVarNetworkBehaviour<T>(T newBehaviour, ref T behaviourField, ulong/;"	p	class:Mirror.NetworkBehaviour
NetworkBehaviour	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^    public abstract class NetworkBehaviour : MonoBehaviour$/;"	c	namespace:Mirror
NetworkBehaviour	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static T ReadNetworkBehaviour<T>(this NetworkReader reader) where T : NetworkBeha/;"	p	class:Mirror.NetworkReaderExtensions
NetworkBehaviourDirtyBitsReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference NetworkBehaviourDirtyBitsReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
NetworkBehaviourInfo	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        struct NetworkBehaviourInfo$/;"	s	class:Mirror.NetworkInformationPreview
NetworkBehaviourInspector	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^    public class NetworkBehaviourInspector : Editor$/;"	c	namespace:Mirror
NetworkBehaviourProcessor	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public NetworkBehaviourProcessor(TypeDefinition td)$/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor
NetworkBehaviourProcessor	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^    class NetworkBehaviourProcessor$/;"	c	namespace:Mirror.Weaver
NetworkBehaviourSyncVar	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^            public NetworkBehaviourSyncVar(uint netId, int componentIndex) : this()$/;"	m	struct:Mirror.NetworkBehaviour.NetworkBehaviourSyncVar
NetworkBehaviourSyncVar	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public struct NetworkBehaviourSyncVar : IEquatable<NetworkBehaviourSyncVar>$/;"	s	class:Mirror.NetworkBehaviour
NetworkBehaviours	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public NetworkBehaviour[] NetworkBehaviours$/;"	p	class:Mirror.NetworkIdentity
NetworkClient	Assets/Mirror/Runtime/NetworkClient.cs	/^    public static class NetworkClient$/;"	c	namespace:Mirror
NetworkClientGetActive	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference NetworkClientGetActive;$/;"	f	class:Mirror.Weaver.WeaverTypes
NetworkConnection	Assets/Mirror/Runtime/NetworkConnection.cs	/^        internal NetworkConnection()$/;"	m	class:Mirror.NetworkConnection	file:
NetworkConnection	Assets/Mirror/Runtime/NetworkConnection.cs	/^        internal NetworkConnection(int networkConnectionId) : this()$/;"	m	class:Mirror.NetworkConnection	file:
NetworkConnection	Assets/Mirror/Runtime/NetworkConnection.cs	/^    public abstract class NetworkConnection$/;"	c	namespace:Mirror
NetworkConnectionToClient	Assets/Mirror/Runtime/NetworkConnectionToClient.cs	/^        public NetworkConnectionToClient(int networkConnectionId, bool batching, float batchInte/;"	m	class:Mirror.NetworkConnectionToClient
NetworkConnectionToClient	Assets/Mirror/Runtime/NetworkConnectionToClient.cs	/^    public class NetworkConnectionToClient : NetworkConnection$/;"	c	namespace:Mirror
NetworkConnectionToServer	Assets/Mirror/Runtime/NetworkConnectionToServer.cs	/^    public class NetworkConnectionToServer : NetworkConnection$/;"	c	namespace:Mirror
NetworkDiagnostics	Assets/Mirror/Runtime/NetworkDiagnostics.cs	/^    public static class NetworkDiagnostics$/;"	c	namespace:Mirror
NetworkDiscovery	Assets/Mirror/Components/Discovery/NetworkDiscovery.cs	/^    public class NetworkDiscovery : NetworkDiscoveryBase<ServerRequest, ServerResponse>$/;"	c	namespace:Mirror.Discovery
NetworkDiscoveryBase	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^    public abstract class NetworkDiscoveryBase<Request, Response> : MonoBehaviour$/;"	c	namespace:Mirror.Discovery
NetworkDiscoveryHUD	Assets/Mirror/Components/Discovery/NetworkDiscoveryHUD.cs	/^    public class NetworkDiscoveryHUD : MonoBehaviour$/;"	c	namespace:Mirror.Discovery
NetworkEarlyUpdate	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static void NetworkEarlyUpdate()$/;"	m	class:Mirror.NetworkClient	file:
NetworkEarlyUpdate	Assets/Mirror/Runtime/NetworkLoop.cs	/^        static void NetworkEarlyUpdate()$/;"	m	class:Mirror.NetworkLoop	file:
NetworkEarlyUpdate	Assets/Mirror/Runtime/NetworkServer.cs	/^        internal static void NetworkEarlyUpdate()$/;"	m	class:Mirror.NetworkServer	file:
NetworkIdentity	Assets/Mirror/Runtime/NetworkIdentity.cs	/^    public sealed class NetworkIdentity : MonoBehaviour$/;"	c	namespace:Mirror
NetworkIdentityInfo	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        struct NetworkIdentityInfo$/;"	s	class:Mirror.NetworkInformationPreview
NetworkInformationPreview	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^    class NetworkInformationPreview : ObjectPreview$/;"	c	namespace:Mirror
NetworkLateUpdate	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static void NetworkLateUpdate()$/;"	m	class:Mirror.NetworkClient	file:
NetworkLateUpdate	Assets/Mirror/Runtime/NetworkLoop.cs	/^        static void NetworkLateUpdate()$/;"	m	class:Mirror.NetworkLoop	file:
NetworkLateUpdate	Assets/Mirror/Runtime/NetworkServer.cs	/^        internal static void NetworkLateUpdate()$/;"	m	class:Mirror.NetworkServer	file:
NetworkLerpRigidbody	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^    public class NetworkLerpRigidbody : NetworkBehaviour$/;"	c	namespace:Mirror.Experimental
NetworkLobbyManager	Assets/Mirror/Components/NetworkLobbyManager.cs	/^    public class NetworkLobbyManager : NetworkRoomManager {}$/;"	c	namespace:Mirror
NetworkLobbyPlayer	Assets/Mirror/Components/NetworkLobbyPlayer.cs	/^    public class NetworkLobbyPlayer : NetworkRoomPlayer {}$/;"	c	namespace:Mirror
NetworkLoop	Assets/Mirror/Runtime/NetworkLoop.cs	/^    internal static class NetworkLoop$/;"	c	namespace:Mirror
NetworkManager	Assets/Mirror/Runtime/NetworkManager.cs	/^    public class NetworkManager : MonoBehaviour$/;"	c	namespace:Mirror
NetworkManagerEditor	Assets/Mirror/Editor/NetworkManagerEditor.cs	/^    public class NetworkManagerEditor : Editor$/;"	c	namespace:Mirror
NetworkManagerHUD	Assets/Mirror/Runtime/NetworkManagerHUD.cs	/^    public class NetworkManagerHUD : MonoBehaviour$/;"	c	namespace:Mirror
NetworkManagerListServer	Assets/Mirror/Examples/Cloud/GUI/Scripts/NetworkManagerListServer.cs	/^    public class NetworkManagerListServer : NetworkManager$/;"	c	namespace:Mirror.Cloud.Example
NetworkManagerListServerPong	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/NetworkManagerListServerPong.cs	/^    public sealed class NetworkManagerListServerPong : NetworkManagerListServer$/;"	c	namespace:Mirror.Cloud.Example
NetworkManagerMode	Assets/Mirror/Runtime/NetworkManager.cs	/^    public enum NetworkManagerMode { Offline, ServerOnly, ClientOnly, Host }$/;"	g	namespace:Mirror
NetworkManagerPong	Assets/Mirror/Examples/Pong/Scripts/NetworkManagerPong.cs	/^    public class NetworkManagerPong : NetworkManager$/;"	c	namespace:Mirror.Examples.Pong
NetworkMatchChecker	Assets/Mirror/Components/NetworkMatchChecker.cs	/^    public class NetworkMatchChecker : NetworkVisibility$/;"	c	namespace:Mirror
NetworkMessage	Assets/Mirror/Runtime/MessagePacking.cs	/^            where T : struct, NetworkMessage$/;"	s	class:Mirror.MessagePacking
NetworkMessage	Assets/Mirror/Runtime/MessagePacking.cs	/^        public static int GetId<T>() where T : struct, NetworkMessage$/;"	s	class:Mirror.MessagePacking
NetworkMessage	Assets/Mirror/Runtime/NetworkClient.cs	/^            where T : struct, NetworkMessage$/;"	s	class:Mirror.NetworkClient
NetworkMessage	Assets/Mirror/Runtime/NetworkConnection.cs	/^            where T : struct, NetworkMessage$/;"	s	class:Mirror.NetworkConnection
NetworkMessage	Assets/Mirror/Runtime/NetworkDiagnostics.cs	/^            where T : struct, NetworkMessage$/;"	s	class:Mirror.NetworkDiagnostics
NetworkMessage	Assets/Mirror/Runtime/NetworkMessage.cs	/^    public interface NetworkMessage {}$/;"	i	namespace:Mirror
NetworkMessage	Assets/Mirror/Runtime/NetworkServer.cs	/^            where T : struct, NetworkMessage$/;"	s	class:Mirror.NetworkServer
NetworkMessageDelegate	Assets/Mirror/Runtime/Utils.cs	/^    public delegate void NetworkMessageDelegate(NetworkConnection conn, NetworkReader reader, in/;"	m	namespace:Mirror
NetworkOwnerChecker	Assets/Mirror/Components/NetworkOwnerChecker.cs	/^    public class NetworkOwnerChecker : NetworkVisibility$/;"	c	namespace:Mirror
NetworkPingDisplay	Assets/Mirror/Components/NetworkPingDisplay.cs	/^    public class NetworkPingDisplay : MonoBehaviour$/;"	c	namespace:Mirror
NetworkPingMessage	Assets/Mirror/Runtime/Messages.cs	/^        public NetworkPingMessage(double value)$/;"	m	struct:Mirror.NetworkPingMessage
NetworkPingMessage	Assets/Mirror/Runtime/Messages.cs	/^    public struct NetworkPingMessage : NetworkMessage$/;"	s	namespace:Mirror
NetworkPongMessage	Assets/Mirror/Runtime/Messages.cs	/^    public struct NetworkPongMessage : NetworkMessage$/;"	s	namespace:Mirror
NetworkProximityChecker	Assets/Mirror/Components/NetworkProximityChecker.cs	/^    public class NetworkProximityChecker : NetworkVisibility$/;"	c	namespace:Mirror
NetworkReader	Assets/Mirror/Runtime/NetworkReader.cs	/^        public NetworkReader(ArraySegment<byte> segment)$/;"	m	class:Mirror.NetworkReader
NetworkReader	Assets/Mirror/Runtime/NetworkReader.cs	/^        public NetworkReader(byte[] bytes)$/;"	m	class:Mirror.NetworkReader
NetworkReader	Assets/Mirror/Runtime/NetworkReader.cs	/^    public class NetworkReader$/;"	c	namespace:Mirror
NetworkReaderExtensions	Assets/Mirror/Runtime/NetworkReader.cs	/^    public static class NetworkReaderExtensions$/;"	c	namespace:Mirror
NetworkReaderPool	Assets/Mirror/Runtime/NetworkReaderPool.cs	/^    public static class NetworkReaderPool$/;"	c	namespace:Mirror
NetworkRigidbody	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^    public class NetworkRigidbody : NetworkBehaviour$/;"	c	namespace:Mirror.Experimental
NetworkRigidbody2D	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^    public class NetworkRigidbody2D : NetworkBehaviour$/;"	c	namespace:Mirror.Experimental
NetworkRoomManager	Assets/Mirror/Components/NetworkRoomManager.cs	/^    public class NetworkRoomManager : NetworkManager$/;"	c	namespace:Mirror
NetworkRoomManagerExt	Assets/Mirror/Examples/Room/Scripts/NetworkRoomManagerExt.cs	/^    public class NetworkRoomManagerExt : NetworkRoomManager$/;"	c	namespace:Mirror.Examples.NetworkRoom
NetworkRoomPlayer	Assets/Mirror/Components/NetworkRoomPlayer.cs	/^    public class NetworkRoomPlayer : NetworkBehaviour$/;"	c	namespace:Mirror
NetworkRoomPlayerExt	Assets/Mirror/Examples/Room/Scripts/NetworkRoomPlayerExt.cs	/^    public class NetworkRoomPlayerExt : NetworkRoomPlayer$/;"	c	namespace:Mirror.Examples.NetworkRoom
NetworkSceneChecker	Assets/Mirror/Components/NetworkSceneChecker.cs	/^    public class NetworkSceneChecker : NetworkVisibility$/;"	c	namespace:Mirror
NetworkScenePostProcess	Assets/Mirror/Editor/NetworkScenePostProcess.cs	/^    public class NetworkScenePostProcess : MonoBehaviour$/;"	c	namespace:Mirror
NetworkServer	Assets/Mirror/Runtime/NetworkServer.cs	/^    public static class NetworkServer$/;"	c	namespace:Mirror
NetworkServerGetActive	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference NetworkServerGetActive;$/;"	f	class:Mirror.Weaver.WeaverTypes
NetworkServerGetLocalClientActive	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference NetworkServerGetLocalClientActive;$/;"	f	class:Mirror.Weaver.WeaverTypes
NetworkStartPosition	Assets/Mirror/Runtime/NetworkStartPosition.cs	/^    public class NetworkStartPosition : MonoBehaviour$/;"	c	namespace:Mirror
NetworkStreamExtensions	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/NetworkStreamExtensions.cs	/^    public static class NetworkStreamExtensions$/;"	c	namespace:Telepathy
NetworkTime	Assets/Mirror/Runtime/NetworkTime.cs	/^        static NetworkTime()$/;"	m	class:Mirror.NetworkTime	file:
NetworkTime	Assets/Mirror/Runtime/NetworkTime.cs	/^    public static class NetworkTime$/;"	c	namespace:Mirror
NetworkTransform	Assets/Mirror/Components/Experimental/NetworkTransform.cs	/^    public class NetworkTransform : NetworkTransformBase$/;"	c	namespace:Mirror.Experimental
NetworkTransform	Assets/Mirror/Components/NetworkTransform.cs	/^    public class NetworkTransform : NetworkTransformBase$/;"	c	namespace:Mirror
NetworkTransformBase	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^    public abstract class NetworkTransformBase : NetworkBehaviour$/;"	c	namespace:Mirror.Experimental
NetworkTransformBase	Assets/Mirror/Components/NetworkTransformBase.cs	/^    public abstract class NetworkTransformBase : NetworkBehaviour$/;"	c	namespace:Mirror
NetworkTransformChild	Assets/Mirror/Components/Experimental/NetworkTransformChild.cs	/^    public class NetworkTransformChild : NetworkTransformBase$/;"	c	namespace:Mirror.Experimental
NetworkTransformChild	Assets/Mirror/Components/NetworkTransformChild.cs	/^    public class NetworkTransformChild : NetworkTransformBase$/;"	c	namespace:Mirror
NetworkVisibility	Assets/Mirror/Runtime/NetworkVisibility.cs	/^    public abstract class NetworkVisibility : NetworkBehaviour$/;"	c	namespace:Mirror
NetworkVisibilityObsoleteMessage	Assets/Mirror/Runtime/NetworkVisibility.cs	/^    public static class NetworkVisibilityObsoleteMessage$/;"	c	namespace:Mirror
NetworkWriter	Assets/Mirror/Runtime/NetworkWriter.cs	/^    public class NetworkWriter$/;"	c	namespace:Mirror
NetworkWriterExtensions	Assets/Mirror/Runtime/NetworkWriter.cs	/^    public static class NetworkWriterExtensions$/;"	c	namespace:Mirror
NetworkWriterPool	Assets/Mirror/Runtime/NetworkWriterPool.cs	/^    public static class NetworkWriterPool$/;"	c	namespace:Mirror
NextConnectionId	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public int NextConnectionId()$/;"	m	class:Telepathy.Server
NextDirtyBits	Assets/Mirror/Components/NetworkAnimator.cs	/^        ulong NextDirtyBits()$/;"	m	class:Mirror.NetworkAnimator	file:
NoConnections	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static bool NoConnections() => NoExternalConnections();$/;"	m	class:Mirror.NetworkServer
NoDelay	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public bool NoDelay = true;$/;"	f	class:kcp2k.KcpTransport
NoDelay	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public bool NoDelay;$/;"	f	class:kcp2k.KcpServer
NoDelay	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Common.cs	/^        public bool NoDelay = true;$/;"	f	class:Telepathy.Common
NoDelay	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public bool NoDelay = true;$/;"	f	class:Mirror.TelepathyTransport
NoExternalConnections	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static bool NoExternalConnections()$/;"	m	class:Mirror.NetworkServer
Noise	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        protected virtual float Noise(float time) => Mathf.PerlinNoise(time, time);$/;"	m	class:Mirror.LatencySimulation
None	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        None,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
None	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        None,$/;"	e	enum:Mirror.Examples.MultipleMatch.ClientMatchOperation	file:
None	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        None,$/;"	e	enum:Mirror.Examples.MultipleMatch.ServerMatchOperation	file:
None	Assets/Mirror/Runtime/NetworkClient.cs	/^        None,$/;"	e	enum:Mirror.ConnectState	file:
Normal	Assets/Mirror/Runtime/Messages.cs	/^        Normal,$/;"	e	enum:Mirror.SceneOperation	file:
NormalScheme	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public const string NormalScheme = "ws";$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
NotConnected	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        NotConnected = 0,$/;"	e	enum:Mirror.SimpleWeb.ClientState	file:
NotReadyMessage	Assets/Mirror/Runtime/Messages.cs	/^    public struct NotReadyMessage : NetworkMessage {}$/;"	s	namespace:Mirror
NotifyAuthority	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void NotifyAuthority()$/;"	m	class:Mirror.NetworkIdentity	file:
OP_ADD	Assets/Mirror/Runtime/SyncDictionary.cs	/^            OP_ADD,$/;"	e	enum:Mirror.SyncIDictionary.Operation	file:
OP_ADD	Assets/Mirror/Runtime/SyncList.cs	/^            OP_ADD,$/;"	e	enum:Mirror.SyncList.Operation	file:
OP_ADD	Assets/Mirror/Runtime/SyncSet.cs	/^            OP_ADD,$/;"	e	enum:Mirror.SyncSet.Operation	file:
OP_CLEAR	Assets/Mirror/Runtime/SyncDictionary.cs	/^            OP_CLEAR,$/;"	e	enum:Mirror.SyncIDictionary.Operation	file:
OP_CLEAR	Assets/Mirror/Runtime/SyncList.cs	/^            OP_CLEAR,$/;"	e	enum:Mirror.SyncList.Operation	file:
OP_CLEAR	Assets/Mirror/Runtime/SyncSet.cs	/^            OP_CLEAR,$/;"	e	enum:Mirror.SyncSet.Operation	file:
OP_INSERT	Assets/Mirror/Runtime/SyncList.cs	/^            OP_INSERT,$/;"	e	enum:Mirror.SyncList.Operation	file:
OP_REMOVE	Assets/Mirror/Runtime/SyncDictionary.cs	/^            OP_REMOVE,$/;"	e	enum:Mirror.SyncIDictionary.Operation	file:
OP_REMOVE	Assets/Mirror/Runtime/SyncSet.cs	/^            OP_REMOVE$/;"	e	enum:Mirror.SyncSet.Operation	file:
OP_REMOVEAT	Assets/Mirror/Runtime/SyncList.cs	/^            OP_REMOVEAT,$/;"	e	enum:Mirror.SyncList.Operation	file:
OP_SET	Assets/Mirror/Runtime/SyncDictionary.cs	/^            OP_SET$/;"	e	enum:Mirror.SyncIDictionary.Operation	file:
OP_SET	Assets/Mirror/Runtime/SyncList.cs	/^            OP_SET$/;"	e	enum:Mirror.SyncList.Operation	file:
OVERHEAD	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int OVERHEAD = 24;$/;"	f	class:kcp2k.Kcp
ObjectDestroyMessage	Assets/Mirror/Runtime/Messages.cs	/^    public struct ObjectDestroyMessage : NetworkMessage$/;"	s	namespace:Mirror
ObjectHideMessage	Assets/Mirror/Runtime/Messages.cs	/^    public struct ObjectHideMessage : NetworkMessage$/;"	s	namespace:Mirror
ObjectSpawnFinishedMessage	Assets/Mirror/Runtime/Messages.cs	/^    public struct ObjectSpawnFinishedMessage : NetworkMessage {}$/;"	s	namespace:Mirror
ObjectSpawnStartedMessage	Assets/Mirror/Runtime/Messages.cs	/^    public struct ObjectSpawnStartedMessage : NetworkMessage {}$/;"	s	namespace:Mirror
Observers	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^    public enum SyncMode { Observers, Owner }$/;"	e	enum:Mirror.SyncMode	file:
Offline	Assets/Mirror/Runtime/NetworkManager.cs	/^    public enum NetworkManagerMode { Offline, ServerOnly, ClientOnly, Host }$/;"	e	enum:Mirror.NetworkManagerMode	file:
OnAngularDragChanged	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void OnAngularDragChanged(float _, float newValue)$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
OnAngularDragChanged	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void OnAngularDragChanged(float _, float newValue)$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
OnAngularVelocityChanged	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void OnAngularVelocityChanged(Vector3 _, Vector3 newValue)$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
OnAngularVelocityChanged	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void OnAngularVelocityChanged(float _, float newValue)$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
OnAnimatorSpeedChanged	Assets/Mirror/Components/NetworkAnimator.cs	/^        void OnAnimatorSpeedChanged(float _, float value)$/;"	m	class:Mirror.NetworkAnimator	file:
OnApplicationQuit	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        void OnApplicationQuit()$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase	file:
OnApplicationQuit	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnApplicationQuit()$/;"	m	class:Mirror.NetworkManager
OnApplicationQuit	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public virtual void OnApplicationQuit()$/;"	m	class:Mirror.Transport
OnAuthRequestMessage	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^        public void OnAuthRequestMessage(NetworkConnection conn, AuthRequestMessage msg)$/;"	m	class:Mirror.Authenticators.BasicAuthenticator
OnAuthResponseMessage	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^        public void OnAuthResponseMessage(AuthResponseMessage msg)$/;"	m	class:Mirror.Authenticators.BasicAuthenticator
OnAuthResponseMessage	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^        public void OnAuthResponseMessage(NetworkConnection conn, AuthResponseMessage msg) => On/;"	m	class:Mirror.Authenticators.BasicAuthenticator
OnAuthenticated	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public Action OnAuthenticated;$/;"	f	class:kcp2k.KcpConnection
OnCheckObserver	Assets/Mirror/Components/InterestManagement/Distance/DistanceInterestManagement.cs	/^        public override bool OnCheckObserver(NetworkIdentity identity, NetworkConnection newObse/;"	m	class:Mirror.DistanceInterestManagement
OnCheckObserver	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^        public override bool OnCheckObserver(NetworkIdentity identity, NetworkConnection newObse/;"	m	class:Mirror.SpatialHashingInterestManagement
OnCheckObserver	Assets/Mirror/Components/NetworkMatchChecker.cs	/^        public override bool OnCheckObserver(NetworkConnection conn)$/;"	m	class:Mirror.NetworkMatchChecker
OnCheckObserver	Assets/Mirror/Components/NetworkOwnerChecker.cs	/^        public override bool OnCheckObserver(NetworkConnection conn)$/;"	m	class:Mirror.NetworkOwnerChecker
OnCheckObserver	Assets/Mirror/Components/NetworkProximityChecker.cs	/^        public override bool OnCheckObserver(NetworkConnection conn)$/;"	m	class:Mirror.NetworkProximityChecker
OnCheckObserver	Assets/Mirror/Components/NetworkSceneChecker.cs	/^        public override bool OnCheckObserver(NetworkConnection conn)$/;"	m	class:Mirror.NetworkSceneChecker
OnCheckObserver	Assets/Mirror/Runtime/InterestManagement.cs	/^        public abstract bool OnCheckObserver(NetworkIdentity identity, NetworkConnection newObse/;"	m	class:Mirror.InterestManagement
OnCheckObserver	Assets/Mirror/Runtime/NetworkVisibility.cs	/^        public abstract bool OnCheckObserver(NetworkConnection conn);$/;"	m	class:Mirror.NetworkVisibility
OnClientAuthenticate	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^        public override void OnClientAuthenticate(NetworkConnection conn)$/;"	m	class:Mirror.Authenticators.BasicAuthenticator
OnClientAuthenticate	Assets/Mirror/Authenticators/TimeoutAuthenticator.cs	/^        public override void OnClientAuthenticate(NetworkConnection conn)$/;"	m	class:Mirror.Authenticators.TimeoutAuthenticator
OnClientAuthenticate	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^        public abstract void OnClientAuthenticate(NetworkConnection conn);$/;"	m	class:Mirror.NetworkAuthenticator
OnClientAuthenticated	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^        public UnityEventNetworkConnection OnClientAuthenticated = new UnityEventNetworkConnecti/;"	f	class:Mirror.NetworkAuthenticator
OnClientAuthenticated	Assets/Mirror/Runtime/NetworkManager.cs	/^        void OnClientAuthenticated(NetworkConnection conn)$/;"	m	class:Mirror.NetworkManager	file:
OnClientChangeScene	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnClientChangeScene(string newSceneName, SceneOperation sceneOperati/;"	m	class:Mirror.NetworkManager
OnClientConnect	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void OnClientConnect(NetworkConnection conn)$/;"	m	class:Mirror.NetworkRoomManager
OnClientConnect	Assets/Mirror/Examples/Chat/Scripts/ChatNetworkManager.cs	/^        public override void OnClientConnect(NetworkConnection conn)$/;"	m	class:Mirror.Examples.Chat.ChatNetworkManager
OnClientConnect	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal void OnClientConnect(NetworkConnection conn)$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnClientConnect	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchNetworkManager.cs	/^        public override void OnClientConnect(NetworkConnection conn)$/;"	m	class:Mirror.Examples.MultipleMatch.MatchNetworkManager
OnClientConnect	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnClientConnect(NetworkConnection conn)$/;"	m	class:Mirror.NetworkManager
OnClientConnectInternal	Assets/Mirror/Runtime/NetworkManager.cs	/^        void OnClientConnectInternal()$/;"	m	class:Mirror.NetworkManager	file:
OnClientConnected	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public Action OnClientConnected = () => Debug.LogWarning("OnClientConnected called with /;"	f	class:Mirror.Transport
OnClientDataReceived	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public Action<ArraySegment<byte>, int> OnClientDataReceived = (data, channel) => Debug.L/;"	f	class:Mirror.Transport
OnClientDisconnect	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void OnClientDisconnect(NetworkConnection conn)$/;"	m	class:Mirror.NetworkRoomManager
OnClientDisconnect	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal void OnClientDisconnect()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnClientDisconnect	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchNetworkManager.cs	/^        public override void OnClientDisconnect(NetworkConnection conn)$/;"	m	class:Mirror.Examples.MultipleMatch.MatchNetworkManager
OnClientDisconnect	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnClientDisconnect(NetworkConnection conn)$/;"	m	class:Mirror.NetworkManager
OnClientDisconnectInternal	Assets/Mirror/Runtime/NetworkManager.cs	/^        void OnClientDisconnectInternal()$/;"	m	class:Mirror.NetworkManager	file:
OnClientDisconnected	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public Action OnClientDisconnected = () => Debug.LogWarning("OnClientDisconnected called/;"	f	class:Mirror.Transport
OnClientEnterRoom	Assets/Mirror/Components/NetworkRoomPlayer.cs	/^        public virtual void OnClientEnterRoom() {}$/;"	m	class:Mirror.NetworkRoomPlayer
OnClientEnterRoom	Assets/Mirror/Examples/Room/Scripts/NetworkRoomPlayerExt.cs	/^        public override void OnClientEnterRoom()$/;"	m	class:Mirror.Examples.NetworkRoom.NetworkRoomPlayerExt
OnClientError	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnClientError(NetworkConnection conn, int errorCode) {}$/;"	m	class:Mirror.NetworkManager
OnClientError	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public Action<Exception> OnClientError = (error) => Debug.LogWarning("OnClientError call/;"	f	class:Mirror.Transport
OnClientExitRoom	Assets/Mirror/Components/NetworkRoomPlayer.cs	/^        public virtual void OnClientExitRoom() {}$/;"	m	class:Mirror.NetworkRoomPlayer
OnClientExitRoom	Assets/Mirror/Examples/Room/Scripts/NetworkRoomPlayerExt.cs	/^        public override void OnClientExitRoom()$/;"	m	class:Mirror.Examples.NetworkRoom.NetworkRoomPlayerExt
OnClientMatchMessage	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        void OnClientMatchMessage(ClientMatchMessage msg)$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnClientNotReady	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnClientNotReady(NetworkConnection conn) {}$/;"	m	class:Mirror.NetworkManager
OnClientNotReadyMessageInternal	Assets/Mirror/Runtime/NetworkManager.cs	/^        void OnClientNotReadyMessageInternal(NotReadyMessage msg)$/;"	m	class:Mirror.NetworkManager	file:
OnClientPong	Assets/Mirror/Runtime/NetworkTime.cs	/^        internal static void OnClientPong(NetworkPongMessage message)$/;"	m	class:Mirror.NetworkTime	file:
OnClientReadyMessage	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void OnClientReadyMessage(NetworkConnection conn, ReadyMessage msg)$/;"	m	class:Mirror.NetworkServer	file:
OnClientSceneChanged	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void OnClientSceneChanged(NetworkConnection conn)$/;"	m	class:Mirror.NetworkRoomManager
OnClientSceneChanged	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnClientSceneChanged(NetworkConnection conn)$/;"	m	class:Mirror.NetworkManager
OnClientSceneInternal	Assets/Mirror/Runtime/NetworkManager.cs	/^        void OnClientSceneInternal(SceneMessage msg)$/;"	m	class:Mirror.NetworkManager	file:
OnCollisionEnter2D	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/Ball.cs	/^        void OnCollisionEnter2D(Collision2D col)$/;"	m	class:Mirror.Cloud.Examples.Pong.Ball	file:
OnCollisionEnter2D	Assets/Mirror/Examples/Pong/Scripts/Ball.cs	/^        void OnCollisionEnter2D(Collision2D col)$/;"	m	class:Mirror.Examples.Pong.Ball	file:
OnCollisionStay	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PhysicsCollision.cs	/^        void OnCollisionStay(Collision other)$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.PhysicsCollision	file:
OnCommandMessage	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void OnCommandMessage(NetworkConnection conn, CommandMessage msg)$/;"	m	class:Mirror.NetworkServer	file:
OnCompilationFinished	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^        static void OnCompilationFinished(string assemblyPath, CompilerMessage[] messages)$/;"	m	class:Mirror.Weaver.CompilationFinishedHook	file:
OnConnected	Assets/Mirror/Runtime/NetworkClient.cs	/^        static void OnConnected()$/;"	m	class:Mirror.NetworkClient	file:
OnConnected	Assets/Mirror/Runtime/NetworkServer.cs	/^        internal static void OnConnected(NetworkConnectionToClient conn)$/;"	m	class:Mirror.NetworkServer	file:
OnConnected	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void OnConnected(int connectionId)$/;"	m	class:Mirror.NetworkServer	file:
OnConnected	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^        public Action OnConnected;$/;"	f	class:kcp2k.KcpClient
OnConnected	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public Action<int> OnConnected;$/;"	f	class:kcp2k.KcpServer
OnConnected	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public Action OnConnected;$/;"	f	class:Telepathy.Client
OnConnected	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public Action<int> OnConnected;$/;"	f	class:Telepathy.Server
OnConnectedEvent	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static Action OnConnectedEvent;$/;"	f	class:Mirror.NetworkClient	file:
OnConnectedEvent	Assets/Mirror/Runtime/NetworkServer.cs	/^        internal static Action<NetworkConnection> OnConnectedEvent;$/;"	f	class:Mirror.NetworkServer	file:
OnCreatePlayer	Assets/Mirror/Examples/Chat/Scripts/ChatNetworkManager.cs	/^        void OnCreatePlayer(NetworkConnection connection, CreatePlayerMessage createPlayerMessag/;"	m	class:Mirror.Examples.Chat.ChatNetworkManager	file:
OnData	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^        public Action<ArraySegment<byte>> OnData;$/;"	f	class:kcp2k.KcpClient
OnData	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public Action<ArraySegment<byte>> OnData;$/;"	f	class:kcp2k.KcpConnection
OnData	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public Action<int, ArraySegment<byte>> OnData;$/;"	f	class:kcp2k.KcpServer
OnData	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public Action<ArraySegment<byte>> OnData;$/;"	f	class:Telepathy.Client
OnData	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public Action<int, ArraySegment<byte>> OnData;$/;"	f	class:Telepathy.Server
OnDataReceived	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static void OnDataReceived(ArraySegment<byte> data, int channelId)$/;"	m	class:Mirror.NetworkClient	file:
OnDataReceived	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void OnDataReceived(int connectionId, ArraySegment<byte> data, int channelId)$/;"	m	class:Mirror.NetworkServer	file:
OnDeserialize	Assets/Mirror/Components/NetworkAnimator.cs	/^        public override void OnDeserialize(NetworkReader reader, bool initialState)$/;"	m	class:Mirror.NetworkAnimator
OnDeserialize	Assets/Mirror/Components/NetworkTransformBase.cs	/^        public override void OnDeserialize(NetworkReader reader, bool initialState)$/;"	m	class:Mirror.NetworkTransformBase
OnDeserialize	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public virtual void OnDeserialize(NetworkReader reader, bool initialState)$/;"	m	class:Mirror.NetworkBehaviour
OnDeserializeAll	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public void OnDeserializeAll(NetworkReader reader)$/;"	m	class:Mirror.SyncIDictionary
OnDeserializeAll	Assets/Mirror/Runtime/SyncList.cs	/^        public void OnDeserializeAll(NetworkReader reader)$/;"	m	class:Mirror.SyncList
OnDeserializeAll	Assets/Mirror/Runtime/SyncObject.cs	/^        void OnDeserializeAll(NetworkReader reader);$/;"	m	interface:Mirror.SyncObject
OnDeserializeAll	Assets/Mirror/Runtime/SyncSet.cs	/^        public void OnDeserializeAll(NetworkReader reader)$/;"	m	class:Mirror.SyncSet
OnDeserializeAllSafely	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void OnDeserializeAllSafely(NetworkReader reader, bool initialState)$/;"	m	class:Mirror.NetworkIdentity	file:
OnDeserializeDelta	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public void OnDeserializeDelta(NetworkReader reader)$/;"	m	class:Mirror.SyncIDictionary
OnDeserializeDelta	Assets/Mirror/Runtime/SyncList.cs	/^        public void OnDeserializeDelta(NetworkReader reader)$/;"	m	class:Mirror.SyncList
OnDeserializeDelta	Assets/Mirror/Runtime/SyncObject.cs	/^        void OnDeserializeDelta(NetworkReader reader);$/;"	m	interface:Mirror.SyncObject
OnDeserializeDelta	Assets/Mirror/Runtime/SyncSet.cs	/^        public void OnDeserializeDelta(NetworkReader reader)$/;"	m	class:Mirror.SyncSet
OnDeserializeSafely	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        void OnDeserializeSafely(NetworkBehaviour comp, NetworkReader reader, bool initialState)$/;"	m	class:Mirror.NetworkIdentity	file:
OnDestroy	Assets/Mirror/Cloud/ApiConnector.cs	/^        public void OnDestroy()$/;"	m	class:Mirror.Cloud.ApiConnector
OnDestroy	Assets/Mirror/Examples/AdditiveScenes/Scripts/RandomColor.cs	/^        void OnDestroy()$/;"	m	class:Mirror.Examples.Additive.RandomColor	file:
OnDestroy	Assets/Mirror/Examples/Cloud/GUI/Scripts/ApiUpdater.cs	/^        void OnDestroy()$/;"	m	class:Mirror.Cloud.Example.ApiUpdater	file:
OnDestroy	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListManager.cs	/^        void OnDestroy()$/;"	m	class:Mirror.Cloud.Example.ServerListManager	file:
OnDestroy	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/RandomColor.cs	/^        void OnDestroy()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.RandomColor	file:
OnDestroy	Assets/Mirror/Examples/Room/Scripts/RandomColor.cs	/^        void OnDestroy()$/;"	m	class:Mirror.Examples.NetworkRoom.RandomColor	file:
OnDestroy	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        void OnDestroy()$/;"	m	class:Mirror.NetworkIdentity	file:
OnDestroy	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnDestroy()$/;"	m	class:Mirror.NetworkManager
OnDestroy	Assets/Mirror/Runtime/NetworkStartPosition.cs	/^        public void OnDestroy()$/;"	m	class:Mirror.NetworkStartPosition
OnDisable	Assets/Mirror/Components/NetworkRoomPlayer.cs	/^        public virtual void OnDisable()$/;"	m	class:Mirror.NetworkRoomPlayer
OnDisable	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        void OnDisable()$/;"	m	class:Mirror.Examples.Additive.PlayerController	file:
OnDisable	Assets/Mirror/Examples/Basic/Scripts/PlayerUI.cs	/^        void OnDisable()$/;"	m	class:Mirror.Examples.Basic.PlayerUI	file:
OnDisable	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        void OnDisable()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController	file:
OnDisable	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        void OnDisable()$/;"	m	class:Mirror.Examples.NetworkRoom.PlayerController	file:
OnDisable	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        void OnDisable()$/;"	m	class:Mirror.FallbackTransport	file:
OnDisable	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        void OnDisable()$/;"	m	class:kcp2k.KcpTransport	file:
OnDisable	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        void OnDisable() { wrap.enabled = false; }$/;"	m	class:Mirror.LatencySimulation	file:
OnDisable	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        void OnDisable()$/;"	m	class:Mirror.MultiplexTransport	file:
OnDisconnected	Assets/Mirror/Runtime/NetworkClient.cs	/^        static void OnDisconnected()$/;"	m	class:Mirror.NetworkClient	file:
OnDisconnected	Assets/Mirror/Runtime/NetworkServer.cs	/^        internal static void OnDisconnected(int connectionId)$/;"	m	class:Mirror.NetworkServer	file:
OnDisconnected	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void OnDisconnected(NetworkConnection conn)$/;"	m	class:Mirror.NetworkServer	file:
OnDisconnected	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^        public Action OnDisconnected;$/;"	f	class:kcp2k.KcpClient
OnDisconnected	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public Action OnDisconnected;$/;"	f	class:kcp2k.KcpConnection
OnDisconnected	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public Action<int> OnDisconnected;$/;"	f	class:kcp2k.KcpServer
OnDisconnected	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public Action OnDisconnected;$/;"	f	class:Telepathy.Client
OnDisconnected	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public Action<int> OnDisconnected;$/;"	f	class:Telepathy.Server
OnDisconnectedEvent	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static Action OnDisconnectedEvent;$/;"	f	class:Mirror.NetworkClient	file:
OnDisconnectedEvent	Assets/Mirror/Runtime/NetworkServer.cs	/^        internal static Action<NetworkConnection> OnDisconnectedEvent;$/;"	f	class:Mirror.NetworkServer	file:
OnDiscoveredServer	Assets/Mirror/Components/Discovery/NetworkDiscoveryHUD.cs	/^        public void OnDiscoveredServer(ServerResponse info)$/;"	m	class:Mirror.Discovery.NetworkDiscoveryHUD
OnDrag	Assets/Project/Scripts/Joystick/Joystick.cs	/^    public abstract void OnDrag(PointerEventData eventData);$/;"	m	class:Joystick
OnDrag	Assets/Project/Scripts/Joystick/MovingJoystick.cs	/^    public override void OnDrag(PointerEventData eventData) {$/;"	m	class:MovingJoystick
OnDrag	Assets/Project/Scripts/Joystick/StaticJoystick.cs	/^    public override void OnDrag(PointerEventData eventData) {$/;"	m	class:StaticJoystick
OnDrawGizmos	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        void OnDrawGizmos()$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
OnDrawGizmos	Assets/Mirror/Components/NetworkTransformBase.cs	/^        void OnDrawGizmos()$/;"	m	class:Mirror.NetworkTransformBase	file:
OnEnable	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^        void OnEnable()$/;"	m	class:Mirror.NetworkBehaviourInspector	file:
OnEnable	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        void OnEnable()$/;"	m	class:Mirror.FallbackTransport	file:
OnEnable	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        void OnEnable()$/;"	m	class:kcp2k.KcpTransport	file:
OnEnable	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        void OnEnable() { wrap.enabled = true; }$/;"	m	class:Mirror.LatencySimulation	file:
OnEnable	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        void OnEnable()$/;"	m	class:Mirror.MultiplexTransport	file:
OnError	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void OnError(int connectionId, Exception exception)$/;"	m	class:Mirror.NetworkServer	file:
OnGUI	Assets/Mirror/Components/Discovery/NetworkDiscoveryHUD.cs	/^        void OnGUI()$/;"	m	class:Mirror.Discovery.NetworkDiscoveryHUD	file:
OnGUI	Assets/Mirror/Components/GUIConsole.cs	/^        void OnGUI()$/;"	m	class:Mirror.GUIConsole	file:
OnGUI	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^        void OnGUI()$/;"	m	class:Mirror.SpatialHashingInterestManagement	file:
OnGUI	Assets/Mirror/Components/NetworkPingDisplay.cs	/^        void OnGUI()$/;"	m	class:Mirror.NetworkPingDisplay	file:
OnGUI	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnGUI()$/;"	m	class:Mirror.NetworkRoomManager
OnGUI	Assets/Mirror/Components/NetworkRoomPlayer.cs	/^        public virtual void OnGUI()$/;"	m	class:Mirror.NetworkRoomPlayer
OnGUI	Assets/Mirror/Editor/SceneDrawer.cs	/^        public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)$/;"	m	class:Mirror.SceneDrawer
OnGUI	Assets/Mirror/Editor/SyncVarAttributeDrawer.cs	/^        public override void OnGUI(Rect position, SerializedProperty property, GUIContent label)$/;"	m	class:Mirror.SyncVarAttributeDrawer
OnGUI	Assets/Mirror/Examples/Cloud/GUI/Scripts/QuickListServerDebug.cs	/^        public void OnGUI()$/;"	m	class:Mirror.Cloud.Example.QuickListServerDebug
OnGUI	Assets/Mirror/Examples/Cloud/GUI/Scripts/QuitButtonHUD.cs	/^        void OnGUI()$/;"	m	class:Mirror.Examples.Pong.QuitButtonHUD	file:
OnGUI	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerScore.cs	/^        void OnGUI()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.PlayerScore	file:
OnGUI	Assets/Mirror/Examples/Room/Scripts/NetworkRoomManagerExt.cs	/^        public override void OnGUI()$/;"	m	class:Mirror.Examples.NetworkRoom.NetworkRoomManagerExt
OnGUI	Assets/Mirror/Examples/Room/Scripts/PlayerScore.cs	/^        void OnGUI()$/;"	m	class:Mirror.Examples.NetworkRoom.PlayerScore	file:
OnGUI	Assets/Mirror/Runtime/NetworkManagerHUD.cs	/^        void OnGUI()$/;"	m	class:Mirror.NetworkManagerHUD	file:
OnGUI	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        void OnGUI()$/;"	m	class:kcp2k.KcpTransport	file:
OnGUI	Assets/ParrelSync/ParrelSync/Editor/ClonesManagerWindow.cs	/^        private void OnGUI()$/;"	m	class:ParrelSync.ClonesManagerWindow	file:
OnGUI	Assets/ParrelSync/ParrelSync/Editor/Preferences.cs	/^        private void OnGUI()$/;"	m	class:ParrelSync.Preferences	file:
OnGravityScaleChanged	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void OnGravityScaleChanged(float _, float newValue)$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
OnHostClientObjectDestroy	Assets/Mirror/Runtime/NetworkClient.cs	/^        static void OnHostClientObjectDestroy(ObjectDestroyMessage message)$/;"	m	class:Mirror.NetworkClient	file:
OnHostClientObjectHide	Assets/Mirror/Runtime/NetworkClient.cs	/^        static void OnHostClientObjectHide(ObjectHideMessage message)$/;"	m	class:Mirror.NetworkClient	file:
OnHostClientSpawn	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static void OnHostClientSpawn(SpawnMessage message)$/;"	m	class:Mirror.NetworkClient	file:
OnInitializeOnLoad	Assets/Mirror/Editor/EnterPlayModeSettingsCheck.cs	/^        static void OnInitializeOnLoad()$/;"	m	class:Mirror.EnterPlayModeSettingsCheck	file:
OnInitializeOnLoad	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^        public static void OnInitializeOnLoad()$/;"	m	class:Mirror.Weaver.CompilationFinishedHook
OnInspectorGUI	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^        public override void OnInspectorGUI()$/;"	m	class:Mirror.NetworkBehaviourInspector
OnInspectorGUI	Assets/Mirror/Editor/NetworkManagerEditor.cs	/^        public override void OnInspectorGUI()$/;"	m	class:Mirror.NetworkManagerEditor
OnIsKinematicChanged	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void OnIsKinematicChanged(bool _, bool newValue)$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
OnIsKinematicChanged	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void OnIsKinematicChanged(bool _, bool newValue)$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
OnIsReadyChanged	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    private void OnIsReadyChanged(bool oldValue, bool newValue) {$/;"	m	class:LobbyPlayer	file:
OnJoinClicked	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUIItem.cs	/^        void OnJoinClicked()$/;"	m	class:Mirror.Cloud.Example.ServerListUIItem	file:
OnLog	Assets/Mirror/Components/GUIConsole.cs	/^        void OnLog(string message, string stackTrace, LogType type)$/;"	m	class:Mirror.GUIConsole	file:
OnLogStatistics	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        void OnLogStatistics()$/;"	m	class:kcp2k.KcpTransport	file:
OnMatchEnded	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public void OnMatchEnded()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController
OnMessage	Assets/Mirror/Examples/Chat/Scripts/Player.cs	/^        public static event Action<Player, string> OnMessage;$/;"	E	class:Mirror.Examples.Chat.Player
OnObjectSpawnFinished	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static void OnObjectSpawnFinished(ObjectSpawnFinishedMessage _)$/;"	m	class:Mirror.NetworkClient	file:
OnObjectSpawnStarted	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static void OnObjectSpawnStarted(ObjectSpawnStartedMessage _)$/;"	m	class:Mirror.NetworkClient	file:
OnPlayModeStateChanged	Assets/Mirror/Editor/EnterPlayModeSettingsCheck.cs	/^        static void OnPlayModeStateChanged(PlayModeStateChange state)$/;"	m	class:Mirror.EnterPlayModeSettingsCheck	file:
OnPlayerColorChanged	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        public event System.Action<Color32> OnPlayerColorChanged;$/;"	E	class:Mirror.Examples.Basic.Player
OnPlayerColorChanged	Assets/Mirror/Examples/Basic/Scripts/PlayerUI.cs	/^        void OnPlayerColorChanged(Color32 newPlayerColor)$/;"	m	class:Mirror.Examples.Basic.PlayerUI	file:
OnPlayerDataChanged	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        public event System.Action<int> OnPlayerDataChanged;$/;"	E	class:Mirror.Examples.Basic.Player
OnPlayerDataChanged	Assets/Mirror/Examples/Basic/Scripts/PlayerUI.cs	/^        void OnPlayerDataChanged(int newPlayerData)$/;"	m	class:Mirror.Examples.Basic.PlayerUI	file:
OnPlayerDisconnected	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public event Action<NetworkConnection> OnPlayerDisconnected;$/;"	E	class:Mirror.Examples.MultipleMatch.CanvasController
OnPlayerDisconnected	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public void OnPlayerDisconnected(NetworkConnection conn)$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
OnPlayerListChanged	Assets/Mirror/Examples/Cloud/GUI/Scripts/NetworkManagerListServer.cs	/^        public delegate void OnPlayerListChanged(int playerCount);$/;"	m	class:Mirror.Cloud.Example.NetworkManagerListServer
OnPlayerMessage	Assets/Mirror/Examples/Chat/Scripts/ChatWindow.cs	/^        void OnPlayerMessage(Player player, string message)$/;"	m	class:Mirror.Examples.Chat.ChatWindow	file:
OnPlayerNumberChanged	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        public event System.Action<int> OnPlayerNumberChanged;$/;"	E	class:Mirror.Examples.Basic.Player
OnPlayerNumberChanged	Assets/Mirror/Examples/Basic/Scripts/PlayerUI.cs	/^        void OnPlayerNumberChanged(int newPlayerNumber)$/;"	m	class:Mirror.Examples.Basic.PlayerUI	file:
OnPointerDown	Assets/Project/Scripts/Joystick/Joystick.cs	/^    public void OnPointerDown(PointerEventData eventData) {$/;"	m	class:Joystick
OnPointerUp	Assets/Project/Scripts/Joystick/Joystick.cs	/^    public void OnPointerUp(PointerEventData eventData) {$/;"	m	class:Joystick
OnPostProcessScene	Assets/Mirror/Editor/NetworkScenePostProcess.cs	/^        public static void OnPostProcessScene()$/;"	m	class:Mirror.NetworkScenePostProcess
OnPreviewGUI	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        public override void OnPreviewGUI(Rect r, GUIStyle background)$/;"	m	class:Mirror.NetworkInformationPreview
OnRPCMessage	Assets/Mirror/Runtime/NetworkClient.cs	/^        static void OnRPCMessage(RpcMessage message)$/;"	m	class:Mirror.NetworkClient	file:
OnRebuildObservers	Assets/Mirror/Components/InterestManagement/Distance/DistanceInterestManagement.cs	/^        public override void OnRebuildObservers(NetworkIdentity identity, HashSet<NetworkConnect/;"	m	class:Mirror.DistanceInterestManagement
OnRebuildObservers	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^        public override void OnRebuildObservers(NetworkIdentity identity, HashSet<NetworkConnect/;"	m	class:Mirror.SpatialHashingInterestManagement
OnRebuildObservers	Assets/Mirror/Components/NetworkMatchChecker.cs	/^        public override void OnRebuildObservers(HashSet<NetworkConnection> observers, bool initi/;"	m	class:Mirror.NetworkMatchChecker
OnRebuildObservers	Assets/Mirror/Components/NetworkOwnerChecker.cs	/^        public override void OnRebuildObservers(HashSet<NetworkConnection> observers, bool initi/;"	m	class:Mirror.NetworkOwnerChecker
OnRebuildObservers	Assets/Mirror/Components/NetworkProximityChecker.cs	/^        public override void OnRebuildObservers(HashSet<NetworkConnection> observers, bool initi/;"	m	class:Mirror.NetworkProximityChecker
OnRebuildObservers	Assets/Mirror/Components/NetworkSceneChecker.cs	/^        public override void OnRebuildObservers(HashSet<NetworkConnection> observers, bool initi/;"	m	class:Mirror.NetworkSceneChecker
OnRebuildObservers	Assets/Mirror/Runtime/InterestManagement.cs	/^        public abstract void OnRebuildObservers(NetworkIdentity identity, HashSet<NetworkConnect/;"	m	class:Mirror.InterestManagement
OnRebuildObservers	Assets/Mirror/Runtime/NetworkVisibility.cs	/^        public abstract void OnRebuildObservers(HashSet<NetworkConnection> observers, bool initi/;"	m	class:Mirror.NetworkVisibility
OnRoomClientAddPlayerFailed	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomClientAddPlayerFailed() {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomClientConnect	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomClientConnect(NetworkConnection conn) {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomClientDisconnect	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomClientDisconnect(NetworkConnection conn) {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomClientEnter	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomClientEnter() {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomClientExit	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomClientExit() {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomClientSceneChanged	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomClientSceneChanged(NetworkConnection conn) {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomServerAddPlayer	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomServerAddPlayer(NetworkConnection conn)$/;"	m	class:Mirror.NetworkRoomManager
OnRoomServerConnect	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomServerConnect(NetworkConnection conn) {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomServerCreateGamePlayer	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual GameObject OnRoomServerCreateGamePlayer(NetworkConnection conn, GameObjec/;"	m	class:Mirror.NetworkRoomManager
OnRoomServerCreateRoomPlayer	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual GameObject OnRoomServerCreateRoomPlayer(NetworkConnection conn)$/;"	m	class:Mirror.NetworkRoomManager
OnRoomServerDisconnect	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomServerDisconnect(NetworkConnection conn) {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomServerPlayersNotReady	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomServerPlayersNotReady() {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomServerPlayersReady	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomServerPlayersReady()$/;"	m	class:Mirror.NetworkRoomManager
OnRoomServerPlayersReady	Assets/Mirror/Examples/Room/Scripts/NetworkRoomManagerExt.cs	/^        public override void OnRoomServerPlayersReady()$/;"	m	class:Mirror.Examples.NetworkRoom.NetworkRoomManagerExt
OnRoomServerSceneChanged	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomServerSceneChanged(string sceneName) {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomServerSceneChanged	Assets/Mirror/Examples/Room/Scripts/NetworkRoomManagerExt.cs	/^        public override void OnRoomServerSceneChanged(string sceneName)$/;"	m	class:Mirror.Examples.NetworkRoom.NetworkRoomManagerExt
OnRoomServerSceneLoadedForPlayer	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual bool OnRoomServerSceneLoadedForPlayer(NetworkConnection conn, GameObject /;"	m	class:Mirror.NetworkRoomManager
OnRoomServerSceneLoadedForPlayer	Assets/Mirror/Examples/Room/Scripts/NetworkRoomManagerExt.cs	/^        public override bool OnRoomServerSceneLoadedForPlayer(NetworkConnection conn, GameObject/;"	m	class:Mirror.Examples.NetworkRoom.NetworkRoomManagerExt
OnRoomStartClient	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomStartClient() {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomStartHost	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomStartHost() {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomStartServer	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomStartServer() {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomStopClient	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomStopClient() {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomStopClient	Assets/Mirror/Examples/Room/Scripts/NetworkRoomManagerExt.cs	/^        public override void OnRoomStopClient()$/;"	m	class:Mirror.Examples.NetworkRoom.NetworkRoomManagerExt
OnRoomStopHost	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomStopHost() {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomStopServer	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public virtual void OnRoomStopServer() {}$/;"	m	class:Mirror.NetworkRoomManager
OnRoomStopServer	Assets/Mirror/Examples/Room/Scripts/NetworkRoomManagerExt.cs	/^        public override void OnRoomStopServer()$/;"	m	class:Mirror.Examples.NetworkRoom.NetworkRoomManagerExt
OnSceneLoaded	Assets/Mirror/Runtime/NetworkManager.cs	/^        void OnSceneLoaded(Scene scene, LoadSceneMode mode)$/;"	m	class:Mirror.NetworkManager	file:
OnSend	Assets/Mirror/Examples/Chat/Scripts/ChatWindow.cs	/^        public void OnSend()$/;"	m	class:Mirror.Examples.Chat.ChatWindow
OnSerialize	Assets/Mirror/Components/NetworkAnimator.cs	/^        public override bool OnSerialize(NetworkWriter writer, bool initialState)$/;"	m	class:Mirror.NetworkAnimator
OnSerialize	Assets/Mirror/Components/NetworkTransformBase.cs	/^        public override bool OnSerialize(NetworkWriter writer, bool initialState)$/;"	m	class:Mirror.NetworkTransformBase
OnSerialize	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public virtual bool OnSerialize(NetworkWriter writer, bool initialState)$/;"	m	class:Mirror.NetworkBehaviour
OnSerializeAll	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public void OnSerializeAll(NetworkWriter writer)$/;"	m	class:Mirror.SyncIDictionary
OnSerializeAll	Assets/Mirror/Runtime/SyncList.cs	/^        public void OnSerializeAll(NetworkWriter writer)$/;"	m	class:Mirror.SyncList
OnSerializeAll	Assets/Mirror/Runtime/SyncObject.cs	/^        void OnSerializeAll(NetworkWriter writer);$/;"	m	interface:Mirror.SyncObject
OnSerializeAll	Assets/Mirror/Runtime/SyncSet.cs	/^        public void OnSerializeAll(NetworkWriter writer)$/;"	m	class:Mirror.SyncSet
OnSerializeAllSafely	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void OnSerializeAllSafely(bool initialState, NetworkWriter ownerWriter, out int/;"	m	class:Mirror.NetworkIdentity	file:
OnSerializeDelta	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public void OnSerializeDelta(NetworkWriter writer)$/;"	m	class:Mirror.SyncIDictionary
OnSerializeDelta	Assets/Mirror/Runtime/SyncList.cs	/^        public void OnSerializeDelta(NetworkWriter writer)$/;"	m	class:Mirror.SyncList
OnSerializeDelta	Assets/Mirror/Runtime/SyncObject.cs	/^        void OnSerializeDelta(NetworkWriter writer);$/;"	m	interface:Mirror.SyncObject
OnSerializeDelta	Assets/Mirror/Runtime/SyncSet.cs	/^        public void OnSerializeDelta(NetworkWriter writer)$/;"	m	class:Mirror.SyncSet
OnSerializeSafely	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        bool OnSerializeSafely(NetworkBehaviour comp, NetworkWriter writer, bool initialState)$/;"	m	class:Mirror.NetworkIdentity	file:
OnServerAddPlayer	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void OnServerAddPlayer(NetworkConnection conn)$/;"	m	class:Mirror.NetworkRoomManager
OnServerAddPlayer	Assets/Mirror/Examples/Basic/Scripts/BasicNetManager.cs	/^        public override void OnServerAddPlayer(NetworkConnection conn)$/;"	m	class:Mirror.Examples.Basic.BasicNetManager
OnServerAddPlayer	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/NetworkManagerListServerPong.cs	/^        public override void OnServerAddPlayer(NetworkConnection conn)$/;"	m	class:Mirror.Cloud.Example.NetworkManagerListServerPong
OnServerAddPlayer	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^        public override void OnServerAddPlayer(NetworkConnection conn)$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.MultiSceneNetManager
OnServerAddPlayer	Assets/Mirror/Examples/Pong/Scripts/NetworkManagerPong.cs	/^        public override void OnServerAddPlayer(NetworkConnection conn)$/;"	m	class:Mirror.Examples.Pong.NetworkManagerPong
OnServerAddPlayer	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnServerAddPlayer(NetworkConnection conn)$/;"	m	class:Mirror.NetworkManager
OnServerAddPlayer	Assets/Project/Scripts/Networking/MyNetworkManager.cs	/^    public override void OnServerAddPlayer(NetworkConnection conn) {$/;"	m	class:MyNetworkManager
OnServerAddPlayerDelayed	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^        IEnumerator OnServerAddPlayerDelayed(NetworkConnection conn)$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.MultiSceneNetManager	file:
OnServerAddPlayerInternal	Assets/Mirror/Runtime/NetworkManager.cs	/^        void OnServerAddPlayerInternal(NetworkConnection conn, AddPlayerMessage msg)$/;"	m	class:Mirror.NetworkManager	file:
OnServerAuthenticate	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^        public override void OnServerAuthenticate(NetworkConnection conn)$/;"	m	class:Mirror.Authenticators.BasicAuthenticator
OnServerAuthenticate	Assets/Mirror/Authenticators/TimeoutAuthenticator.cs	/^        public override void OnServerAuthenticate(NetworkConnection conn)$/;"	m	class:Mirror.Authenticators.TimeoutAuthenticator
OnServerAuthenticate	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^        public abstract void OnServerAuthenticate(NetworkConnection conn);$/;"	m	class:Mirror.NetworkAuthenticator
OnServerAuthenticated	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^        public UnityEventNetworkConnection OnServerAuthenticated = new UnityEventNetworkConnecti/;"	f	class:Mirror.NetworkAuthenticator
OnServerAuthenticated	Assets/Mirror/Runtime/NetworkManager.cs	/^        void OnServerAuthenticated(NetworkConnection conn)$/;"	m	class:Mirror.NetworkManager	file:
OnServerCancelMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        void OnServerCancelMatch(NetworkConnection conn)$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnServerChangeScene	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnServerChangeScene(string newSceneName) {}$/;"	m	class:Mirror.NetworkManager
OnServerConnect	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void OnServerConnect(NetworkConnection conn)$/;"	m	class:Mirror.NetworkRoomManager
OnServerConnect	Assets/Mirror/Examples/Cloud/GUI/Scripts/NetworkManagerListServer.cs	/^        public override void OnServerConnect(NetworkConnection conn)$/;"	m	class:Mirror.Cloud.Example.NetworkManagerListServer
OnServerConnect	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnServerConnect(NetworkConnection conn) {}$/;"	m	class:Mirror.NetworkManager
OnServerConnectInternal	Assets/Mirror/Runtime/NetworkManager.cs	/^        void OnServerConnectInternal(NetworkConnection conn)$/;"	m	class:Mirror.NetworkManager	file:
OnServerConnected	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public Action<int> OnServerConnected = (connId) => Debug.LogWarning("OnServerConnected c/;"	f	class:Mirror.Transport
OnServerCreateMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        void OnServerCreateMatch(NetworkConnection conn)$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnServerDataReceived	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public Action<int, ArraySegment<byte>, int> OnServerDataReceived = (connId, data, channe/;"	f	class:Mirror.Transport
OnServerDisconnect	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void OnServerDisconnect(NetworkConnection conn)$/;"	m	class:Mirror.NetworkRoomManager
OnServerDisconnect	Assets/Mirror/Examples/Basic/Scripts/BasicNetManager.cs	/^        public override void OnServerDisconnect(NetworkConnection conn)$/;"	m	class:Mirror.Examples.Basic.BasicNetManager
OnServerDisconnect	Assets/Mirror/Examples/Cloud/GUI/Scripts/NetworkManagerListServer.cs	/^        public override void OnServerDisconnect(NetworkConnection conn)$/;"	m	class:Mirror.Cloud.Example.NetworkManagerListServer
OnServerDisconnect	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal void OnServerDisconnect(NetworkConnection conn)$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnServerDisconnect	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchNetworkManager.cs	/^        public override void OnServerDisconnect(NetworkConnection conn)$/;"	m	class:Mirror.Examples.MultipleMatch.MatchNetworkManager
OnServerDisconnect	Assets/Mirror/Examples/Pong/Scripts/NetworkManagerPong.cs	/^        public override void OnServerDisconnect(NetworkConnection conn)$/;"	m	class:Mirror.Examples.Pong.NetworkManagerPong
OnServerDisconnect	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnServerDisconnect(NetworkConnection conn)$/;"	m	class:Mirror.NetworkManager
OnServerDisconnectInternal	Assets/Mirror/Runtime/NetworkManager.cs	/^        void OnServerDisconnectInternal(NetworkConnection conn)$/;"	m	class:Mirror.NetworkManager	file:
OnServerDisconnected	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public Action<int> OnServerDisconnected = (connId) => Debug.LogWarning("OnServerDisconne/;"	f	class:Mirror.Transport
OnServerError	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnServerError(NetworkConnection conn, int errorCode) {}$/;"	m	class:Mirror.NetworkManager
OnServerError	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public Action<int, Exception> OnServerError = (connId, error) => Debug.LogWarning("OnSer/;"	f	class:Mirror.Transport
OnServerFound	Assets/Mirror/Components/Discovery/NetworkDiscovery.cs	/^        public ServerFoundUnityEvent OnServerFound;$/;"	f	class:Mirror.Discovery.NetworkDiscovery
OnServerJoinMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        void OnServerJoinMatch(NetworkConnection conn, Guid matchId)$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnServerLeaveMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        void OnServerLeaveMatch(NetworkConnection conn, Guid matchId)$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnServerMatchMessage	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        void OnServerMatchMessage(NetworkConnection conn, ServerMatchMessage msg)$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnServerPing	Assets/Mirror/Runtime/NetworkTime.cs	/^        internal static void OnServerPing(NetworkConnection conn, NetworkPingMessage message)$/;"	m	class:Mirror.NetworkTime	file:
OnServerPlayerReady	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        void OnServerPlayerReady(NetworkConnection conn, Guid matchId)$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnServerReady	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void OnServerReady(NetworkConnection conn)$/;"	m	class:Mirror.NetworkRoomManager
OnServerReady	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal void OnServerReady(NetworkConnection conn)$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnServerReady	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchNetworkManager.cs	/^        public override void OnServerReady(NetworkConnection conn)$/;"	m	class:Mirror.Examples.MultipleMatch.MatchNetworkManager
OnServerReady	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnServerReady(NetworkConnection conn)$/;"	m	class:Mirror.NetworkManager
OnServerReady	Assets/Project/Scripts/Networking/MyNetworkManager.cs	/^    public override void OnServerReady(NetworkConnection conn) {$/;"	m	class:MyNetworkManager
OnServerReadyMessageInternal	Assets/Mirror/Runtime/NetworkManager.cs	/^        void OnServerReadyMessageInternal(NetworkConnection conn, ReadyMessage msg)$/;"	m	class:Mirror.NetworkManager	file:
OnServerSceneChanged	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void OnServerSceneChanged(string sceneName)$/;"	m	class:Mirror.NetworkRoomManager
OnServerSceneChanged	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnServerSceneChanged(string sceneName) {}$/;"	m	class:Mirror.NetworkManager
OnServerStartMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        void OnServerStartMatch(NetworkConnection conn)$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnSetHostVisibility	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void OnSetHostVisibility(bool visible)$/;"	m	class:Mirror.NetworkIdentity	file:
OnSetHostVisibility	Assets/Mirror/Runtime/NetworkVisibility.cs	/^        public virtual void OnSetHostVisibility(bool visible)$/;"	m	class:Mirror.NetworkVisibility
OnSpawn	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static void OnSpawn(SpawnMessage message)$/;"	m	class:Mirror.NetworkClient	file:
OnStartAuthority	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public virtual void OnStartAuthority() {}$/;"	m	class:Mirror.NetworkBehaviour
OnStartAuthority	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void OnStartAuthority()$/;"	m	class:Mirror.NetworkIdentity	file:
OnStartAuthority	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    public override void OnStartAuthority() {$/;"	m	class:LobbyPlayer
OnStartClient	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^        public override void OnStartClient()$/;"	m	class:Mirror.Authenticators.BasicAuthenticator
OnStartClient	Assets/Mirror/Authenticators/TimeoutAuthenticator.cs	/^        public override void OnStartClient()$/;"	m	class:Mirror.Authenticators.TimeoutAuthenticator
OnStartClient	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void OnStartClient()$/;"	m	class:Mirror.NetworkRoomManager
OnStartClient	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        public override void OnStartClient()$/;"	m	class:Mirror.Examples.Basic.Player
OnStartClient	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal void OnStartClient()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnStartClient	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public override void OnStartClient()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
OnStartClient	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchNetworkManager.cs	/^        public override void OnStartClient()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchNetworkManager
OnStartClient	Assets/Mirror/Examples/Room/Scripts/NetworkRoomPlayerExt.cs	/^        public override void OnStartClient()$/;"	m	class:Mirror.Examples.NetworkRoom.NetworkRoomPlayerExt
OnStartClient	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^        public virtual void OnStartClient() {}$/;"	m	class:Mirror.NetworkAuthenticator
OnStartClient	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public virtual void OnStartClient() {}$/;"	m	class:Mirror.NetworkBehaviour
OnStartClient	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void OnStartClient()$/;"	m	class:Mirror.NetworkIdentity	file:
OnStartClient	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnStartClient() {}$/;"	m	class:Mirror.NetworkManager
OnStartHost	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void OnStartHost()$/;"	m	class:Mirror.NetworkRoomManager
OnStartHost	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnStartHost() {}$/;"	m	class:Mirror.NetworkManager
OnStartLocalPlayer	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        public override void OnStartLocalPlayer()$/;"	m	class:Mirror.Examples.Additive.PlayerController
OnStartLocalPlayer	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        public override void OnStartLocalPlayer()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController
OnStartLocalPlayer	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        public override void OnStartLocalPlayer()$/;"	m	class:Mirror.Examples.NetworkRoom.PlayerController
OnStartLocalPlayer	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public virtual void OnStartLocalPlayer() {}$/;"	m	class:Mirror.NetworkBehaviour
OnStartLocalPlayer	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void OnStartLocalPlayer()$/;"	m	class:Mirror.NetworkIdentity	file:
OnStartServer	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Authenticators.BasicAuthenticator
OnStartServer	Assets/Mirror/Authenticators/TimeoutAuthenticator.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Authenticators.TimeoutAuthenticator
OnStartServer	Assets/Mirror/Components/NetworkMatchChecker.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.NetworkMatchChecker
OnStartServer	Assets/Mirror/Components/NetworkProximityChecker.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.NetworkProximityChecker
OnStartServer	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.NetworkRoomManager
OnStartServer	Assets/Mirror/Components/NetworkSceneChecker.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.NetworkSceneChecker
OnStartServer	Assets/Mirror/Examples/AdditiveScenes/Scripts/AdditiveNetworkManager.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Examples.Additive.AdditiveNetworkManager
OnStartServer	Assets/Mirror/Examples/AdditiveScenes/Scripts/RandomColor.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Examples.Additive.RandomColor
OnStartServer	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Examples.Basic.Player
OnStartServer	Assets/Mirror/Examples/Benchmark/Scripts/BenchmarkNetworkManager.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Examples.Benchmark.BenchmarkNetworkManager
OnStartServer	Assets/Mirror/Examples/Benchmark/Scripts/MonsterMovement.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Examples.Benchmark.MonsterMovement
OnStartServer	Assets/Mirror/Examples/Chat/Scripts/ChatNetworkManager.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Examples.Chat.ChatNetworkManager
OnStartServer	Assets/Mirror/Examples/Cloud/GUI/Scripts/NetworkManagerListServer.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Cloud.Example.NetworkManagerListServer
OnStartServer	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/Ball.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Cloud.Examples.Pong.Ball
OnStartServer	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/BallManager.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Cloud.Examples.Pong.BallManager
OnStartServer	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.MultiSceneNetManager
OnStartServer	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/RandomColor.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.RandomColor
OnStartServer	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal void OnStartServer()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnStartServer	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
OnStartServer	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchNetworkManager.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchNetworkManager
OnStartServer	Assets/Mirror/Examples/Pong/Scripts/Ball.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Examples.Pong.Ball
OnStartServer	Assets/Mirror/Examples/Room/Scripts/RandomColor.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Examples.NetworkRoom.RandomColor
OnStartServer	Assets/Mirror/Examples/Tanks/Scripts/Projectile.cs	/^        public override void OnStartServer()$/;"	m	class:Mirror.Examples.Tanks.Projectile
OnStartServer	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^        public virtual void OnStartServer() {}$/;"	m	class:Mirror.NetworkAuthenticator
OnStartServer	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public virtual void OnStartServer() {}$/;"	m	class:Mirror.NetworkBehaviour
OnStartServer	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void OnStartServer()$/;"	m	class:Mirror.NetworkIdentity	file:
OnStartServer	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnStartServer() {}$/;"	m	class:Mirror.NetworkManager
OnStopAuthority	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public virtual void OnStopAuthority() {}$/;"	m	class:Mirror.NetworkBehaviour
OnStopAuthority	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void OnStopAuthority()$/;"	m	class:Mirror.NetworkIdentity	file:
OnStopClient	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^        public override void OnStopClient()$/;"	m	class:Mirror.Authenticators.BasicAuthenticator
OnStopClient	Assets/Mirror/Authenticators/TimeoutAuthenticator.cs	/^        public override void OnStopClient()$/;"	m	class:Mirror.Authenticators.TimeoutAuthenticator
OnStopClient	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void OnStopClient()$/;"	m	class:Mirror.NetworkRoomManager
OnStopClient	Assets/Mirror/Examples/AdditiveScenes/Scripts/AdditiveNetworkManager.cs	/^        public override void OnStopClient()$/;"	m	class:Mirror.Examples.Additive.AdditiveNetworkManager
OnStopClient	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        public override void OnStopClient()$/;"	m	class:Mirror.Examples.Basic.Player
OnStopClient	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^        public override void OnStopClient()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.MultiSceneNetManager
OnStopClient	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal void OnStopClient()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnStopClient	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchNetworkManager.cs	/^        public override void OnStopClient()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchNetworkManager
OnStopClient	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^        public virtual void OnStopClient() {}$/;"	m	class:Mirror.NetworkAuthenticator
OnStopClient	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public virtual void OnStopClient() {}$/;"	m	class:Mirror.NetworkBehaviour
OnStopClient	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void OnStopClient()$/;"	m	class:Mirror.NetworkIdentity	file:
OnStopClient	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnStopClient() {}$/;"	m	class:Mirror.NetworkManager
OnStopHost	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void OnStopHost()$/;"	m	class:Mirror.NetworkRoomManager
OnStopHost	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnStopHost() {}$/;"	m	class:Mirror.NetworkManager
OnStopServer	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^        public override void OnStopServer()$/;"	m	class:Mirror.Authenticators.BasicAuthenticator
OnStopServer	Assets/Mirror/Authenticators/TimeoutAuthenticator.cs	/^        public override void OnStopServer()$/;"	m	class:Mirror.Authenticators.TimeoutAuthenticator
OnStopServer	Assets/Mirror/Components/NetworkMatchChecker.cs	/^        public override void OnStopServer()$/;"	m	class:Mirror.NetworkMatchChecker
OnStopServer	Assets/Mirror/Components/NetworkProximityChecker.cs	/^        public override void OnStopServer()$/;"	m	class:Mirror.NetworkProximityChecker
OnStopServer	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void OnStopServer()$/;"	m	class:Mirror.NetworkRoomManager
OnStopServer	Assets/Mirror/Components/NetworkSceneChecker.cs	/^        public override void OnStopServer()$/;"	m	class:Mirror.NetworkSceneChecker
OnStopServer	Assets/Mirror/Examples/AdditiveScenes/Scripts/AdditiveNetworkManager.cs	/^        public override void OnStopServer()$/;"	m	class:Mirror.Examples.Additive.AdditiveNetworkManager
OnStopServer	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        public override void OnStopServer()$/;"	m	class:Mirror.Examples.Basic.Player
OnStopServer	Assets/Mirror/Examples/Cloud/GUI/Scripts/NetworkManagerListServer.cs	/^        public override void OnStopServer()$/;"	m	class:Mirror.Cloud.Example.NetworkManagerListServer
OnStopServer	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/BallManager.cs	/^        public override void OnStopServer()$/;"	m	class:Mirror.Cloud.Examples.Pong.BallManager
OnStopServer	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^        public override void OnStopServer()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.MultiSceneNetManager
OnStopServer	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal void OnStopServer()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
OnStopServer	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchNetworkManager.cs	/^        public override void OnStopServer()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchNetworkManager
OnStopServer	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^        public virtual void OnStopServer() {}$/;"	m	class:Mirror.NetworkAuthenticator
OnStopServer	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public virtual void OnStopServer() {}$/;"	m	class:Mirror.NetworkBehaviour
OnStopServer	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void OnStopServer()$/;"	m	class:Mirror.NetworkIdentity	file:
OnStopServer	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnStopServer() {}$/;"	m	class:Mirror.NetworkManager
OnToggleClicked	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchGUI.cs	/^        public void OnToggleClicked()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchGUI
OnTriggerEnter	Assets/Mirror/Examples/AdditiveScenes/Scripts/ZoneHandler.cs	/^        void OnTriggerEnter(Collider other)$/;"	m	class:Mirror.Examples.Additive.ZoneHandler	file:
OnTriggerEnter	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/Reward.cs	/^        void OnTriggerEnter(Collider other)$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.Reward	file:
OnTriggerEnter	Assets/Mirror/Examples/Room/Scripts/Reward.cs	/^        void OnTriggerEnter(Collider other)$/;"	m	class:Mirror.Examples.NetworkRoom.Reward	file:
OnTriggerEnter	Assets/Mirror/Examples/Tanks/Scripts/Projectile.cs	/^        void OnTriggerEnter(Collider co)$/;"	m	class:Mirror.Examples.Tanks.Projectile	file:
OnTriggerExit	Assets/Mirror/Examples/AdditiveScenes/Scripts/ZoneHandler.cs	/^        void OnTriggerExit(Collider other)$/;"	m	class:Mirror.Examples.Additive.ZoneHandler	file:
OnUpdateVarsMessage	Assets/Mirror/Runtime/NetworkClient.cs	/^        static void OnUpdateVarsMessage(UpdateVarsMessage message)$/;"	m	class:Mirror.NetworkClient	file:
OnUseGravityChanged	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void OnUseGravityChanged(bool _, bool newValue)$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
OnUsernameChanged	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    private void OnUsernameChanged(string oldValue, string newValue) {$/;"	m	class:LobbyPlayer	file:
OnValidate	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        void OnValidate()$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase	file:
OnValidate	Assets/Mirror/Components/Discovery/NetworkDiscoveryHUD.cs	/^        void OnValidate()$/;"	m	class:Mirror.Discovery.NetworkDiscoveryHUD	file:
OnValidate	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^        void OnValidate()$/;"	m	class:Mirror.Experimental.NetworkLerpRigidbody	file:
OnValidate	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void OnValidate()$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
OnValidate	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void OnValidate()$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
OnValidate	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void OnValidate()$/;"	m	class:Mirror.NetworkRoomManager
OnValidate	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        void OnValidate()$/;"	m	class:Mirror.Examples.Additive.PlayerController	file:
OnValidate	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUI.cs	/^        void OnValidate()$/;"	m	class:Mirror.Cloud.Example.ServerListUI	file:
OnValidate	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PhysicsCollision.cs	/^        void OnValidate()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.PhysicsCollision	file:
OnValidate	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        void OnValidate()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController	file:
OnValidate	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/Reward.cs	/^        void OnValidate()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.Reward	file:
OnValidate	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        void OnValidate()$/;"	m	class:Mirror.Examples.NetworkRoom.PlayerController	file:
OnValidate	Assets/Mirror/Examples/Room/Scripts/Reward.cs	/^        void OnValidate()$/;"	m	class:Mirror.Examples.NetworkRoom.Reward	file:
OnValidate	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^        void OnValidate()$/;"	m	class:Mirror.NetworkAuthenticator	file:
OnValidate	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        void OnValidate()$/;"	m	class:Mirror.NetworkIdentity	file:
OnValidate	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void OnValidate()$/;"	m	class:Mirror.NetworkManager
OnValidate	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        void OnValidate()$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport	file:
OnVelocityChanged	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void OnVelocityChanged(Vector3 _, Vector3 newValue)$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
OnVelocityChanged	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void OnVelocityChanged(Vector2 _, Vector2 newValue)$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
OnWeaverError	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^        public static Action<string> OnWeaverError;$/;"	f	class:Mirror.Weaver.CompilationFinishedHook
OnWeaverWarning	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^        public static Action<string> OnWeaverWarning;$/;"	f	class:Mirror.Weaver.CompilationFinishedHook
OnWillSaveAssets	Assets/ParrelSync/ParrelSync/Editor/AssetModBlock/ParrelSyncAssetModificationProcessor.cs	/^        public static string[] OnWillSaveAssets(string[] paths)$/;"	m	class:ParrelSync.ParrelSyncAssetModificationProcessor
OnuDragChanged	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void OnuDragChanged(float _, float newValue)$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
OnuDragChanged	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void OnuDragChanged(float _, float newValue)$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
OpenCallback	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^        static void OpenCallback(int index) => instances[index].onOpen();$/;"	m	class:Mirror.SimpleWeb.WebSocketClientWebGl	file:
OpenFAQ	Assets/ParrelSync/ParrelSync/Editor/NonCore/OtherMenuItem.cs	/^        private static void OpenFAQ()$/;"	m	class:ParrelSync.NonCore.OtherMenuItem	file:
OpenGitHub	Assets/ParrelSync/ParrelSync/Editor/NonCore/OtherMenuItem.cs	/^        private static void OpenGitHub()$/;"	m	class:ParrelSync.NonCore.OtherMenuItem	file:
OpenGitHubIssues	Assets/ParrelSync/ParrelSync/Editor/NonCore/OtherMenuItem.cs	/^        private static void OpenGitHubIssues()$/;"	m	class:ParrelSync.NonCore.OtherMenuItem	file:
OpenProject	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static void OpenProject(string projectPath)$/;"	m	class:ParrelSync.ClonesManager
OpenProjectInFileExplorer	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public static void OpenProjectInFileExplorer(string path)$/;"	m	class:ParrelSync.ClonesManager
Operation	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public enum Operation : byte$/;"	g	class:Mirror.SyncIDictionary
Operation	Assets/Mirror/Runtime/SyncList.cs	/^        public enum Operation : byte$/;"	g	class:Mirror.SyncList
Operation	Assets/Mirror/Runtime/SyncSet.cs	/^        public enum Operation : byte$/;"	g	class:Mirror.SyncSet
Other Examples	Assets/Mirror/Examples/Cloud/GUI/README.md	/^## Other Examples$/;"	s
OtherMenuItem	Assets/ParrelSync/ParrelSync/Editor/NonCore/OtherMenuItem.cs	/^    public class OtherMenuItem$/;"	c	namespace:ParrelSync.NonCore
OutMessageEvent	Assets/Mirror/Runtime/NetworkDiagnostics.cs	/^        public static event Action<MessageInfo> OutMessageEvent;$/;"	E	class:Mirror.NetworkDiagnostics
Owner	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^    public enum SyncMode { Observers, Owner }$/;"	e	enum:Mirror.SyncMode	file:
PATCH	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        const string PATCH = "PATCH";$/;"	f	class:Mirror.Cloud.RequestCreator	file:
PING_INTERVAL	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public const int PING_INTERVAL = 1000;$/;"	f	class:kcp2k.KcpConnection
POST	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        const string POST = "POST";$/;"	f	class:Mirror.Cloud.RequestCreator	file:
PROBE_INIT	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int PROBE_INIT = 7000;        \/\/ 7 secs to probe window size$/;"	f	class:kcp2k.Kcp
PROBE_LIMIT	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int PROBE_LIMIT = 120000;     \/\/ up to 120 secs to probe window$/;"	f	class:kcp2k.Kcp
ParrelSync	Assets/ParrelSync/ParrelSync/Editor/AssetModBlock/EditorQuit.cs	/^namespace ParrelSync$/;"	n
ParrelSync	Assets/ParrelSync/ParrelSync/Editor/AssetModBlock/ParrelSyncAssetModificationProcessor.cs	/^namespace ParrelSync$/;"	n
ParrelSync	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^namespace ParrelSync$/;"	n
ParrelSync	Assets/ParrelSync/ParrelSync/Editor/ClonesManagerWindow.cs	/^namespace ParrelSync$/;"	n
ParrelSync	Assets/ParrelSync/ParrelSync/Editor/ExternalLinks.cs	/^namespace ParrelSync$/;"	n
ParrelSync	Assets/ParrelSync/ParrelSync/Editor/FileUtilities.cs	/^namespace ParrelSync$/;"	n
ParrelSync	Assets/ParrelSync/ParrelSync/Editor/Preferences.cs	/^namespace ParrelSync$/;"	n
ParrelSync	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^namespace ParrelSync$/;"	n
ParrelSync	Assets/ParrelSync/README.md	/^# ParrelSync $/;"	c
ParrelSync.Example	Assets/ParrelSync/Examples/CustomArgumentExample.cs	/^namespace ParrelSync.Example$/;"	n
ParrelSync.NonCore	Assets/ParrelSync/ParrelSync/Editor/NonCore/AskFeedbackDialog.cs	/^namespace ParrelSync.NonCore$/;"	n
ParrelSync.NonCore	Assets/ParrelSync/ParrelSync/Editor/NonCore/OtherMenuItem.cs	/^namespace ParrelSync.NonCore$/;"	n
ParrelSync.NonCore	Assets/ParrelSync/ParrelSync/Editor/ValidateCopiedFoldersIntegrity.cs	/^namespace ParrelSync.NonCore$/;"	n
ParrelSync.Update	Assets/ParrelSync/ParrelSync/Editor/UpdateChecker.cs	/^namespace ParrelSync.Update$/;"	n
ParrelSyncAssetModificationProcessor	Assets/ParrelSync/ParrelSync/Editor/AssetModBlock/ParrelSyncAssetModificationProcessor.cs	/^    public class ParrelSyncAssetModificationProcessor : UnityEditor.AssetModificationProcessor$/;"	c	namespace:ParrelSync
ParseAck	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal void ParseAck(uint sn)$/;"	m	class:kcp2k.Kcp	file:
ParseData	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        void ParseData(Segment newseg)$/;"	m	class:kcp2k.Kcp	file:
ParseFastack	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        void ParseFastack(uint sn, uint ts)$/;"	m	class:kcp2k.Kcp	file:
ParsePath	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        private void ParsePath(string path)$/;"	m	class:ParrelSync.Project	file:
ParseUna	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        void ParseUna(uint una)$/;"	m	class:kcp2k.Kcp	file:
PartialServerJson	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^    public struct PartialServerJson : ICanBeJson$/;"	s	namespace:Mirror.Cloud.ListServerService
Pause	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^        public void Pause() => connection?.Pause();$/;"	m	class:kcp2k.KcpClient
Pause	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public void Pause() => paused = true;$/;"	m	class:kcp2k.KcpConnection
Pause	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public void Pause()$/;"	m	class:kcp2k.KcpServer
PeekSize	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public int PeekSize()$/;"	m	class:kcp2k.Kcp
PendingPlayer	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public struct PendingPlayer$/;"	s	class:Mirror.NetworkRoomManager
PersistNetworkManagerToOfflineScene	Assets/Mirror/Runtime/NetworkManager.cs	/^        public bool PersistNetworkManagerToOfflineScene;$/;"	f	class:Mirror.NetworkManager
PhysicsCollision	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PhysicsCollision.cs	/^    public class PhysicsCollision : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.MultipleAdditiveScenes
PhysicsSimulator	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PhysicsSimulator.cs	/^    public class PhysicsSimulator : MonoBehaviour$/;"	c	namespace:Mirror.Examples.MultipleAdditiveScenes
Ping	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpHeader.cs	/^        Ping = 0x02,$/;"	e	enum:kcp2k.KcpHeader	file:
PingFrequency	Assets/Mirror/Runtime/NetworkTime.cs	/^        public static float PingFrequency = 2.0f;$/;"	f	class:Mirror.NetworkTime
PingInterval	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        const int PingInterval = 20;$/;"	f	class:Mirror.Cloud.ListServerService.ListServerServerApi	file:
PingWindowSize	Assets/Mirror/Runtime/NetworkTime.cs	/^        public static int PingWindowSize = 10;$/;"	f	class:Mirror.NetworkTime
Player	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^    public class Player : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.Basic
Player	Assets/Mirror/Examples/Chat/Scripts/Player.cs	/^    public class Player : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.Chat
Player	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/Player.cs	/^    public class Player : NetworkBehaviour$/;"	c	namespace:Mirror.Cloud.Examples.Pong
Player	Assets/Mirror/Examples/Pong/Scripts/Player.cs	/^    public class Player : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.Pong
PlayerColorChanged	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        void PlayerColorChanged(Color32 _, Color32 newPlayerColor)$/;"	m	class:Mirror.Examples.Basic.Player	file:
PlayerController	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^    public class PlayerController : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.Additive
PlayerController	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^    public class PlayerController : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.MultipleAdditiveScenes
PlayerController	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^    public class PlayerController : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.NetworkRoom
PlayerDataChanged	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        void PlayerDataChanged(int _, int newPlayerData)$/;"	m	class:Mirror.Examples.Basic.Player	file:
PlayerGUI	Assets/Mirror/Examples/MultipleMatches/Scripts/PlayerGUI.cs	/^    public class PlayerGUI : MonoBehaviour$/;"	c	namespace:Mirror.Examples.MultipleMatch
PlayerInfo	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^    public struct PlayerInfo$/;"	s	namespace:Mirror.Examples.MultipleMatch
PlayerMovement	Assets/Mirror/Examples/Benchmark/Scripts/PlayerMovement.cs	/^    public class PlayerMovement : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.Benchmark
PlayerMovement	Assets/Project/Scripts/Player/PlayerMovement.cs	/^public class PlayerMovement : NetworkBehaviour {$/;"	c
PlayerName	Assets/Mirror/Examples/Chat/Scripts/ChatNetworkManager.cs	/^        public string PlayerName { get; set; }$/;"	p	class:Mirror.Examples.Chat.ChatNetworkManager
PlayerNumberChanged	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        void PlayerNumberChanged(int _, int newPlayerNumber)$/;"	m	class:Mirror.Examples.Basic.Player	file:
PlayerScore	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerScore.cs	/^    public class PlayerScore : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.MultipleAdditiveScenes
PlayerScore	Assets/Mirror/Examples/Room/Scripts/PlayerScore.cs	/^    public class PlayerScore : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.NetworkRoom
PlayerSpawnMethod	Assets/Mirror/Runtime/NetworkManager.cs	/^    public enum PlayerSpawnMethod { Random, RoundRobin }$/;"	g	namespace:Mirror
PlayerUI	Assets/Mirror/Examples/Basic/Scripts/PlayerUI.cs	/^    public class PlayerUI : MonoBehaviour$/;"	c	namespace:Mirror.Examples.Basic
Playing in the Instances	Assets/Mirror/Examples/MultipleAdditiveScenes/README.md	/^## Playing in the Instances$/;"	s
Pong with Cloud List server	Assets/Mirror/Examples/Cloud/PongWithListServer/README.md	/^# Pong with Cloud List server$/;"	c
Pong with Cloud List server	Assets/Mirror/Examples/Cloud/TanksWithListServer/README.md	/^# Pong with Cloud List server$/;"	c
Pool	Assets/Mirror/Runtime/NetworkReaderPool.cs	/^        static readonly Pool<PooledNetworkReader> Pool = new Pool<PooledNetworkReader>($/;"	f	class:Mirror.NetworkReaderPool	file:
Pool	Assets/Mirror/Runtime/NetworkWriterPool.cs	/^        static readonly Pool<PooledNetworkWriter> Pool = new Pool<PooledNetworkWriter>($/;"	f	class:Mirror.NetworkWriterPool	file:
Pool	Assets/Mirror/Runtime/Pool.cs	/^        public Pool(Func<T> objectGenerator)$/;"	m	class:Mirror.Pool
Pool	Assets/Mirror/Runtime/Pool.cs	/^    public class Pool<T>$/;"	c	namespace:Mirror
Pool	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        internal static readonly Stack<Segment> Pool = new Stack<Segment>(32);$/;"	f	class:kcp2k.Segment	file:
Pool	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Pool.cs	/^        public Pool(Func<T> objectGenerator)$/;"	m	class:Telepathy.Pool
Pool	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Pool.cs	/^    public class Pool<T>$/;"	c	namespace:Telepathy
PoolCount	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^        public int PoolCount$/;"	p	class:Telepathy.MagnificentReceivePipe
PoolCount	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentSendPipe.cs	/^        public int PoolCount$/;"	p	class:Telepathy.MagnificentSendPipe
PooledNetworkReader	Assets/Mirror/Runtime/NetworkReaderPool.cs	/^        internal PooledNetworkReader(ArraySegment<byte> segment) : base(segment) {}$/;"	m	class:Mirror.PooledNetworkReader	file:
PooledNetworkReader	Assets/Mirror/Runtime/NetworkReaderPool.cs	/^        internal PooledNetworkReader(byte[] bytes) : base(bytes) {}$/;"	m	class:Mirror.PooledNetworkReader	file:
PooledNetworkReader	Assets/Mirror/Runtime/NetworkReaderPool.cs	/^    public sealed class PooledNetworkReader : NetworkReader, IDisposable$/;"	c	namespace:Mirror
PooledNetworkWriter	Assets/Mirror/Runtime/NetworkWriterPool.cs	/^    public sealed class PooledNetworkWriter : NetworkWriter, IDisposable$/;"	c	namespace:Mirror
Port	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public ushort Port = 7777;$/;"	f	class:kcp2k.KcpTransport
Position	Assets/Mirror/Runtime/NetworkReader.cs	/^        public int Position;$/;"	f	class:Mirror.NetworkReader
Position	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public int Position$/;"	p	class:Mirror.NetworkWriter
Preferences	Assets/ParrelSync/ParrelSync/Editor/Preferences.cs	/^    public class Preferences : EditorWindow$/;"	c	namespace:ParrelSync
PrepareSceneObject	Assets/Mirror/Editor/NetworkScenePostProcess.cs	/^        static void PrepareSceneObject(NetworkIdentity identity)$/;"	m	class:Mirror.NetworkScenePostProcess	file:
PrepareToSpawnSceneObjects	Assets/Mirror/Runtime/ClientScene.cs	/^        public static void PrepareToSpawnSceneObjects() => NetworkClient.PrepareToSpawnSceneObje/;"	m	class:Mirror.ClientScene
PrepareToSpawnSceneObjects	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void PrepareToSpawnSceneObjects()$/;"	m	class:Mirror.NetworkClient
PreprocessorDefine	Assets/Mirror/CompilerSymbols/PreprocessorDefine.cs	/^    static class PreprocessorDefine$/;"	c	namespace:Mirror
PrettyBytes	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public static string PrettyBytes(long bytes)$/;"	m	class:kcp2k.KcpTransport
Process	Assets/Mirror/Editor/Weaver/Processors/MonoBehaviourProcessor.cs	/^        public static void Process(TypeDefinition td)$/;"	m	class:Mirror.Weaver.MonoBehaviourProcessor
Process	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public bool Process()$/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor
Process	Assets/Mirror/Editor/Weaver/Processors/PropertySiteProcessor.cs	/^        public static void Process(ModuleDefinition moduleDef)$/;"	m	class:Mirror.Weaver.PropertySiteProcessor
Process	Assets/Mirror/Editor/Weaver/Processors/ReaderWriterProcessor.cs	/^        public static bool Process(AssemblyDefinition CurrentAssembly)$/;"	m	class:Mirror.Weaver.ReaderWriterProcessor
Process	Assets/Mirror/Editor/Weaver/Processors/ServerClientAttributeProcessor.cs	/^        public static bool Process(TypeDefinition td)$/;"	m	class:Mirror.Weaver.ServerClientAttributeProcessor
ProcessAssemblyClasses	Assets/Mirror/Editor/Weaver/Processors/ReaderWriterProcessor.cs	/^        static bool ProcessAssemblyClasses(AssemblyDefinition CurrentAssembly, AssemblyDefinitio/;"	m	class:Mirror.Weaver.ReaderWriterProcessor	file:
ProcessClientRequest	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        protected virtual void ProcessClientRequest(Request request, IPEndPoint endpoint)$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase
ProcessClientRpc	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        void ProcessClientRpc(HashSet<string> names, MethodDefinition md, CustomAttribute client/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
ProcessCommand	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        void ProcessCommand(HashSet<string> names, MethodDefinition md, CustomAttribute commandA/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
ProcessCommandCall	Assets/Mirror/Editor/Weaver/Processors/CommandProcessor.cs	/^        public static MethodDefinition ProcessCommandCall(TypeDefinition td, MethodDefinition md/;"	m	class:Mirror.Weaver.CommandProcessor
ProcessCommandInvoke	Assets/Mirror/Editor/Weaver/Processors/CommandProcessor.cs	/^        public static MethodDefinition ProcessCommandInvoke(TypeDefinition td, MethodDefinition /;"	m	class:Mirror.Weaver.CommandProcessor
ProcessInstruction	Assets/Mirror/Editor/Weaver/Processors/PropertySiteProcessor.cs	/^        static int ProcessInstruction(MethodDefinition md, Instruction instr, int iCount)$/;"	m	class:Mirror.Weaver.PropertySiteProcessor	file:
ProcessInstructionGetterField	Assets/Mirror/Editor/Weaver/Processors/PropertySiteProcessor.cs	/^        static void ProcessInstructionGetterField(MethodDefinition md, Instruction i, FieldDefin/;"	m	class:Mirror.Weaver.PropertySiteProcessor	file:
ProcessInstructionLoadAddress	Assets/Mirror/Editor/Weaver/Processors/PropertySiteProcessor.cs	/^        static int ProcessInstructionLoadAddress(MethodDefinition md, Instruction instr, FieldDe/;"	m	class:Mirror.Weaver.PropertySiteProcessor	file:
ProcessInstructionSetterField	Assets/Mirror/Editor/Weaver/Processors/PropertySiteProcessor.cs	/^        static void ProcessInstructionSetterField(MethodDefinition md, Instruction i, FieldDefin/;"	m	class:Mirror.Weaver.PropertySiteProcessor	file:
ProcessMessageQueue	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        public void ProcessMessageQueue(MonoBehaviour behaviour)$/;"	m	class:Mirror.SimpleWeb.SimpleWebClient
ProcessMessageQueue	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        public void ProcessMessageQueue(MonoBehaviour behaviour)$/;"	m	class:Mirror.SimpleWeb.SimpleWebServer
ProcessMethodAttributes	Assets/Mirror/Editor/Weaver/Processors/ServerClientAttributeProcessor.cs	/^        public static bool ProcessMethodAttributes(MethodDefinition md)$/;"	m	class:Mirror.Weaver.ServerClientAttributeProcessor
ProcessMethods	Assets/Mirror/Editor/Weaver/Processors/MonoBehaviourProcessor.cs	/^        static void ProcessMethods(TypeDefinition td)$/;"	m	class:Mirror.Weaver.MonoBehaviourProcessor	file:
ProcessMethods	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        void ProcessMethods()$/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
ProcessRequest	Assets/Mirror/Components/Discovery/NetworkDiscovery.cs	/^        protected override ServerResponse ProcessRequest(ServerRequest request, IPEndPoint endpo/;"	m	class:Mirror.Discovery.NetworkDiscovery
ProcessRequest	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        protected abstract Response ProcessRequest(Request request, IPEndPoint endpoint);$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase
ProcessResponse	Assets/Mirror/Components/Discovery/NetworkDiscovery.cs	/^        protected override void ProcessResponse(ServerResponse response, IPEndPoint endpoint)$/;"	m	class:Mirror.Discovery.NetworkDiscovery
ProcessResponse	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        protected abstract void ProcessResponse(Response response, IPEndPoint endpoint);$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase
ProcessRpcCall	Assets/Mirror/Editor/Weaver/Processors/RpcProcessor.cs	/^        public static MethodDefinition ProcessRpcCall(TypeDefinition td, MethodDefinition md, Cu/;"	m	class:Mirror.Weaver.RpcProcessor
ProcessRpcInvoke	Assets/Mirror/Editor/Weaver/Processors/RpcProcessor.cs	/^        public static MethodDefinition ProcessRpcInvoke(TypeDefinition td, MethodDefinition md, /;"	m	class:Mirror.Weaver.RpcProcessor
ProcessSiteClass	Assets/Mirror/Editor/Weaver/Processors/PropertySiteProcessor.cs	/^        static void ProcessSiteClass(TypeDefinition td)$/;"	m	class:Mirror.Weaver.PropertySiteProcessor	file:
ProcessSiteMethod	Assets/Mirror/Editor/Weaver/Processors/PropertySiteProcessor.cs	/^        static void ProcessSiteMethod(MethodDefinition md)$/;"	m	class:Mirror.Weaver.PropertySiteProcessor	file:
ProcessSiteMethod	Assets/Mirror/Editor/Weaver/Processors/ServerClientAttributeProcessor.cs	/^        static bool ProcessSiteMethod(MethodDefinition md)$/;"	m	class:Mirror.Weaver.ServerClientAttributeProcessor	file:
ProcessSyncVar	Assets/Mirror/Editor/Weaver/Processors/SyncVarProcessor.cs	/^        public static void ProcessSyncVar(TypeDefinition td, FieldDefinition fd, Dictionary<Fiel/;"	m	class:Mirror.Weaver.SyncVarProcessor
ProcessSyncVars	Assets/Mirror/Editor/Weaver/Processors/MonoBehaviourProcessor.cs	/^        static void ProcessSyncVars(TypeDefinition td)$/;"	m	class:Mirror.Weaver.MonoBehaviourProcessor	file:
ProcessSyncVars	Assets/Mirror/Editor/Weaver/Processors/SyncVarProcessor.cs	/^        public static (List<FieldDefinition> syncVars, Dictionary<FieldDefinition, FieldDefiniti/;"	m	class:Mirror.Weaver.SyncVarProcessor	file:
ProcessTargetRpc	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        void ProcessTargetRpc(HashSet<string> names, MethodDefinition md, CustomAttribute target/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
ProcessTargetRpcCall	Assets/Mirror/Editor/Weaver/Processors/TargetRpcProcessor.cs	/^        public static MethodDefinition ProcessTargetRpcCall(TypeDefinition td, MethodDefinition /;"	m	class:Mirror.Weaver.TargetRpcProcessor
ProcessTargetRpcInvoke	Assets/Mirror/Editor/Weaver/Processors/TargetRpcProcessor.cs	/^        public static MethodDefinition ProcessTargetRpcInvoke(TypeDefinition td, MethodDefinitio/;"	m	class:Mirror.Weaver.TargetRpcProcessor
ProcessedFunctionName	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public const string ProcessedFunctionName = "MirrorProcessed";$/;"	f	class:Mirror.Weaver.NetworkBehaviourProcessor
Project	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        public Project()$/;"	m	class:ParrelSync.Project
Project	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        public Project(string path)$/;"	m	class:ParrelSync.Project
Project	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^    public class Project : System.ICloneable$/;"	c	namespace:ParrelSync
ProjectName	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        public const string ProjectName = "ParrelSync";$/;"	f	class:ParrelSync.ClonesManager
Projectile	Assets/Mirror/Examples/Tanks/Scripts/Projectile.cs	/^    public class Projectile : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.Tanks
PropertySiteProcessor	Assets/Mirror/Editor/Weaver/Processors/PropertySiteProcessor.cs	/^    public static class PropertySiteProcessor$/;"	c	namespace:Mirror.Weaver
QuaternionElement	Assets/Mirror/Runtime/Compression.cs	/^        static float QuaternionElement(Quaternion q, int element)$/;"	m	class:Mirror.Compression	file:
QuaternionMaxRange	Assets/Mirror/Runtime/Compression.cs	/^        const float QuaternionMaxRange =  0.707107f;$/;"	f	class:Mirror.Compression	file:
QuaternionMinRange	Assets/Mirror/Runtime/Compression.cs	/^        const float QuaternionMinRange = -0.707107f;$/;"	f	class:Mirror.Compression	file:
QuaternionNormalizeSafe	Assets/Mirror/Runtime/Compression.cs	/^        static Quaternion QuaternionNormalizeSafe(Quaternion value)$/;"	m	class:Mirror.Compression	file:
QueueConnectedEvent	Assets/Mirror/Runtime/LocalConnections.cs	/^        internal void QueueConnectedEvent() => connectedEventPending = true;$/;"	m	class:Mirror.LocalConnectionToServer	file:
QueueDisconnectThreshold	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        internal const int QueueDisconnectThreshold = 10000;$/;"	f	class:kcp2k.KcpConnection	file:
QueueDisconnectedEvent	Assets/Mirror/Runtime/LocalConnections.cs	/^        internal void QueueDisconnectedEvent() => disconnectedEventPending = true;$/;"	m	class:Mirror.LocalConnectionToServer	file:
QueuedMessage	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^    struct QueuedMessage$/;"	s	namespace:Mirror
QuickListServerDebug	Assets/Mirror/Examples/Cloud/GUI/Scripts/QuickListServerDebug.cs	/^    public class QuickListServerDebug : MonoBehaviour$/;"	c	namespace:Mirror.Cloud.Example
Quit	Assets/ParrelSync/ParrelSync/Editor/AssetModBlock/EditorQuit.cs	/^        static void Quit()$/;"	m	class:ParrelSync.EditorQuit	file:
QuitButtonHUD	Assets/Mirror/Examples/Cloud/GUI/Scripts/QuitButtonHUD.cs	/^    public class QuitButtonHUD : MonoBehaviour$/;"	c	namespace:Mirror.Examples.Pong
READY_STRING	Assets/Project/Scripts/UI/LobbyManager.cs	/^    private const string READY_STRING = "Ready";$/;"	f	class:LobbyManager	file:
READY_STRING	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    private const string READY_STRING = "<color=green>Ready<\/color>";$/;"	f	class:LobbyPlayer	file:
RTO_DEF	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int RTO_DEF = 200;            \/\/ default RTO$/;"	f	class:kcp2k.Kcp
RTO_MAX	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int RTO_MAX = 60000;          \/\/ maximum RTO$/;"	f	class:kcp2k.Kcp
RTO_MIN	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int RTO_MIN = 100;            \/\/ normal min rto$/;"	f	class:kcp2k.Kcp
RTO_NDL	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int RTO_NDL = 30;             \/\/ no delay min rto$/;"	f	class:kcp2k.Kcp
Random	Assets/Mirror/Runtime/NetworkManager.cs	/^    public enum PlayerSpawnMethod { Random, RoundRobin }$/;"	e	enum:Mirror.PlayerSpawnMethod	file:
RandomColor	Assets/Mirror/Examples/AdditiveScenes/Scripts/RandomColor.cs	/^    public class RandomColor : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.Additive
RandomColor	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/RandomColor.cs	/^    public class RandomColor : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.MultipleAdditiveScenes
RandomColor	Assets/Mirror/Examples/Room/Scripts/RandomColor.cs	/^    public class RandomColor : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.NetworkRoom
RandomLong	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        public static long RandomLong()$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase
RawInput	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public void RawInput(byte[] buffer, int msgLength)$/;"	m	class:kcp2k.KcpConnection
RawReceive	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClientConnection.cs	/^        public void RawReceive()$/;"	m	class:kcp2k.KcpClientConnection
RawSend	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClientConnection.cs	/^        protected override void RawSend(byte[] data, int length)$/;"	m	class:kcp2k.KcpClientConnection
RawSend	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        protected abstract void RawSend(byte[] data, int length);$/;"	m	class:kcp2k.KcpConnection
RawSend	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServerConnection.cs	/^        protected override void RawSend(byte[] data, int length)$/;"	m	class:kcp2k.KcpServerConnection
RawSendReliable	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        void RawSendReliable(byte[] data, int length)$/;"	m	class:kcp2k.KcpConnection	file:
Read	Assets/Mirror/Runtime/NetworkReader.cs	/^        public T Read<T>()$/;"	m	class:Mirror.NetworkReader
Read	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReadHelper.cs	/^        public static int Read(Stream stream, byte[] outBuffer, int outOffset, int length)$/;"	m	class:Mirror.SimpleWeb.ReadHelper
ReadAllFields	Assets/Mirror/Editor/Weaver/Readers.cs	/^        static void ReadAllFields(TypeReference variable, ILProcessor worker)$/;"	m	class:Mirror.Weaver.Readers	file:
ReadArguments	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public static bool ReadArguments(MethodDefinition method, ILProcessor worker, RemoteCall/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor
ReadArray	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static T[] ReadArray<T>(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadBoolean	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static bool ReadBoolean(this NetworkReader reader) => reader.ReadByte() != 0;$/;"	m	class:Mirror.NetworkReaderExtensions
ReadByte	Assets/Mirror/Runtime/NetworkReader.cs	/^        public byte ReadByte()$/;"	m	class:Mirror.NetworkReader
ReadByte	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static byte ReadByte(this NetworkReader reader) => reader.ReadByte();$/;"	m	class:Mirror.NetworkReaderExtensions
ReadBytes	Assets/Mirror/Runtime/NetworkReader.cs	/^        public byte[] ReadBytes(byte[] bytes, int count)$/;"	m	class:Mirror.NetworkReader
ReadBytes	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static byte[] ReadBytes(this NetworkReader reader, int count)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadBytesAndSize	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static byte[] ReadBytesAndSize(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadBytesAndSizeSegment	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static ArraySegment<byte> ReadBytesAndSizeSegment(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadBytesSegment	Assets/Mirror/Runtime/NetworkReader.cs	/^        public ArraySegment<byte> ReadBytesSegment(int count)$/;"	m	class:Mirror.NetworkReader
ReadChar	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static char ReadChar(this NetworkReader reader) => (char)reader.ReadUInt16();$/;"	m	class:Mirror.NetworkReaderExtensions
ReadColor	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Color ReadColor(this NetworkReader reader) => new Color(reader.ReadSingle(/;"	m	class:Mirror.NetworkReaderExtensions
ReadColor32	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Color32 ReadColor32(this NetworkReader reader) => new Color32(reader.ReadB/;"	m	class:Mirror.NetworkReaderExtensions
ReadDecimal	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static decimal ReadDecimal(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadDouble	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static double ReadDouble(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadExactly	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/NetworkStreamExtensions.cs	/^        public static bool ReadExactly(this NetworkStream stream, byte[] buffer, int amount)$/;"	m	class:Telepathy.NetworkStreamExtensions
ReadGameObject	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static GameObject ReadGameObject(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadGuid	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Guid ReadGuid(this NetworkReader reader) => new Guid(reader.ReadBytes(16))/;"	m	class:Mirror.NetworkReaderExtensions
ReadHelper	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReadHelper.cs	/^    public static class ReadHelper$/;"	c	namespace:Mirror.SimpleWeb
ReadHelperException	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReadHelper.cs	/^        protected ReadHelperException(SerializationInfo info, StreamingContext context) : base(i/;"	m	class:Mirror.SimpleWeb.ReadHelperException
ReadHelperException	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReadHelper.cs	/^        public ReadHelperException(string message) : base(message) {}$/;"	m	class:Mirror.SimpleWeb.ReadHelperException
ReadHelperException	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReadHelper.cs	/^    public class ReadHelperException : Exception$/;"	c	namespace:Mirror.SimpleWeb
ReadInt16	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static short ReadInt16(this NetworkReader reader) => (short)reader.ReadUInt16();$/;"	m	class:Mirror.NetworkReaderExtensions
ReadInt32	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static int ReadInt32(this NetworkReader reader) => (int)reader.ReadUInt32();$/;"	m	class:Mirror.NetworkReaderExtensions
ReadInt64	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static long ReadInt64(this NetworkReader reader) => (long)reader.ReadUInt64();$/;"	m	class:Mirror.NetworkReaderExtensions
ReadList	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static List<T> ReadList<T>(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadMatrix4x4	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Matrix4x4 ReadMatrix4x4(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadMessageBlocking	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/ThreadFunctions.cs	/^        public static bool ReadMessageBlocking(NetworkStream stream, int MaxMessageSize, byte[] /;"	m	class:Telepathy.ThreadFunctions
ReadNetworkBehaviour	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static NetworkBehaviour ReadNetworkBehaviour(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadNetworkBehaviourSyncVar	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static NetworkBehaviour.NetworkBehaviourSyncVar ReadNetworkBehaviourSyncVar(this /;"	m	class:Mirror.NetworkReaderExtensions
ReadNetworkIdentity	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static NetworkIdentity ReadNetworkIdentity(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadOneMessage	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^        static void ReadOneMessage(Config config, byte[] buffer)$/;"	m	class:Mirror.SimpleWeb.ReceiveLoop	file:
ReadParameters	Assets/Mirror/Components/NetworkAnimator.cs	/^        void ReadParameters(NetworkReader reader)$/;"	m	class:Mirror.NetworkAnimator	file:
ReadPlane	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Plane ReadPlane(this NetworkReader reader) => new Plane(reader.ReadVector3/;"	m	class:Mirror.NetworkReaderExtensions
ReadQuaternion	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Quaternion ReadQuaternion(this NetworkReader reader) => new Quaternion(rea/;"	m	class:Mirror.NetworkReaderExtensions
ReadRay	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Ray ReadRay(this NetworkReader reader) => new Ray(reader.ReadVector3(), re/;"	m	class:Mirror.NetworkReaderExtensions
ReadRect	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Rect ReadRect(this NetworkReader reader) => new Rect(reader.ReadSingle(), /;"	m	class:Mirror.NetworkReaderExtensions
ReadSByte	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static sbyte ReadSByte(this NetworkReader reader) => (sbyte)reader.ReadByte();$/;"	m	class:Mirror.NetworkReaderExtensions
ReadSafely	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/NetworkStreamExtensions.cs	/^        public static int ReadSafely(this NetworkStream stream, byte[] buffer, int offset, int s/;"	m	class:Telepathy.NetworkStreamExtensions
ReadSingle	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static float ReadSingle(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadString	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static string ReadString(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadToEndForHandshake	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        string ReadToEndForHandshake(Stream stream)$/;"	m	class:Mirror.SimpleWeb.ServerHandshake	file:
ReadTransform	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Transform ReadTransform(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadUInt16	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static ushort ReadUInt16(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadUInt32	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static uint ReadUInt32(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadUInt64	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static ulong ReadUInt64(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadUri	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Uri ReadUri(this NetworkReader reader)$/;"	m	class:Mirror.NetworkReaderExtensions
ReadVector2	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Vector2 ReadVector2(this NetworkReader reader) => new Vector2(reader.ReadS/;"	m	class:Mirror.NetworkReaderExtensions
ReadVector2Int	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Vector2Int ReadVector2Int(this NetworkReader reader) => new Vector2Int(rea/;"	m	class:Mirror.NetworkReaderExtensions
ReadVector3	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Vector3 ReadVector3(this NetworkReader reader) => new Vector3(reader.ReadS/;"	m	class:Mirror.NetworkReaderExtensions
ReadVector3Int	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Vector3Int ReadVector3Int(this NetworkReader reader) => new Vector3Int(rea/;"	m	class:Mirror.NetworkReaderExtensions
ReadVector4	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Vector4 ReadVector4(this NetworkReader reader) => new Vector4(reader.ReadS/;"	m	class:Mirror.NetworkReaderExtensions
Reader	Assets/Mirror/Runtime/NetworkReader.cs	/^    public static class Reader<T>$/;"	c	namespace:Mirror
ReaderWriterProcessor	Assets/Mirror/Editor/Weaver/Processors/ReaderWriterProcessor.cs	/^    public static class ReaderWriterProcessor$/;"	c	namespace:Mirror.Weaver
Readers	Assets/Mirror/Editor/Weaver/Readers.cs	/^    public static class Readers$/;"	c	namespace:Mirror.Weaver
Ready	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        Ready$/;"	e	enum:Mirror.Examples.MultipleMatch.ServerMatchOperation	file:
Ready	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static bool Ready()$/;"	m	class:Mirror.NetworkClient
ReadyConnectionReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference ReadyConnectionReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
ReadyMessage	Assets/Mirror/Runtime/Messages.cs	/^    public struct ReadyMessage : NetworkMessage {}$/;"	s	namespace:Mirror
ReadyStateChanged	Assets/Mirror/Components/NetworkRoomPlayer.cs	/^        public virtual void ReadyStateChanged(bool oldReadyState, bool newReadyState) {}$/;"	m	class:Mirror.NetworkRoomPlayer
ReadyStateChanged	Assets/Mirror/Examples/Room/Scripts/NetworkRoomPlayerExt.cs	/^        public override void ReadyStateChanged(bool oldReadyState, bool newReadyState)$/;"	m	class:Mirror.Examples.NetworkRoom.NetworkRoomPlayerExt
ReadyStatusChanged	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public void ReadyStatusChanged()$/;"	m	class:Mirror.NetworkRoomManager
ReadyText	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    public TextMeshProUGUI ReadyText;$/;"	f	class:LobbyPlayer
RebuildAll	Assets/Mirror/Runtime/InterestManagement.cs	/^        protected void RebuildAll()$/;"	m	class:Mirror.InterestManagement
RebuildMatchObservers	Assets/Mirror/Components/NetworkMatchChecker.cs	/^        void RebuildMatchObservers(Guid specificMatch)$/;"	m	class:Mirror.NetworkMatchChecker	file:
RebuildObservers	Assets/Mirror/Components/NetworkProximityChecker.cs	/^        void RebuildObservers()$/;"	m	class:Mirror.NetworkProximityChecker	file:
RebuildObservers	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void RebuildObservers(NetworkIdentity identity, bool initialize)$/;"	m	class:Mirror.NetworkServer
RebuildObserversCustom	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void RebuildObserversCustom(NetworkIdentity identity, bool initialize)$/;"	m	class:Mirror.NetworkServer	file:
RebuildObserversDefault	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void RebuildObserversDefault(NetworkIdentity identity, bool initialize)$/;"	m	class:Mirror.NetworkServer	file:
RebuildSceneObservers	Assets/Mirror/Components/NetworkSceneChecker.cs	/^        void RebuildSceneObservers()$/;"	m	class:Mirror.NetworkSceneChecker	file:
RecalculateRoomPlayerIndices	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public void RecalculateRoomPlayerIndices()$/;"	m	class:Mirror.NetworkRoomManager
Receive	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public int Receive(byte[] buffer, int len)$/;"	m	class:kcp2k.Kcp
ReceiveBufferCount	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public int ReceiveBufferCount => kcp.rcv_buf.Count;$/;"	f	class:kcp2k.KcpConnection
ReceiveGameBroadcastAsync	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        async Task ReceiveGameBroadcastAsync(UdpClient udpClient)$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase	file:
ReceiveLoop	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^    internal static class ReceiveLoop$/;"	c	namespace:Mirror.SimpleWeb
ReceiveLoop	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/ThreadFunctions.cs	/^        public static void ReceiveLoop(int connectionId, TcpClient client, int MaxMessageSize, M/;"	m	class:Telepathy.ThreadFunctions
ReceiveNextReliable	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        bool ReceiveNextReliable(out KcpHeader header, out ArraySegment<byte> message)$/;"	m	class:kcp2k.KcpConnection	file:
ReceivePipeCount	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public int ReceivePipeCount => state != null ? state.receivePipe.TotalCount : 0;$/;"	f	class:Telepathy.Client
ReceivePipeTotalCount	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public int ReceivePipeTotalCount => receivePipe.TotalCount;$/;"	f	class:Telepathy.Server
ReceiveQueueCount	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public int ReceiveQueueCount => kcp.rcv_queue.Count;$/;"	f	class:kcp2k.KcpConnection
ReceiveQueueLimit	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public int ReceiveQueueLimit = 10000;$/;"	f	class:Telepathy.Client
ReceiveQueueLimit	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public int ReceiveQueueLimit = 10000;$/;"	f	class:Telepathy.Server
ReceiveRequestAsync	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        async Task ReceiveRequestAsync(UdpClient udpClient)$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase	file:
ReceiveThreadFunction	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        static void ReceiveThreadFunction(ClientConnectionState state, string ip, int port, int /;"	m	class:Telepathy.Client	file:
ReceiveTimeout	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Common.cs	/^        public int ReceiveTimeout = 0;$/;"	f	class:Telepathy.Common
ReceiveTimeout	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public int ReceiveTimeout = 30000;$/;"	f	class:Mirror.TelepathyTransport
ReceiveWindowSize	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public uint ReceiveWindowSize = 4096; \/\/Kcp.WND_RCV; 128 by default. Mirror sends a lo/;"	f	class:kcp2k.KcpTransport
ReceiveWindowSize	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public uint ReceiveWindowSize;$/;"	f	class:kcp2k.KcpServer
Recycle	Assets/Mirror/Runtime/NetworkReaderPool.cs	/^        public static void Recycle(PooledNetworkReader reader)$/;"	m	class:Mirror.NetworkReaderPool
Recycle	Assets/Mirror/Runtime/NetworkWriterPool.cs	/^        public static void Recycle(PooledNetworkWriter writer)$/;"	m	class:Mirror.NetworkWriterPool
RecycleWriterReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference RecycleWriterReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
RefreshButtonHandler	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListManager.cs	/^        public void RefreshButtonHandler()$/;"	m	class:Mirror.Cloud.Example.ServerListManager
RefreshMatchList	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        void RefreshMatchList()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
RefreshRoomPlayers	Assets/Mirror/Examples/MultipleMatches/Scripts/RoomGUI.cs	/^        public void RefreshRoomPlayers(PlayerInfo[] playerInfos)$/;"	m	class:Mirror.Examples.MultipleMatch.RoomGUI
Register	Assets/Mirror/Editor/Weaver/Readers.cs	/^        internal static void Register(TypeReference dataType, MethodReference methodReference)$/;"	m	class:Mirror.Weaver.Readers	file:
Register	Assets/Mirror/Editor/Weaver/Writers.cs	/^        public static void Register(TypeReference dataType, MethodReference methodReference)$/;"	m	class:Mirror.Weaver.Writers
RegisterClientMessages	Assets/Mirror/Runtime/NetworkManager.cs	/^        void RegisterClientMessages()$/;"	m	class:Mirror.NetworkManager	file:
RegisterClone	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        private static void RegisterClone(Project cloneProject)$/;"	m	class:ParrelSync.ClonesManager	file:
RegisterCommandDelegate	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        public static void RegisterCommandDelegate(Type invokeClass, string cmdName, CmdDelegate/;"	m	class:Mirror.RemoteCalls.RemoteCallHelper
RegisterDelegate	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        internal static int RegisterDelegate(Type invokeClass, string cmdName, MirrorInvokeType /;"	m	class:Mirror.RemoteCalls.RemoteCallHelper	file:
RegisterHandler	Assets/Mirror/Runtime/NetworkServer.cs	/^            RegisterHandler<T>((_, value) => { handler(value); }, requireAuthentication);$/;"	m	struct:Mirror.NetworkServer.NetworkMessage
RegisterMessageHandlers	Assets/Mirror/Runtime/NetworkServer.cs	/^        internal static void RegisterMessageHandlers()$/;"	m	class:Mirror.NetworkServer	file:
RegisterPrefab	Assets/Mirror/Runtime/ClientScene.cs	/^        public static void RegisterPrefab(GameObject prefab, Guid newAssetId) => NetworkClient.R/;"	m	class:Mirror.ClientScene
RegisterPrefab	Assets/Mirror/Runtime/ClientScene.cs	/^        public static void RegisterPrefab(GameObject prefab, Guid newAssetId, SpawnDelegate spaw/;"	m	class:Mirror.ClientScene
RegisterPrefab	Assets/Mirror/Runtime/ClientScene.cs	/^        public static void RegisterPrefab(GameObject prefab, Guid newAssetId, SpawnHandlerDelega/;"	m	class:Mirror.ClientScene
RegisterPrefab	Assets/Mirror/Runtime/ClientScene.cs	/^        public static void RegisterPrefab(GameObject prefab, SpawnDelegate spawnHandler, UnSpawn/;"	m	class:Mirror.ClientScene
RegisterPrefab	Assets/Mirror/Runtime/ClientScene.cs	/^        public static void RegisterPrefab(GameObject prefab, SpawnHandlerDelegate spawnHandler, /;"	m	class:Mirror.ClientScene
RegisterPrefab	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void RegisterPrefab(GameObject prefab)$/;"	m	class:Mirror.NetworkClient
RegisterPrefab	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void RegisterPrefab(GameObject prefab, Guid newAssetId)$/;"	m	class:Mirror.NetworkClient
RegisterPrefab	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void RegisterPrefab(GameObject prefab, Guid newAssetId, SpawnDelegate spaw/;"	m	class:Mirror.NetworkClient
RegisterPrefab	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void RegisterPrefab(GameObject prefab, Guid newAssetId, SpawnHandlerDelega/;"	m	class:Mirror.NetworkClient
RegisterPrefab	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void RegisterPrefab(GameObject prefab, SpawnDelegate spawnHandler, UnSpawn/;"	m	class:Mirror.NetworkClient
RegisterPrefab	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void RegisterPrefab(GameObject prefab, SpawnHandlerDelegate spawnHandler, /;"	m	class:Mirror.NetworkClient
RegisterPrefabIdentity	Assets/Mirror/Runtime/NetworkClient.cs	/^        static void RegisterPrefabIdentity(NetworkIdentity prefab)$/;"	m	class:Mirror.NetworkClient	file:
RegisterReadFunc	Assets/Mirror/Editor/Weaver/Readers.cs	/^        static void RegisterReadFunc(TypeReference typeReference, MethodDefinition newReaderFunc/;"	m	class:Mirror.Weaver.Readers	file:
RegisterRpcDelegate	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        public static void RegisterRpcDelegate(Type invokeClass, string rpcName, CmdDelegate fun/;"	m	class:Mirror.RemoteCalls.RemoteCallHelper
RegisterServerMessages	Assets/Mirror/Runtime/NetworkManager.cs	/^        void RegisterServerMessages()$/;"	m	class:Mirror.NetworkManager	file:
RegisterSpawnHandler	Assets/Mirror/Runtime/ClientScene.cs	/^        public static void RegisterSpawnHandler(Guid assetId, SpawnDelegate spawnHandler, UnSpaw/;"	m	class:Mirror.ClientScene
RegisterSpawnHandler	Assets/Mirror/Runtime/ClientScene.cs	/^        public static void RegisterSpawnHandler(Guid assetId, SpawnHandlerDelegate spawnHandler,/;"	m	class:Mirror.ClientScene
RegisterSpawnHandler	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void RegisterSpawnHandler(Guid assetId, SpawnDelegate spawnHandler, UnSpaw/;"	m	class:Mirror.NetworkClient
RegisterSpawnHandler	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void RegisterSpawnHandler(Guid assetId, SpawnHandlerDelegate spawnHandler,/;"	m	class:Mirror.NetworkClient
RegisterStartPosition	Assets/Mirror/Runtime/NetworkManager.cs	/^        public static void RegisterStartPosition(Transform start)$/;"	m	class:Mirror.NetworkManager
RegisterSystemHandlers	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static void RegisterSystemHandlers(bool hostMode)$/;"	m	class:Mirror.NetworkClient	file:
RegisterWriteFunc	Assets/Mirror/Editor/Weaver/Writers.cs	/^        static void RegisterWriteFunc(TypeReference typeReference, MethodDefinition newWriterFun/;"	m	class:Mirror.Weaver.Writers	file:
Release	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public void Release()$/;"	m	class:Mirror.SimpleWeb.ArrayBuffer
Releases	Assets/ParrelSync/ParrelSync/Editor/ExternalLinks.cs	/^        public const string Releases = "https:\/\/github.com\/VeriorPies\/ParrelSync\/releases";$/;"	f	class:ParrelSync.ExternalLinks
Reliable	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpChannel.cs	/^        Reliable = 0x01,$/;"	e	enum:kcp2k.KcpChannel	file:
Reliable	Assets/Mirror/Runtime/Utils.cs	/^        public const int Reliable = 0;      \/\/ ordered$/;"	f	class:Mirror.Channels
ReliableMaxMessageSize	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public const int ReliableMaxMessageSize = (Kcp.MTU_DEF - Kcp.OVERHEAD - CHANNEL_HEADER_S/;"	f	class:kcp2k.KcpConnection
RemoteCallHelper	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^    public static class RemoteCallHelper$/;"	c	namespace:Mirror.RemoteCalls
RemoteCallType	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^    public enum RemoteCallType$/;"	g	namespace:Mirror.Weaver
RemoteVersionURL	Assets/ParrelSync/ParrelSync/Editor/ExternalLinks.cs	/^        public const string RemoteVersionURL = "https:\/\/raw.githubusercontent.com\/VeriorPies\//;"	f	class:ParrelSync.ExternalLinks
Remove	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public bool Remove(KeyValuePair<TKey, TValue> item)$/;"	m	class:Mirror.SyncIDictionary
Remove	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public bool Remove(TKey key)$/;"	m	class:Mirror.SyncIDictionary
Remove	Assets/Mirror/Runtime/SyncList.cs	/^        public bool Remove(T item)$/;"	m	class:Mirror.SyncList
Remove	Assets/Mirror/Runtime/SyncSet.cs	/^        public bool Remove(T item)$/;"	m	class:Mirror.SyncSet
Remove Server	Assets/Mirror/Cloud/README.md	/^#### Remove Server$/;"	t
RemoveAll	Assets/Mirror/Runtime/SyncList.cs	/^        public int RemoveAll(Predicate<T> match)$/;"	m	class:Mirror.SyncList
RemoveAt	Assets/Mirror/Runtime/SyncList.cs	/^        public void RemoveAt(int index)$/;"	m	class:Mirror.SyncList
RemoveButton	Assets/Mirror/Editor/NetworkManagerEditor.cs	/^        internal void RemoveButton(ReorderableList list)$/;"	m	class:Mirror.NetworkManagerEditor	file:
RemoveClientAuthority	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public void RemoveClientAuthority()$/;"	m	class:Mirror.NetworkIdentity
RemoveConnection	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static bool RemoveConnection(int connectionId)$/;"	m	class:Mirror.NetworkServer
RemoveDelegate	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        internal static void RemoveDelegate(int hash)$/;"	m	class:Mirror.RemoteCalls.RemoteCallHelper	file:
RemoveFromObserving	Assets/Mirror/Runtime/NetworkConnection.cs	/^        internal void RemoveFromObserving(NetworkIdentity netIdentity, bool isDestroyed)$/;"	m	class:Mirror.NetworkConnection	file:
RemoveLocalConnection	Assets/Mirror/Runtime/NetworkServer.cs	/^        internal static void RemoveLocalConnection()$/;"	m	class:Mirror.NetworkServer	file:
RemoveObserverInternal	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void RemoveObserverInternal(NetworkConnection conn)$/;"	m	class:Mirror.NetworkIdentity	file:
RemoveObservers	Assets/Mirror/Runtime/NetworkConnection.cs	/^        internal void RemoveObservers()$/;"	m	class:Mirror.NetworkConnection	file:
RemovePlayerForConnection	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void RemovePlayerForConnection(NetworkConnection conn, bool destroyServerO/;"	m	class:Mirror.NetworkServer
RemoveServer	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^        void RemoveServer();$/;"	m	interface:Mirror.Cloud.ListServerService.IListServerServerApi
RemoveServer	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        public void RemoveServer()$/;"	m	class:Mirror.Cloud.ListServerService.ListServerServerApi
ReplaceHandler	Assets/Mirror/Runtime/NetworkClient.cs	/^            ReplaceHandler((NetworkConnection _, T value) => { handler(value); }, requireAuthent/;"	m	struct:Mirror.NetworkClient.NetworkMessage
ReplaceHandler	Assets/Mirror/Runtime/NetworkServer.cs	/^            ReplaceHandler<T>((_, value) => { handler(value); }, requireAuthentication);$/;"	m	struct:Mirror.NetworkServer.NetworkMessage
ReplacePlayerForConnection	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static bool ReplacePlayerForConnection(NetworkConnection conn, GameObject player,/;"	m	class:Mirror.NetworkServer
RequestCancelMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public void RequestCancelMatch()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController
RequestCreateMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public void RequestCreateMatch()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController
RequestCreator	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        public RequestCreator(string baseAddress, string apiKey, ICoroutineRunner coroutineRunne/;"	m	class:Mirror.Cloud.RequestCreator
RequestCreator	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^    public class RequestCreator : IRequestCreator$/;"	c	namespace:Mirror.Cloud
RequestExitGame	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public void RequestExitGame()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
RequestFail	Assets/Mirror/Cloud/Core/IRequestCreator.cs	/^    public delegate void RequestFail(string responseBody);$/;"	m	namespace:Mirror.Cloud
RequestJoinMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public void RequestJoinMatch()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController
RequestLeaveMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public void RequestLeaveMatch()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController
RequestPlayAgain	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public void RequestPlayAgain()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
RequestReadyChange	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public void RequestReadyChange()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController
RequestStartMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public void RequestStartMatch()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController
RequestSuccess	Assets/Mirror/Cloud/Core/IRequestCreator.cs	/^    public delegate void RequestSuccess(string responseBody);$/;"	m	namespace:Mirror.Cloud
Reset	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void Reset()$/;"	m	class:Mirror.NetworkIdentity	file:
Reset	Assets/Mirror/Runtime/NetworkTime.cs	/^        public static void Reset()$/;"	m	class:Mirror.NetworkTime
Reset	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public void Reset()$/;"	m	class:Mirror.NetworkWriter
Reset	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public void Reset()$/;"	m	class:Mirror.SyncIDictionary
Reset	Assets/Mirror/Runtime/SyncList.cs	/^            public void Reset() => index = -1;$/;"	m	struct:Mirror.SyncList.Enumerator
Reset	Assets/Mirror/Runtime/SyncList.cs	/^        public void Reset()$/;"	m	class:Mirror.SyncList
Reset	Assets/Mirror/Runtime/SyncObject.cs	/^        void Reset();$/;"	m	interface:Mirror.SyncObject
Reset	Assets/Mirror/Runtime/SyncSet.cs	/^        public void Reset()$/;"	m	class:Mirror.SyncSet
Reset	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        internal void Reset()$/;"	m	class:kcp2k.Segment	file:
ResetCanvas	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        void ResetCanvas()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
ResetJoystick	Assets/Project/Scripts/Joystick/Joystick.cs	/^    private void ResetJoystick() {$/;"	m	class:Joystick	file:
ResetNextNetworkId	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public static void ResetNextNetworkId() => nextNetworkId = 1;$/;"	m	class:Mirror.NetworkIdentity
ResetPlayerNumbers	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        internal static void ResetPlayerNumbers()$/;"	m	class:Mirror.Examples.Basic.Player	file:
ResetSyncObjects	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        internal void ResetSyncObjects()$/;"	m	class:Mirror.NetworkBehaviour	file:
ResetSyncObjects	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        void ResetSyncObjects()$/;"	m	class:Mirror.NetworkIdentity	file:
ResetTrigger	Assets/Mirror/Components/NetworkAnimator.cs	/^        public void ResetTrigger(int hash)$/;"	m	class:Mirror.NetworkAnimator
ResetTrigger	Assets/Mirror/Components/NetworkAnimator.cs	/^        public void ResetTrigger(string triggerName)$/;"	m	class:Mirror.NetworkAnimator
ResolveDefaultPublicCtor	Assets/Mirror/Editor/Weaver/Resolvers.cs	/^        public static MethodDefinition ResolveDefaultPublicCtor(TypeReference variable)$/;"	m	class:Mirror.Weaver.Resolvers
ResolveMethod	Assets/Mirror/Editor/Weaver/Resolvers.cs	/^        public static MethodReference ResolveMethod(TypeReference t, AssemblyDefinition scriptDe/;"	m	class:Mirror.Weaver.Resolvers
ResolveMethod	Assets/Mirror/Editor/Weaver/Resolvers.cs	/^        public static MethodReference ResolveMethod(TypeReference tr, AssemblyDefinition scriptD/;"	m	class:Mirror.Weaver.Resolvers
ResolveProperty	Assets/Mirror/Editor/Weaver/Resolvers.cs	/^        public static MethodReference ResolveProperty(TypeReference tr, AssemblyDefinition scrip/;"	m	class:Mirror.Weaver.Resolvers
Resolvers	Assets/Mirror/Editor/Weaver/Resolvers.cs	/^    public static class Resolvers$/;"	c	namespace:Mirror.Weaver
Respawn	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void Respawn(NetworkIdentity identity)$/;"	m	class:Mirror.NetworkServer	file:
ResponseLength	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        const int ResponseLength = 129;$/;"	f	class:Mirror.SimpleWeb.ServerHandshake	file:
RestartGame	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public void RestartGame()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
Return	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        public static void Return(Segment seg)$/;"	m	class:kcp2k.Segment
Return	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public void Return(ArrayBuffer buffer)$/;"	m	class:Mirror.SimpleWeb.BufferBucket
Return	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        void Return(ArrayBuffer buffer);$/;"	m	interface:Mirror.SimpleWeb.IBufferOwner
Reward	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/Reward.cs	/^    public class Reward : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.MultipleAdditiveScenes
Reward	Assets/Mirror/Examples/Room/Scripts/Reward.cs	/^    public class Reward : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.NetworkRoom
RightCol	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        RightCol = C1 + C2 + C3,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
Room Example	Assets/Mirror/Examples/Room/README.md	/^# Room Example$/;"	c
RoomGUI	Assets/Mirror/Examples/MultipleMatches/Scripts/RoomGUI.cs	/^    public class RoomGUI : MonoBehaviour$/;"	c	namespace:Mirror.Examples.MultipleMatch
RoomScene	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public string RoomScene;$/;"	f	class:Mirror.NetworkRoomManager
Rotate	Assets/Project/Scripts/Player/PlayerMovement.cs	/^    private void Rotate() {$/;"	m	class:PlayerMovement	file:
RoundRobin	Assets/Mirror/Runtime/NetworkManager.cs	/^    public enum PlayerSpawnMethod { Random, RoundRobin }$/;"	e	enum:Mirror.PlayerSpawnMethod	file:
RpcExitGame	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public void RpcExitGame()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
RpcMessage	Assets/Mirror/Runtime/Messages.cs	/^    public struct RpcMessage : NetworkMessage$/;"	s	namespace:Mirror
RpcMove	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        void RpcMove(Vector3 position, uint packedRotation, Vector3 scale)$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
RpcOnAnimationClientMessage	Assets/Mirror/Components/NetworkAnimator.cs	/^        void RpcOnAnimationClientMessage(int stateHash, float normalizedTime, int layerId, float/;"	m	class:Mirror.NetworkAnimator	file:
RpcOnAnimationParametersClientMessage	Assets/Mirror/Components/NetworkAnimator.cs	/^        void RpcOnAnimationParametersClientMessage(byte[] parameters)$/;"	m	class:Mirror.NetworkAnimator	file:
RpcOnAnimationResetTriggerClientMessage	Assets/Mirror/Components/NetworkAnimator.cs	/^        void RpcOnAnimationResetTriggerClientMessage(int hash)$/;"	m	class:Mirror.NetworkAnimator	file:
RpcOnAnimationTriggerClientMessage	Assets/Mirror/Components/NetworkAnimator.cs	/^        void RpcOnAnimationTriggerClientMessage(int hash)$/;"	m	class:Mirror.NetworkAnimator	file:
RpcOnFire	Assets/Mirror/Examples/Tanks/Scripts/Tank.cs	/^        void RpcOnFire()$/;"	m	class:Mirror.Examples.Tanks.Tank	file:
RpcPrefix	Assets/Mirror/Editor/Weaver/Processors/MethodProcessor.cs	/^        const string RpcPrefix = "UserCode_";$/;"	f	class:Mirror.Weaver.MethodProcessor	file:
RpcProcessor	Assets/Mirror/Editor/Weaver/Processors/RpcProcessor.cs	/^    public static class RpcProcessor$/;"	c	namespace:Mirror.Weaver
RpcReceive	Assets/Mirror/Examples/Chat/Scripts/Player.cs	/^        public void RpcReceive(string message)$/;"	m	class:Mirror.Examples.Chat.Player
RpcRestartGame	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public void RpcRestartGame()$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
RpcShowWinner	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public void RpcShowWinner(NetworkIdentity winner)$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
RpcTeleport	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        void RpcTeleport(Vector3 newPosition, uint newPackedRotation, bool isClientAuthority)$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
RpcTeleport	Assets/Mirror/Components/NetworkTransformBase.cs	/^        void RpcTeleport(Vector3 newPosition, Quaternion newRotation, bool isClientAuthority)$/;"	m	class:Mirror.NetworkTransformBase	file:
RpcUpdateCell	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public void RpcUpdateCell(CellValue cellValue, NetworkIdentity player)$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
RuntimeInitializeOnLoad	Assets/Mirror/Runtime/NetworkLoop.cs	/^        static void RuntimeInitializeOnLoad()$/;"	m	class:Mirror.NetworkLoop	file:
SIMPLEWEB_LOG_ENABLED	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^        const string SIMPLEWEB_LOG_ENABLED = nameof(SIMPLEWEB_LOG_ENABLED);$/;"	f	class:Mirror.SimpleWeb.Log	file:
SafeReadTillMatch	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReadHelper.cs	/^        public static int? SafeReadTillMatch(Stream stream, byte[] outBuffer, int outOffset, int/;"	m	class:Mirror.SimpleWeb.ReadHelper
ScaleFloatToUShort	Assets/Mirror/Runtime/Compression.cs	/^        public static ushort ScaleFloatToUShort(float value, float minValue, float maxValue, ush/;"	m	class:Mirror.Compression
ScaleUShortToFloat	Assets/Mirror/Runtime/Compression.cs	/^        public static float ScaleUShortToFloat(ushort value, ushort minValue, ushort maxValue, f/;"	m	class:Mirror.Compression
SceneAttribute	Assets/Mirror/Runtime/Attributes.cs	/^    public class SceneAttribute : PropertyAttribute {}$/;"	c	namespace:Mirror
SceneDrawer	Assets/Mirror/Editor/SceneDrawer.cs	/^    public class SceneDrawer : PropertyDrawer$/;"	c	namespace:Mirror
SceneLoadedForPlayer	Assets/Mirror/Components/NetworkRoomManager.cs	/^        void SceneLoadedForPlayer(NetworkConnection conn, GameObject roomPlayer)$/;"	m	class:Mirror.NetworkRoomManager	file:
SceneMessage	Assets/Mirror/Runtime/Messages.cs	/^    public struct SceneMessage : NetworkMessage$/;"	s	namespace:Mirror
SceneOperation	Assets/Mirror/Runtime/Messages.cs	/^    public enum SceneOperation : byte$/;"	g	namespace:Mirror
Scheme	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public const string Scheme = "kcp";$/;"	f	class:kcp2k.KcpTransport
Scheme	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public const string Scheme = "tcp4";$/;"	f	class:Mirror.TelepathyTransport
ScreenManager	Assets/Project/Scripts/UI/ScreenManager.cs	/^public class ScreenManager : MonoBehaviour {$/;"	c
Screens	Assets/Project/Scripts/UI/ScreenManager.cs	/^    public List<GameObject> Screens; \/\/ List of all screens (screens[0] should be what appears/;"	f	class:ScreenManager
ScriptableObjectCreateInstanceMethod	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference ScriptableObjectCreateInstanceMethod;$/;"	f	class:Mirror.Weaver.WeaverTypes
SecureScheme	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public const string SecureScheme = "wss";$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
Segment	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^    internal class Segment$/;"	c	namespace:kcp2k
SegmentDelete	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        static void SegmentDelete(Segment seg)$/;"	m	class:kcp2k.Kcp	file:
SegmentNew	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        static Segment SegmentNew()$/;"	m	class:kcp2k.Kcp	file:
SelectMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public void SelectMatch(Guid matchId)$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController
Send	Assets/Mirror/Runtime/LocalConnections.cs	/^        internal override void Send(ArraySegment<byte> segment, int channelId = Channels.Reliabl/;"	m	class:Mirror.LocalConnectionToClient	file:
Send	Assets/Mirror/Runtime/LocalConnections.cs	/^        internal override void Send(ArraySegment<byte> segment, int channelId = Channels.Reliabl/;"	m	class:Mirror.LocalConnectionToServer	file:
Send	Assets/Mirror/Runtime/NetworkConnection.cs	/^        internal abstract void Send(ArraySegment<byte> segment, int channelId = Channels.Reliabl/;"	m	class:Mirror.NetworkConnection	file:
Send	Assets/Mirror/Runtime/NetworkConnectionToClient.cs	/^        internal override void Send(ArraySegment<byte> segment, int channelId = Channels.Reliabl/;"	m	class:Mirror.NetworkConnectionToClient	file:
Send	Assets/Mirror/Runtime/NetworkConnectionToServer.cs	/^        internal override void Send(ArraySegment<byte> segment, int channelId = Channels.Reliabl/;"	m	class:Mirror.NetworkConnectionToServer	file:
Send	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^        public void Send(ArraySegment<byte> segment, KcpChannel channel)$/;"	m	class:kcp2k.KcpClient
Send	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public void Send(int connectionId, ArraySegment<byte> segment, KcpChannel channel)$/;"	m	class:kcp2k.KcpServer
Send	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public int Send(byte[] buffer, int offset, int len)$/;"	m	class:kcp2k.Kcp
Send	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        public abstract void Send(ArraySegment<byte> segment);$/;"	m	class:Mirror.SimpleWeb.SimpleWebClient
Send	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/WebSocketClientStandAlone.cs	/^        public override void Send(ArraySegment<byte> segment)$/;"	m	class:Mirror.SimpleWeb.WebSocketClientStandAlone
Send	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/SimpleWebJSLib.cs	/^        internal static extern bool Send(int index, byte[] array, int offset, int length);$/;"	m	class:Mirror.SimpleWeb.SimpleWebJSLib	file:
Send	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^        public override void Send(ArraySegment<byte> segment)$/;"	m	class:Mirror.SimpleWeb.WebSocketClientWebGl
Send	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        public void Send(int id, ArrayBuffer buffer)$/;"	m	class:Mirror.SimpleWeb.WebSocketServer
Send	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public bool Send(ArraySegment<byte> message)$/;"	m	class:Telepathy.Client
Send	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public bool Send(int connectionId, ArraySegment<byte> message)$/;"	m	class:Telepathy.Server
SendAll	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        public void SendAll(List<int> connectionIds, ArraySegment<byte> source)$/;"	m	class:Mirror.SimpleWeb.SimpleWebServer
SendAnimationMessage	Assets/Mirror/Components/NetworkAnimator.cs	/^        void SendAnimationMessage(int stateHash, float normalizedTime, int layerId, float weight/;"	m	class:Mirror.NetworkAnimator	file:
SendAnimationParametersMessage	Assets/Mirror/Components/NetworkAnimator.cs	/^        void SendAnimationParametersMessage(byte[] parameters)$/;"	m	class:Mirror.NetworkAnimator	file:
SendBatch	Assets/Mirror/Runtime/NetworkConnectionToClient.cs	/^        internal void SendBatch(int channelId, Batch batch)$/;"	m	class:Mirror.NetworkConnectionToClient	file:
SendBufferCount	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public int SendBufferCount => kcp.snd_buf.Count;$/;"	f	class:kcp2k.KcpConnection
SendCommandInternal	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected void SendCommandInternal(Type invokeClass, string cmdName, NetworkWriter write/;"	m	class:Mirror.NetworkBehaviour
SendData	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public void SendData(ArraySegment<byte> data, KcpChannel channel)$/;"	m	class:kcp2k.KcpConnection
SendDisconnect	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        void SendDisconnect() => SendReliable(KcpHeader.Disconnect, default);$/;"	m	class:kcp2k.KcpConnection	file:
SendHandshake	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public void SendHandshake()$/;"	m	class:kcp2k.KcpConnection
SendLoop	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^    internal static class SendLoop$/;"	c	namespace:Mirror.SimpleWeb
SendLoop	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/ThreadFunctions.cs	/^        public static void SendLoop(int connectionId, TcpClient client, MagnificentSendPipe send/;"	m	class:Telepathy.ThreadFunctions
SendLoopConfig	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^    public static class SendLoopConfig$/;"	c	namespace:Mirror.SimpleWeb
SendMatchList	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal void SendMatchList(NetworkConnection conn = null)$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
SendMessage	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^        static int SendMessage(byte[] buffer, int startOffset, ArrayBuffer msg, bool setMask, Ma/;"	m	class:Mirror.SimpleWeb.SendLoop	file:
SendMessagesAllowed	Assets/Mirror/Components/NetworkAnimator.cs	/^        bool SendMessagesAllowed$/;"	p	class:Mirror.NetworkAnimator
SendMessagesBlocking	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/ThreadFunctions.cs	/^        public static bool SendMessagesBlocking(NetworkStream stream, byte[] payload, int packet/;"	m	class:Telepathy.ThreadFunctions
SendOne	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        public void SendOne(int connectionId, ArraySegment<byte> source)$/;"	m	class:Mirror.SimpleWeb.SimpleWebServer
SendPing	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        void SendPing() => SendReliable(KcpHeader.Ping, default);$/;"	m	class:kcp2k.KcpConnection	file:
SendQueueCount	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public int SendQueueCount => kcp.snd_queue.Count;$/;"	f	class:kcp2k.KcpConnection
SendQueueLimit	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public int SendQueueLimit = 10000;$/;"	f	class:Telepathy.Client
SendQueueLimit	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public int SendQueueLimit = 10000;$/;"	f	class:Telepathy.Server
SendRPCInternal	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected void SendRPCInternal(Type invokeClass, string rpcName, NetworkWriter writer, i/;"	m	class:Mirror.NetworkBehaviour
SendReliable	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        void SendReliable(KcpHeader header, ArraySegment<byte> content)$/;"	m	class:kcp2k.KcpConnection	file:
SendRequest	Assets/Mirror/Cloud/Core/IRequestCreator.cs	/^        void SendRequest(UnityWebRequest request, RequestSuccess onSuccess = null, RequestFail o/;"	m	interface:Mirror.Cloud.IRequestCreator
SendRequest	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        public void SendRequest(UnityWebRequest request, RequestSuccess onSuccess = null, Reques/;"	m	class:Mirror.Cloud.RequestCreator
SendRequestEnumerator	Assets/Mirror/Cloud/Core/IRequestCreator.cs	/^        IEnumerator SendRequestEnumerator(UnityWebRequest request, RequestSuccess onSuccess = nu/;"	m	interface:Mirror.Cloud.IRequestCreator
SendRequestEnumerator	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        public IEnumerator SendRequestEnumerator(UnityWebRequest request, RequestSuccess onSucce/;"	m	class:Mirror.Cloud.RequestCreator
SendRigidBodySettings	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void SendRigidBodySettings()$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
SendRigidBodySettings	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void SendRigidBodySettings()$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
SendSpawnMessage	Assets/Mirror/Runtime/NetworkServer.cs	/^        internal static void SendSpawnMessage(NetworkIdentity identity, NetworkConnection conn)$/;"	m	class:Mirror.NetworkServer	file:
SendTargetRPCInternal	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected void SendTargetRPCInternal(NetworkConnection conn, Type invokeClass, string rp/;"	m	class:Mirror.NetworkBehaviour
SendTimeout	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Common.cs	/^        public int SendTimeout = 5000;$/;"	f	class:Telepathy.Common
SendTimeout	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public int SendTimeout = 5000;$/;"	f	class:Mirror.TelepathyTransport
SendToAll	Assets/Mirror/Runtime/NetworkServer.cs	/^            SendToAll(message, channelId, true);$/;"	m	struct:Mirror.NetworkServer.NetworkMessage
SendToReady	Assets/Mirror/Runtime/NetworkServer.cs	/^            SendToReady(identity, message, true, channelId);$/;"	m	struct:Mirror.NetworkServer.NetworkMessage
SendToServer	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^        void SendToServer()$/;"	m	class:Mirror.Experimental.NetworkLerpRigidbody	file:
SendToServer	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void SendToServer()$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
SendToServer	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void SendToServer()$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
SendUnreliable	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        void SendUnreliable(ArraySegment<byte> message)$/;"	m	class:kcp2k.KcpConnection	file:
SendVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void SendVelocity()$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
SendVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void SendVelocity()$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
SendWindowSize	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public uint SendWindowSize = 4096; \/\/Kcp.WND_SND; 32 by default. Mirror sends a lot, s/;"	f	class:kcp2k.KcpTransport
SendWindowSize	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public uint SendWindowSize;$/;"	f	class:kcp2k.KcpServer
Serialization	Assets/Mirror/Runtime/NetworkServer.cs	/^        struct Serialization$/;"	s	class:Mirror.NetworkServer
SerializeIntoWriter	Assets/Mirror/Components/NetworkTransformBase.cs	/^        public static void SerializeIntoWriter(NetworkWriter writer, Vector3 position, Quaternio/;"	m	class:Mirror.NetworkTransformBase
SerializeObjectsAll	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public bool SerializeObjectsAll(NetworkWriter writer)$/;"	m	class:Mirror.NetworkBehaviour
SerializeObjectsDelta	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public bool SerializeObjectsDelta(NetworkWriter writer)$/;"	m	class:Mirror.NetworkBehaviour
SerializeSyncVars	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected virtual bool SerializeSyncVars(NetworkWriter writer, bool initialState)$/;"	m	class:Mirror.NetworkBehaviour
Server	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public Server(int MaxMessageSize) : base(MaxMessageSize) {}$/;"	m	class:Telepathy.Server
Server	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^    public class Server : Common$/;"	c	namespace:Telepathy
Server Api Example	Assets/Mirror/Cloud/README.md	/^### Server Api Example$/;"	S
ServerAccept	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^        protected void ServerAccept(NetworkConnection conn)$/;"	m	class:Mirror.NetworkAuthenticator
ServerActive	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override bool ServerActive()$/;"	m	class:Mirror.FallbackTransport
ServerActive	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override bool ServerActive() => server.IsActive();$/;"	m	class:kcp2k.KcpTransport
ServerActive	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override bool ServerActive() => wrap.ServerActive();$/;"	m	class:Mirror.LatencySimulation
ServerActive	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^        public override bool ServerActive() => inner.ServerActive();$/;"	m	class:Mirror.MiddlewareTransport
ServerActive	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override bool ServerActive()$/;"	m	class:Mirror.MultiplexTransport
ServerActive	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override bool ServerActive()$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
ServerActive	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override bool ServerActive() => server.Active;$/;"	m	class:Mirror.TelepathyTransport
ServerActive	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public abstract bool ServerActive();$/;"	m	class:Mirror.Transport
ServerApi	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^        public readonly IListServerServerApi ServerApi;$/;"	f	class:Mirror.Cloud.ListServerService.ListServer
ServerAttribute	Assets/Mirror/Runtime/Attributes.cs	/^    public class ServerAttribute : Attribute {}$/;"	c	namespace:Mirror
ServerCallbackAttribute	Assets/Mirror/Runtime/Attributes.cs	/^    public class ServerCallbackAttribute : Attribute {}$/;"	c	namespace:Mirror
ServerChangeScene	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public override void ServerChangeScene(string newSceneName)$/;"	m	class:Mirror.NetworkRoomManager
ServerChangeScene	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void ServerChangeScene(string newSceneName)$/;"	m	class:Mirror.NetworkManager
ServerClientAttributeProcessor	Assets/Mirror/Editor/Weaver/Processors/ServerClientAttributeProcessor.cs	/^    static class ServerClientAttributeProcessor$/;"	c	namespace:Mirror.Weaver
ServerCollectionJson	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^    public struct ServerCollectionJson : ICanBeJson$/;"	s	namespace:Mirror.Cloud.ListServerService
ServerDisconnect	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override bool ServerDisconnect(int connectionId)$/;"	m	class:Mirror.FallbackTransport
ServerDisconnect	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override bool ServerDisconnect(int connectionId)$/;"	m	class:kcp2k.KcpTransport
ServerDisconnect	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override bool ServerDisconnect(int connectionId) => wrap.ServerDisconnect(connect/;"	m	class:Mirror.LatencySimulation
ServerDisconnect	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^        public override bool ServerDisconnect(int connectionId) => inner.ServerDisconnect(connec/;"	m	class:Mirror.MiddlewareTransport
ServerDisconnect	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override bool ServerDisconnect(int connectionId)$/;"	m	class:Mirror.MultiplexTransport
ServerDisconnect	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override bool ServerDisconnect(int connectionId)$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
ServerDisconnect	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override bool ServerDisconnect(int connectionId) => server.Disconnect(connectionI/;"	m	class:Mirror.TelepathyTransport
ServerDisconnect	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public abstract bool ServerDisconnect(int connectionId);$/;"	m	class:Mirror.Transport
ServerEarlyUpdate	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override void ServerEarlyUpdate()$/;"	m	class:kcp2k.KcpTransport
ServerEarlyUpdate	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override void ServerEarlyUpdate() => wrap.ServerEarlyUpdate();$/;"	m	class:Mirror.LatencySimulation
ServerEarlyUpdate	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override void ServerEarlyUpdate()$/;"	m	class:Mirror.MultiplexTransport
ServerEarlyUpdate	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override void ServerEarlyUpdate()$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
ServerEarlyUpdate	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override void ServerEarlyUpdate()$/;"	m	class:Mirror.TelepathyTransport
ServerEarlyUpdate	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public virtual void ServerEarlyUpdate() {}$/;"	m	class:Mirror.Transport
ServerEndMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public IEnumerator ServerEndMatch(NetworkConnection conn, bool disconnected)$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
ServerFoundUnityEvent	Assets/Mirror/Components/Discovery/NetworkDiscovery.cs	/^    public class ServerFoundUnityEvent : UnityEvent<ServerResponse> {};$/;"	c	namespace:Mirror.Discovery
ServerGetClientAddress	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override string ServerGetClientAddress(int connectionId)$/;"	m	class:Mirror.FallbackTransport
ServerGetClientAddress	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override string ServerGetClientAddress(int connectionId) => server.GetClientAddre/;"	m	class:kcp2k.KcpTransport
ServerGetClientAddress	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override string ServerGetClientAddress(int connectionId) => wrap.ServerGetClientA/;"	m	class:Mirror.LatencySimulation
ServerGetClientAddress	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^        public override string ServerGetClientAddress(int connectionId) => inner.ServerGetClient/;"	m	class:Mirror.MiddlewareTransport
ServerGetClientAddress	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override string ServerGetClientAddress(int connectionId)$/;"	m	class:Mirror.MultiplexTransport
ServerGetClientAddress	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override string ServerGetClientAddress(int connectionId)$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
ServerGetClientAddress	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override string ServerGetClientAddress(int connectionId)$/;"	m	class:Mirror.TelepathyTransport
ServerGetClientAddress	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public abstract string ServerGetClientAddress(int connectionId);$/;"	m	class:Mirror.Transport
ServerHandshake	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        public ServerHandshake(BufferPool bufferPool, int handshakeMaxSize)$/;"	m	class:Mirror.SimpleWeb.ServerHandshake
ServerHandshake	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^    internal class ServerHandshake$/;"	c	namespace:Mirror.SimpleWeb
ServerId	Assets/Mirror/Components/Discovery/NetworkDiscovery.cs	/^        public long ServerId { get; private set; }$/;"	p	class:Mirror.Discovery.NetworkDiscovery
ServerInList	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^        bool ServerInList { get; }$/;"	p	interface:Mirror.Cloud.ListServerService.IListServerServerApi
ServerInList	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        public bool ServerInList => added;$/;"	f	class:Mirror.Cloud.ListServerService.ListServerServerApi
ServerJson	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^    public struct ServerJson : ICanBeJson$/;"	s	namespace:Mirror.Cloud.ListServerService
ServerLateUpdate	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override void ServerLateUpdate() => server.TickOutgoing();$/;"	m	class:kcp2k.KcpTransport
ServerLateUpdate	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override void ServerLateUpdate()$/;"	m	class:Mirror.LatencySimulation
ServerLateUpdate	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override void ServerLateUpdate()$/;"	m	class:Mirror.MultiplexTransport
ServerLateUpdate	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public virtual void ServerLateUpdate() {}$/;"	m	class:Mirror.Transport
ServerListEvent	Assets/Mirror/Cloud/Core/Events.cs	/^    public class ServerListEvent : UnityEvent<ServerCollectionJson> {}$/;"	c	namespace:Mirror.Cloud
ServerListManager	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListManager.cs	/^    public class ServerListManager : MonoBehaviour$/;"	c	namespace:Mirror.Cloud.Example
ServerListUI	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUI.cs	/^    public class ServerListUI : MonoBehaviour$/;"	c	namespace:Mirror.Cloud.Example
ServerListUIItem	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUIItem.cs	/^    public class ServerListUIItem : MonoBehaviour$/;"	c	namespace:Mirror.Cloud.Example
ServerListenAsync	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        public async Task ServerListenAsync()$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase
ServerLoadSubScenes	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^        IEnumerator ServerLoadSubScenes()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.MultiSceneNetManager	file:
ServerMatchMessage	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^    public struct ServerMatchMessage : NetworkMessage$/;"	s	namespace:Mirror.Examples.MultipleMatch
ServerMatchOperation	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^    public enum ServerMatchOperation : byte$/;"	g	namespace:Mirror.Examples.MultipleMatch
ServerOnly	Assets/Mirror/Runtime/NetworkManager.cs	/^    public enum NetworkManagerMode { Offline, ServerOnly, ClientOnly, Host }$/;"	e	enum:Mirror.NetworkManagerMode	file:
ServerReject	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^        protected void ServerReject(NetworkConnection conn)$/;"	m	class:Mirror.NetworkAuthenticator
ServerRequest	Assets/Mirror/Components/Discovery/ServerRequest.cs	/^    public struct ServerRequest : NetworkMessage {}$/;"	s	namespace:Mirror.Discovery
ServerResponse	Assets/Mirror/Components/Discovery/ServerResponse.cs	/^    public struct ServerResponse : NetworkMessage$/;"	s	namespace:Mirror.Discovery
ServerSend	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override void ServerSend(int connectionId, int channelId, ArraySegment<byte> segm/;"	m	class:Mirror.FallbackTransport
ServerSend	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override void ServerSend(int connectionId, int channelId, ArraySegment<byte> segm/;"	m	class:kcp2k.KcpTransport
ServerSend	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override void ServerSend(int connectionId, int channelId, ArraySegment<byte> segm/;"	m	class:Mirror.LatencySimulation
ServerSend	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^        public override void ServerSend(int connectionId, int channelId, ArraySegment<byte> segm/;"	m	class:Mirror.MiddlewareTransport
ServerSend	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override void ServerSend(int connectionId, int channelId, ArraySegment<byte> segm/;"	m	class:Mirror.MultiplexTransport
ServerSend	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override void ServerSend(int connectionId, int channelId, ArraySegment<byte> segm/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
ServerSend	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override void ServerSend(int connectionId, int channelId, ArraySegment<byte> segm/;"	m	class:Mirror.TelepathyTransport
ServerSend	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public abstract void ServerSend(int connectionId, int channelId, ArraySegment<byte> segm/;"	m	class:Mirror.Transport
ServerSslHelper	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerSslHelper.cs	/^        public ServerSslHelper(SslConfig sslConfig)$/;"	m	class:Mirror.SimpleWeb.ServerSslHelper
ServerSslHelper	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerSslHelper.cs	/^    internal class ServerSslHelper$/;"	c	namespace:Mirror.SimpleWeb
ServerStart	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override void ServerStart()$/;"	m	class:Mirror.FallbackTransport
ServerStart	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override void ServerStart() => server.Start(Port);$/;"	m	class:kcp2k.KcpTransport
ServerStart	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override void ServerStart()$/;"	m	class:Mirror.LatencySimulation
ServerStart	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^        public override void ServerStart()$/;"	m	class:Mirror.MiddlewareTransport
ServerStart	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override void ServerStart()$/;"	m	class:Mirror.MultiplexTransport
ServerStart	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override void ServerStart()$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
ServerStart	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override void ServerStart() => server.Start(port);$/;"	m	class:Mirror.TelepathyTransport
ServerStart	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public abstract void ServerStart();$/;"	m	class:Mirror.Transport
ServerStartedHandler	Assets/Mirror/Examples/Cloud/GUI/Scripts/ApiUpdater.cs	/^        void ServerStartedHandler()$/;"	m	class:Mirror.Cloud.Example.ApiUpdater	file:
ServerStop	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override void ServerStop()$/;"	m	class:Mirror.FallbackTransport
ServerStop	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override void ServerStop() => server.Stop();$/;"	m	class:kcp2k.KcpTransport
ServerStop	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override void ServerStop()$/;"	m	class:Mirror.LatencySimulation
ServerStop	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^        public override void ServerStop() => inner.ServerStop();$/;"	m	class:Mirror.MiddlewareTransport
ServerStop	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override void ServerStop()$/;"	m	class:Mirror.MultiplexTransport
ServerStop	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override void ServerStop()$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
ServerStop	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override void ServerStop() => server.Stop();$/;"	m	class:Mirror.TelepathyTransport
ServerStop	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public abstract void ServerStop();$/;"	m	class:Mirror.Transport
ServerStoppedHandler	Assets/Mirror/Examples/Cloud/GUI/Scripts/ApiUpdater.cs	/^        void ServerStoppedHandler()$/;"	m	class:Mirror.Cloud.Example.ApiUpdater	file:
ServerTeleport	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public void ServerTeleport(Vector3 localPosition)$/;"	m	class:Mirror.Experimental.NetworkTransformBase
ServerTeleport	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public void ServerTeleport(Vector3 localPosition, Quaternion localRotation)$/;"	m	class:Mirror.Experimental.NetworkTransformBase
ServerTeleport	Assets/Mirror/Components/NetworkTransformBase.cs	/^        public void ServerTeleport(Vector3 position)$/;"	m	class:Mirror.NetworkTransformBase
ServerTeleport	Assets/Mirror/Components/NetworkTransformBase.cs	/^        public void ServerTeleport(Vector3 position, Quaternion rotation)$/;"	m	class:Mirror.NetworkTransformBase
ServerUnloadSubScenes	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^        IEnumerator ServerUnloadSubScenes()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.MultiSceneNetManager	file:
ServerUpdate	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        void ServerUpdate()$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
ServerUri	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override Uri ServerUri() => available.ServerUri();$/;"	m	class:Mirror.FallbackTransport
ServerUri	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override Uri ServerUri()$/;"	m	class:kcp2k.KcpTransport
ServerUri	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override Uri ServerUri() => wrap.ServerUri();$/;"	m	class:Mirror.LatencySimulation
ServerUri	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^        public override Uri ServerUri() => inner.ServerUri();$/;"	m	class:Mirror.MiddlewareTransport
ServerUri	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override Uri ServerUri()$/;"	m	class:Mirror.MultiplexTransport
ServerUri	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override Uri ServerUri()$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
ServerUri	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override Uri ServerUri()$/;"	m	class:Mirror.TelepathyTransport
ServerUri	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public abstract Uri ServerUri();$/;"	m	class:Mirror.Transport
SessionStateKey	Assets/ParrelSync/ParrelSync/Editor/ValidateCopiedFoldersIntegrity.cs	/^        const string SessionStateKey = "ValidateCopiedFoldersIntegrity_Init";$/;"	f	class:ParrelSync.NonCore.ValidateCopiedFoldersIntegrity	file:
SetAllClientsNotReady	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void SetAllClientsNotReady()$/;"	m	class:Mirror.NetworkServer
SetClientNotReady	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void SetClientNotReady(NetworkConnection conn)$/;"	m	class:Mirror.NetworkServer
SetClientOwner	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal void SetClientOwner(NetworkConnection conn)$/;"	m	class:Mirror.NetworkIdentity	file:
SetClientReady	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void SetClientReady(NetworkConnection conn)$/;"	m	class:Mirror.NetworkServer
SetColor	Assets/Mirror/Examples/AdditiveScenes/Scripts/RandomColor.cs	/^        void SetColor(Color32 _, Color32 newColor)$/;"	m	class:Mirror.Examples.Additive.RandomColor	file:
SetColor	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/RandomColor.cs	/^        void SetColor(Color32 _, Color32 newColor)$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.RandomColor	file:
SetColor	Assets/Mirror/Examples/Room/Scripts/RandomColor.cs	/^        void SetColor(Color32 _, Color32 newColor)$/;"	m	class:Mirror.Examples.NetworkRoom.RandomColor	file:
SetCustomData	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public void SetCustomData(Dictionary<string, string> data)$/;"	m	struct:Mirror.Cloud.ListServerService.PartialServerJson
SetCustomData	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public void SetCustomData(Dictionary<string, string> data)$/;"	m	struct:Mirror.Cloud.ListServerService.ServerJson
SetDirtyBit	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public void SetDirtyBit(ulong dirtyBit)$/;"	m	class:Mirror.NetworkBehaviour
SetGoal	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        void SetGoal(Vector3 position, Quaternion rotation, Vector3 scale)$/;"	m	class:Mirror.Experimental.NetworkTransformBase	file:
SetHandlers	Assets/Mirror/Runtime/NetworkConnection.cs	/^        internal void SetHandlers(Dictionary<int, NetworkMessageDelegate> handlers)$/;"	m	class:Mirror.NetworkConnection	file:
SetHostname	Assets/Mirror/Examples/Chat/Scripts/ChatNetworkManager.cs	/^        public void SetHostname(string hostname)$/;"	m	class:Mirror.Examples.Chat.ChatNetworkManager
SetInterval	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public void SetInterval(uint interval)$/;"	m	class:kcp2k.Kcp
SetLength	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public void SetLength(int newLength)$/;"	m	class:Mirror.NetworkWriter
SetLocalConnection	Assets/Mirror/Runtime/NetworkServer.cs	/^        internal static void SetLocalConnection(LocalConnectionToClient conn)$/;"	m	class:Mirror.NetworkServer	file:
SetMatchInfo	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchGUI.cs	/^        public void SetMatchInfo(MatchInfo infos)$/;"	m	class:Mirror.Examples.MultipleMatch.MatchGUI
SetMtu	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public void SetMtu(uint mtu)$/;"	m	class:kcp2k.Kcp
SetNoDelay	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public void SetNoDelay(uint nodelay, uint interval = INTERVAL, int resend = 0, bool nocw/;"	m	class:kcp2k.Kcp
SetNumSyncVars	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public void SetNumSyncVars(string className, int num)$/;"	m	class:Mirror.Weaver.WeaverLists
SetOwner	Assets/Mirror/Examples/MultipleMatches/Scripts/RoomGUI.cs	/^        public void SetOwner(bool owner)$/;"	m	class:Mirror.Examples.MultipleMatch.RoomGUI
SetPlayer	Assets/Mirror/Examples/Basic/Scripts/PlayerUI.cs	/^        public void SetPlayer(Player player, bool isLocalPlayer)$/;"	m	class:Mirror.Examples.Basic.PlayerUI
SetPlayer	Assets/Mirror/Examples/MultipleMatches/Scripts/CellGUI.cs	/^        public void SetPlayer(NetworkIdentity playerIdentity)$/;"	m	class:Mirror.Examples.MultipleMatch.CellGUI
SetPlayerInfo	Assets/Mirror/Examples/MultipleMatches/Scripts/PlayerGUI.cs	/^        public void SetPlayerInfo(PlayerInfo info)$/;"	m	class:Mirror.Examples.MultipleMatch.PlayerGUI
SetReleasesRequired	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public void SetReleasesRequired(int required)$/;"	m	class:Mirror.SimpleWeb.ArrayBuffer
SetSceneIdSceneHashPartInternal	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public void SetSceneIdSceneHashPartInternal()$/;"	m	class:Mirror.NetworkIdentity
SetStartButtonActive	Assets/Project/Scripts/UI/LobbyManager.cs	/^    public void SetStartButtonActive(bool isActive) {$/;"	m	class:LobbyManager
SetSyncVar	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected void SetSyncVar<T>(T value, ref T fieldValue, ulong dirtyBit)$/;"	m	class:Mirror.NetworkBehaviour
SetSyncVarGameObject	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected void SetSyncVarGameObject(GameObject newGameObject, ref GameObject gameObjectF/;"	m	class:Mirror.NetworkBehaviour
SetSyncVarNetworkIdentity	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected void SetSyncVarNetworkIdentity(NetworkIdentity newIdentity, ref NetworkIdentit/;"	m	class:Mirror.NetworkBehaviour
SetTrigger	Assets/Mirror/Components/NetworkAnimator.cs	/^        public void SetTrigger(int hash)$/;"	m	class:Mirror.NetworkAnimator
SetTrigger	Assets/Mirror/Components/NetworkAnimator.cs	/^        public void SetTrigger(string triggerName)$/;"	m	class:Mirror.NetworkAnimator
SetWindowSize	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public void SetWindowSize(uint sendWindow, uint receiveWindow)$/;"	m	class:kcp2k.Kcp
Setup	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUIItem.cs	/^        public void Setup(ServerJson server)$/;"	m	class:Mirror.Cloud.Example.ServerListUIItem
Setup	Assets/Mirror/Examples/Cloud/PongWithListServer/README.md	/^## Setup$/;"	s
Setup	Assets/Mirror/Examples/Cloud/TanksWithListServer/README.md	/^## Setup$/;"	s
SetupIDs	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        void SetupIDs()$/;"	m	class:Mirror.NetworkIdentity	file:
SetupKcp	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        protected void SetupKcp(bool noDelay, uint interval = Kcp.INTERVAL, int fastResend = 0, /;"	m	class:kcp2k.KcpConnection
SetupServer	Assets/Mirror/Runtime/NetworkManager.cs	/^        void SetupServer()$/;"	m	class:Mirror.NetworkManager	file:
SetupTargetTypes	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static void SetupTargetTypes(AssemblyDefinition currentAssembly)$/;"	m	class:Mirror.Weaver.WeaverTypes
ShootNearestPlayer	Assets/Mirror/Examples/AdditiveScenes/Scripts/ShootingTankBehaviour.cs	/^        void ShootNearestPlayer()$/;"	m	class:Mirror.Examples.Additive.ShootingTankBehaviour	file:
ShootingTankBehaviour	Assets/Mirror/Examples/AdditiveScenes/Scripts/ShootingTankBehaviour.cs	/^    public class ShootingTankBehaviour : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.Additive
ShortLength	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Constants.cs	/^        public const int ShortLength = 2;$/;"	f	class:Mirror.SimpleWeb.Constants
ShowDialog	Assets/ParrelSync/ParrelSync/Editor/NonCore/AskFeedbackDialog.cs	/^        private static void ShowDialog()$/;"	m	class:ParrelSync.NonCore.AskFeedbackDialog	file:
ShowForConnection	Assets/Mirror/Runtime/NetworkServer.cs	/^        internal static void ShowForConnection(NetworkIdentity identity, NetworkConnection conn)$/;"	m	class:Mirror.NetworkServer	file:
ShowInInspectorAttribute	Assets/Mirror/Runtime/Attributes.cs	/^    public class ShowInInspectorAttribute : Attribute {}$/;"	c	namespace:Mirror
ShowLobbyView	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        void ShowLobbyView()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
ShowRoomView	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        void ShowRoomView()$/;"	m	class:Mirror.Examples.MultipleMatch.CanvasController	file:
ShrinkBuf	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal void ShrinkBuf()$/;"	m	class:kcp2k.Kcp	file:
Shutdown	Assets/Mirror/Cloud/Core/BaseApi.cs	/^        void Shutdown();$/;"	m	interface:Mirror.Cloud.IBaseApi
Shutdown	Assets/Mirror/Cloud/ListServer/ListServerClientApi.cs	/^        public void Shutdown()$/;"	m	class:Mirror.Cloud.ListServerService.ListServerClientApi
Shutdown	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        public void Shutdown()$/;"	m	class:Mirror.Cloud.ListServerService.ListServerServerApi
Shutdown	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        void Shutdown()$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase	file:
Shutdown	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void Shutdown()$/;"	m	class:Mirror.NetworkClient
Shutdown	Assets/Mirror/Runtime/NetworkManager.cs	/^        public static void Shutdown()$/;"	m	class:Mirror.NetworkManager
Shutdown	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void Shutdown()$/;"	m	class:Mirror.NetworkServer
Shutdown	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override void Shutdown()$/;"	m	class:Mirror.FallbackTransport
Shutdown	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override void Shutdown() {}$/;"	m	class:kcp2k.KcpTransport
Shutdown	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override void Shutdown() => wrap.Shutdown();$/;"	m	class:Mirror.LatencySimulation
Shutdown	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^        public override void Shutdown() => inner.Shutdown();$/;"	m	class:Mirror.MiddlewareTransport
Shutdown	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override void Shutdown()$/;"	m	class:Mirror.MultiplexTransport
Shutdown	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public override void Shutdown()$/;"	m	class:Mirror.SimpleWeb.SimpleWebTransport
Shutdown	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override void Shutdown()$/;"	m	class:Mirror.TelepathyTransport
Shutdown	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public abstract void Shutdown();$/;"	m	class:Mirror.Transport
SimpleWebClient	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        protected SimpleWebClient(int maxMessageSize, int maxMessagesPerTick)$/;"	m	class:Mirror.SimpleWeb.SimpleWebClient
SimpleWebClient	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^    public abstract class SimpleWebClient$/;"	c	namespace:Mirror.SimpleWeb
SimpleWebJSLib	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/SimpleWebJSLib.cs	/^    internal static class SimpleWebJSLib$/;"	c	namespace:Mirror.SimpleWeb
SimpleWebServer	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        public SimpleWebServer(int maxMessagesPerTick, TcpConfig tcpConfig, int maxMessageSize, /;"	m	class:Mirror.SimpleWeb.SimpleWebServer
SimpleWebServer	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^    public class SimpleWebServer$/;"	c	namespace:Mirror.SimpleWeb
SimpleWebTransport	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^    public class SimpleWebTransport : Transport$/;"	c	namespace:Mirror.SimpleWeb
SimulateLatency	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        float SimulateLatency(int channeldId)$/;"	m	class:Mirror.LatencySimulation	file:
SimulateSend	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        void SimulateSend(int connectionId, int channelId, ArraySegment<byte> segment, float lat/;"	m	class:Mirror.LatencySimulation	file:
SpatialHashingInterestManagement	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^    public class SpatialHashingInterestManagement : InterestManagement$/;"	c	namespace:Mirror
Spawn	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void Spawn(GameObject obj, GameObject ownerPlayer)$/;"	m	class:Mirror.NetworkServer
Spawn	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void Spawn(GameObject obj, Guid assetId, NetworkConnection ownerConnection/;"	m	class:Mirror.NetworkServer
Spawn	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void Spawn(GameObject obj, NetworkConnection ownerConnection = null)$/;"	m	class:Mirror.NetworkServer
SpawnAll	Assets/Mirror/Examples/Benchmark/Scripts/BenchmarkNetworkManager.cs	/^        void SpawnAll()$/;"	m	class:Mirror.Examples.Benchmark.BenchmarkNetworkManager	file:
SpawnBall	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/BallManager.cs	/^        void SpawnBall()$/;"	m	class:Mirror.Cloud.Examples.Pong.BallManager	file:
SpawnDelegate	Assets/Mirror/Runtime/Utils.cs	/^    public delegate GameObject SpawnDelegate(Vector3 position, Guid assetId);$/;"	m	namespace:Mirror
SpawnHandlerDelegate	Assets/Mirror/Runtime/Utils.cs	/^    public delegate GameObject SpawnHandlerDelegate(SpawnMessage msg);$/;"	m	namespace:Mirror
SpawnMessage	Assets/Mirror/Runtime/Messages.cs	/^    public struct SpawnMessage : NetworkMessage$/;"	s	namespace:Mirror
SpawnObject	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void SpawnObject(GameObject obj, NetworkConnection ownerConnection)$/;"	m	class:Mirror.NetworkServer	file:
SpawnObjects	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static bool SpawnObjects()$/;"	m	class:Mirror.NetworkServer
SpawnObserversForConnection	Assets/Mirror/Runtime/NetworkServer.cs	/^        static void SpawnObserversForConnection(NetworkConnection conn)$/;"	m	class:Mirror.NetworkServer	file:
SpawnPrefab	Assets/Mirror/Runtime/NetworkClient.cs	/^        static NetworkIdentity SpawnPrefab(SpawnMessage message)$/;"	m	class:Mirror.NetworkClient	file:
SpawnReward	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/Spawner.cs	/^        internal static void SpawnReward(Scene scene)$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.Spawner	file:
SpawnReward	Assets/Mirror/Examples/Room/Scripts/Spawner.cs	/^        internal static void SpawnReward()$/;"	m	class:Mirror.Examples.NetworkRoom.Spawner	file:
SpawnSceneObject	Assets/Mirror/Runtime/NetworkClient.cs	/^        static NetworkIdentity SpawnSceneObject(SpawnMessage message)$/;"	m	class:Mirror.NetworkClient	file:
SpawnedFromInstantiate	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public bool SpawnedFromInstantiate { get; private set; }$/;"	p	class:Mirror.NetworkIdentity
Spawner	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/Spawner.cs	/^    internal class Spawner$/;"	c	namespace:Mirror.Examples.MultipleAdditiveScenes
Spawner	Assets/Mirror/Examples/Room/Scripts/Spawner.cs	/^    internal class Spawner$/;"	c	namespace:Mirror.Examples.NetworkRoom
SpecializeField	Assets/Mirror/Editor/Weaver/Extensions.cs	/^        public static FieldReference SpecializeField(this FieldReference self, GenericInstanceTy/;"	m	class:Mirror.Weaver.Extensions
SslConfig	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerSslHelper.cs	/^        public SslConfig(bool enabled, string certPath, string certPassword, SslProtocols sslPro/;"	m	struct:Mirror.SimpleWeb.SslConfig
SslConfig	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerSslHelper.cs	/^    public struct SslConfig$/;"	s	namespace:Mirror.SimpleWeb
SslConfigLoader	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SslConfigLoader.cs	/^    internal class SslConfigLoader$/;"	c	namespace:Mirror.SimpleWeb
Start	Assets/Mirror/Components/Discovery/NetworkDiscovery.cs	/^        public override void Start()$/;"	m	class:Mirror.Discovery.NetworkDiscovery
Start	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        public virtual void Start()$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase
Start	Assets/Mirror/Components/NetworkRoomPlayer.cs	/^        public void Start()$/;"	m	class:Mirror.NetworkRoomPlayer
Start	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        void Start()$/;"	m	class:Mirror.Examples.Additive.PlayerController	file:
Start	Assets/Mirror/Examples/AdditiveScenes/Scripts/ShootingTankBehaviour.cs	/^        void Start()$/;"	m	class:Mirror.Examples.Additive.ShootingTankBehaviour	file:
Start	Assets/Mirror/Examples/Cloud/GUI/Scripts/QuickListServerDebug.cs	/^        void Start()$/;"	m	class:Mirror.Cloud.Example.QuickListServerDebug	file:
Start	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListManager.cs	/^        void Start()$/;"	m	class:Mirror.Cloud.Example.ServerListManager	file:
Start	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PhysicsCollision.cs	/^        void Start()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.PhysicsCollision	file:
Start	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        void Start()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController	file:
Start	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        Start,$/;"	e	enum:Mirror.Examples.MultipleMatch.ServerMatchOperation	file:
Start	Assets/Mirror/Examples/RigidbodyPhysics/Scripts/AddForce.cs	/^        void Start()$/;"	m	class:Mirror.Examples.RigidbodyPhysics.AddForce	file:
Start	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        void Start()$/;"	m	class:Mirror.Examples.NetworkRoom.PlayerController	file:
Start	Assets/Mirror/Examples/Tanks/Scripts/Projectile.cs	/^        void Start()$/;"	m	class:Mirror.Examples.Tanks.Projectile	file:
Start	Assets/Mirror/Runtime/NetworkManager.cs	/^        public virtual void Start()$/;"	m	class:Mirror.NetworkManager
Start	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public void Start(ushort port)$/;"	m	class:kcp2k.KcpServer
Start	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        public void Start(ushort port)$/;"	m	class:Mirror.SimpleWeb.SimpleWebServer
Start	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public bool Start(int port)$/;"	m	class:Telepathy.Server
Start	Assets/ParrelSync/Examples/CustomArgumentExample.cs	/^        void Start()$/;"	m	class:ParrelSync.Example.CustomArgumentExample	file:
Start	Assets/Project/Scripts/Joystick/Joystick.cs	/^    private void Start() {$/;"	m	class:Joystick	file:
Start	Assets/Project/Scripts/Networking/MyNetworkManager.cs	/^    public override async void Start() {$/;"	m	class:MyNetworkManager
Start	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    private void Start() {$/;"	m	class:LobbyPlayer	file:
StartButtons	Assets/Mirror/Runtime/NetworkManagerHUD.cs	/^        void StartButtons()$/;"	m	class:Mirror.NetworkManagerHUD	file:
StartClient	Assets/Mirror/Runtime/NetworkManager.cs	/^        public void StartClient()$/;"	m	class:Mirror.NetworkManager
StartClient	Assets/Mirror/Runtime/NetworkManager.cs	/^        public void StartClient(Uri uri)$/;"	m	class:Mirror.NetworkManager
StartCoroutine	Assets/Mirror/Cloud/Core/ICoroutineRunner.cs	/^        Coroutine StartCoroutine(IEnumerator routine);$/;"	m	interface:Mirror.Cloud.ICoroutineRunner
StartDiscovery	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        public void StartDiscovery()$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase
StartGame	Assets/Project/Scripts/UI/LobbyManager.cs	/^    public void StartGame() {$/;"	m	class:LobbyManager
StartGetServerListRepeat	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^        void StartGetServerListRepeat(int interval);$/;"	m	interface:Mirror.Cloud.ListServerService.IListServerClientApi
StartGetServerListRepeat	Assets/Mirror/Cloud/ListServer/ListServerClientApi.cs	/^        public void StartGetServerListRepeat(int interval)$/;"	m	class:Mirror.Cloud.ListServerService.ListServerClientApi
StartHiddenConsoleProcess	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        private static void StartHiddenConsoleProcess(string fileName, string args)$/;"	m	class:ParrelSync.ClonesManager	file:
StartHost	Assets/Mirror/Runtime/NetworkManager.cs	/^        public void StartHost()$/;"	m	class:Mirror.NetworkManager
StartHostClient	Assets/Mirror/Runtime/NetworkManager.cs	/^        void StartHostClient()$/;"	m	class:Mirror.NetworkManager	file:
StartServer	Assets/Mirror/Runtime/NetworkManager.cs	/^        public void StartServer()$/;"	m	class:Mirror.NetworkManager
StartServerButtonHandler	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListManager.cs	/^        public void StartServerButtonHandler()$/;"	m	class:Mirror.Cloud.Example.ServerListManager
Started	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        Started$/;"	e	enum:Mirror.Examples.MultipleMatch.ClientMatchOperation	file:
StaticJoystick	Assets/Project/Scripts/Joystick/StaticJoystick.cs	/^public class StaticJoystick : Joystick {$/;"	c
StatusLabels	Assets/Mirror/Runtime/NetworkManagerHUD.cs	/^        void StatusLabels()$/;"	m	class:Mirror.NetworkManagerHUD	file:
Stop	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public void Stop()$/;"	m	class:kcp2k.KcpServer
Stop	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        public void Stop()$/;"	m	class:Mirror.SimpleWeb.SimpleWebServer
Stop	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        public void Stop()$/;"	m	class:Mirror.SimpleWeb.WebSocketServer
Stop	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public void Stop()$/;"	m	class:Telepathy.Server
StopButtons	Assets/Mirror/Runtime/NetworkManagerHUD.cs	/^        void StopButtons()$/;"	m	class:Mirror.NetworkManagerHUD	file:
StopClient	Assets/Mirror/Runtime/NetworkManager.cs	/^        public void StopClient()$/;"	m	class:Mirror.NetworkManager
StopCoroutine	Assets/Mirror/Cloud/Core/ICoroutineRunner.cs	/^        void StopCoroutine(Coroutine routine);$/;"	m	interface:Mirror.Cloud.ICoroutineRunner
StopCoroutine	Assets/Mirror/Cloud/Core/ICoroutineRunner.cs	/^        void StopCoroutine(IEnumerator routine);$/;"	m	interface:Mirror.Cloud.ICoroutineRunner
StopDiscovery	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        public void StopDiscovery()$/;"	m	class:Mirror.Discovery.NetworkDiscoveryBase
StopGetServerListRepeat	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^        void StopGetServerListRepeat();$/;"	m	interface:Mirror.Cloud.ListServerService.IListServerClientApi
StopGetServerListRepeat	Assets/Mirror/Cloud/ListServer/ListServerClientApi.cs	/^        public void StopGetServerListRepeat()$/;"	m	class:Mirror.Cloud.ListServerService.ListServerClientApi
StopHost	Assets/Mirror/Runtime/NetworkManager.cs	/^        public void StopHost()$/;"	m	class:Mirror.NetworkManager
StopServer	Assets/Mirror/Runtime/NetworkManager.cs	/^        public void StopServer()$/;"	m	class:Mirror.NetworkManager
StopShowingKey	Assets/ParrelSync/ParrelSync/Editor/NonCore/AskFeedbackDialog.cs	/^        const string InitializeOnLoadCountKey = "ParrelSync_InitOnLoadCount", StopShowingKey = "/;"	f	class:ParrelSync.NonCore.AskFeedbackDialog	file:
Stopwatch	Assets/Mirror/Runtime/NetworkTime.cs	/^using Stopwatch = System.Diagnostics.Stopwatch;$/;"	t	file:
Styles	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^            public Styles()$/;"	m	class:Mirror.NetworkInformationPreview.Styles
Styles	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        class Styles$/;"	c	class:Mirror.NetworkInformationPreview
SubstituteMethod	Assets/Mirror/Editor/Weaver/Processors/MethodProcessor.cs	/^        public static MethodDefinition SubstituteMethod(TypeDefinition td, MethodDefinition md)$/;"	m	class:Mirror.Weaver.MethodProcessor
Support this project	Assets/ParrelSync/README.md	/^## Support this project $/;"	s
Supported Platform	Assets/ParrelSync/README.md	/^## Supported Platform$/;"	s
SupportedOnThisPlatform	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        public static bool SupportedOnThisPlatform { get { return Application.platform != Runtim/;"	p	class:Mirror.Discovery.NetworkDiscoveryBase
SwitchTo	Assets/Project/Scripts/UI/ScreenManager.cs	/^    public void SwitchTo(string screenName) {$/;"	m	class:ScreenManager
SymmetricExceptWith	Assets/Mirror/Runtime/SyncSet.cs	/^        public void SymmetricExceptWith(IEnumerable<T> other)$/;"	m	class:Mirror.SyncSet
SyncDictionary	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public SyncDictionary() : base(new Dictionary<TKey, TValue>()) {}$/;"	m	class:Mirror.SyncDictionary
SyncDictionary	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public SyncDictionary(IEqualityComparer<TKey> eq) : base(new Dictionary<TKey, TValue>(eq/;"	m	class:Mirror.SyncDictionary
SyncDictionary	Assets/Mirror/Runtime/SyncDictionary.cs	/^    public class SyncDictionary<TKey, TValue> : SyncIDictionary<TKey, TValue>$/;"	c	namespace:Mirror
SyncDictionaryChanged	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public delegate void SyncDictionaryChanged(Operation op, TKey key, TValue item);$/;"	m	class:Mirror.SyncIDictionary
SyncHashSet	Assets/Mirror/Runtime/SyncSet.cs	/^        public SyncHashSet() : this(EqualityComparer<T>.Default) {}$/;"	m	class:Mirror.SyncHashSet
SyncHashSet	Assets/Mirror/Runtime/SyncSet.cs	/^        public SyncHashSet(IEqualityComparer<T> comparer) : base(new HashSet<T>(comparer ?? Equa/;"	m	class:Mirror.SyncHashSet
SyncHashSet	Assets/Mirror/Runtime/SyncSet.cs	/^    public class SyncHashSet<T> : SyncSet<T>$/;"	c	namespace:Mirror
SyncIDictionary	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public SyncIDictionary(IDictionary<TKey, TValue> objects)$/;"	m	class:Mirror.SyncIDictionary
SyncIDictionary	Assets/Mirror/Runtime/SyncDictionary.cs	/^    public class SyncIDictionary<TKey, TValue> : IDictionary<TKey, TValue>, SyncObject, IReadOnl/;"	c	namespace:Mirror
SyncList	Assets/Mirror/Runtime/SyncList.cs	/^        public SyncList() : this(EqualityComparer<T>.Default) {}$/;"	m	class:Mirror.SyncList
SyncList	Assets/Mirror/Runtime/SyncList.cs	/^        public SyncList(IEqualityComparer<T> comparer)$/;"	m	class:Mirror.SyncList
SyncList	Assets/Mirror/Runtime/SyncList.cs	/^        public SyncList(IList<T> objects, IEqualityComparer<T> comparer = null)$/;"	m	class:Mirror.SyncList
SyncList	Assets/Mirror/Runtime/SyncList.cs	/^    public class SyncList<T> : IList<T>, IReadOnlyList<T>, SyncObject$/;"	c	namespace:Mirror
SyncListBool	Assets/Mirror/Runtime/SyncList.cs	/^    public class SyncListBool : SyncList<bool> {}$/;"	c	namespace:Mirror
SyncListChanged	Assets/Mirror/Runtime/SyncList.cs	/^        public delegate void SyncListChanged(Operation op, int itemIndex, T oldItem, T newItem);$/;"	m	class:Mirror.SyncList
SyncListDrawer	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^        public SyncListDrawer(UnityEngine.Object targetObject)$/;"	m	class:Mirror.SyncListDrawer
SyncListDrawer	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^    public class SyncListDrawer$/;"	c	namespace:Mirror
SyncListField	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^            public SyncListField(FieldInfo field)$/;"	m	class:Mirror.SyncListDrawer.SyncListField
SyncListField	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^        class SyncListField$/;"	c	class:Mirror.SyncListDrawer
SyncListFloat	Assets/Mirror/Runtime/SyncList.cs	/^    public class SyncListFloat : SyncList<float> {}$/;"	c	namespace:Mirror
SyncListInt	Assets/Mirror/Runtime/SyncList.cs	/^    public class SyncListInt : SyncList<int> {}$/;"	c	namespace:Mirror
SyncListString	Assets/Mirror/Runtime/SyncList.cs	/^    public class SyncListString : SyncList<string> {}$/;"	c	namespace:Mirror
SyncListUInt	Assets/Mirror/Runtime/SyncList.cs	/^    public class SyncListUInt : SyncList<uint> {}$/;"	c	namespace:Mirror
SyncMode	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^    public enum SyncMode { Observers, Owner }$/;"	g	namespace:Mirror
SyncObject	Assets/Mirror/Runtime/SyncObject.cs	/^    public interface SyncObject$/;"	i	namespace:Mirror
SyncObjectInitializer	Assets/Mirror/Editor/Weaver/Processors/SyncObjectInitializer.cs	/^    public static class SyncObjectInitializer$/;"	c	namespace:Mirror.Weaver
SyncObjectProcessor	Assets/Mirror/Editor/Weaver/Processors/SyncObjectProcessor.cs	/^    public static class SyncObjectProcessor$/;"	c	namespace:Mirror.Weaver
SyncSet	Assets/Mirror/Runtime/SyncSet.cs	/^        public SyncSet(ISet<T> objects)$/;"	m	class:Mirror.SyncSet
SyncSet	Assets/Mirror/Runtime/SyncSet.cs	/^    public class SyncSet<T> : ISet<T>, SyncObject$/;"	c	namespace:Mirror
SyncSetChanged	Assets/Mirror/Runtime/SyncSet.cs	/^        public delegate void SyncSetChanged(Operation op, T item);$/;"	m	class:Mirror.SyncSet
SyncSortedSet	Assets/Mirror/Runtime/SyncSet.cs	/^        public SyncSortedSet() : this(Comparer<T>.Default) {}$/;"	m	class:Mirror.SyncSortedSet
SyncSortedSet	Assets/Mirror/Runtime/SyncSet.cs	/^        public SyncSortedSet(IComparer<T> comparer) : base(new SortedSet<T>(comparer ?? Comparer/;"	m	class:Mirror.SyncSortedSet
SyncSortedSet	Assets/Mirror/Runtime/SyncSet.cs	/^    public class SyncSortedSet<T> : SyncSet<T>$/;"	c	namespace:Mirror
SyncToClients	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^        void SyncToClients()$/;"	m	class:Mirror.Experimental.NetworkLerpRigidbody	file:
SyncToClients	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        void SyncToClients()$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
SyncToClients	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        void SyncToClients()$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
SyncVarAttribute	Assets/Mirror/Runtime/Attributes.cs	/^    public class SyncVarAttribute : PropertyAttribute$/;"	c	namespace:Mirror
SyncVarAttributeDrawer	Assets/Mirror/Editor/SyncVarAttributeDrawer.cs	/^    public class SyncVarAttributeDrawer : PropertyDrawer$/;"	c	namespace:Mirror
SyncVarEqual	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected bool SyncVarEqual<T>(T value, ref T fieldValue)$/;"	m	class:Mirror.NetworkBehaviour
SyncVarGameObjectEqual	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected bool SyncVarGameObjectEqual(GameObject newGameObject, uint netIdField)$/;"	m	class:Mirror.NetworkBehaviour
SyncVarLimit	Assets/Mirror/Editor/Weaver/Processors/SyncVarProcessor.cs	/^        const int SyncVarLimit = 64;$/;"	f	class:Mirror.Weaver.SyncVarProcessor	file:
SyncVarNetworkIdentityEqual	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected bool SyncVarNetworkIdentityEqual(NetworkIdentity newIdentity, uint netIdField)$/;"	m	class:Mirror.NetworkBehaviour
SyncVarProcessor	Assets/Mirror/Editor/Weaver/Processors/SyncVarProcessor.cs	/^    public static class SyncVarProcessor$/;"	c	namespace:Mirror.Weaver
SyncsAnything	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^        bool SyncsAnything(Type scriptClass)$/;"	m	class:Mirror.NetworkBehaviourInspector	file:
THRESH_INIT	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int THRESH_INIT = 2;$/;"	f	class:kcp2k.Kcp
THRESH_MIN	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int THRESH_MIN = 2;$/;"	f	class:kcp2k.Kcp
TIMEOUT	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public const int TIMEOUT = 10000;$/;"	f	class:kcp2k.KcpConnection
Take	Assets/Mirror/Runtime/Pool.cs	/^        public T Take() => objects.Count > 0 ? objects.Pop() : objectGenerator();$/;"	m	class:Mirror.Pool
Take	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        public static Segment Take()$/;"	m	class:kcp2k.Segment
Take	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public ArrayBuffer Take()$/;"	m	class:Mirror.SimpleWeb.BufferBucket
Take	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public ArrayBuffer Take(int size)$/;"	m	class:Mirror.SimpleWeb.BufferPool
Take	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Pool.cs	/^        public T Take() => objects.Count > 0 ? objects.Pop() : objectGenerator();$/;"	m	class:Telepathy.Pool
Tank	Assets/Mirror/Examples/Tanks/Scripts/Tank.cs	/^    public class Tank : NetworkBehaviour$/;"	c	namespace:Mirror.Examples.Tanks
TargetRpc	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        TargetRpc$/;"	e	enum:Mirror.Weaver.RemoteCallType	file:
TargetRpcAttribute	Assets/Mirror/Runtime/Attributes.cs	/^    public class TargetRpcAttribute : Attribute$/;"	c	namespace:Mirror
TargetRpcProcessor	Assets/Mirror/Editor/Weaver/Processors/TargetRpcProcessor.cs	/^    public static class TargetRpcProcessor$/;"	c	namespace:Mirror.Weaver
TcpConfig	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/TcpConfig.cs	/^        public TcpConfig(bool noDelay, int sendTimeout, int receiveTimeout)$/;"	m	struct:Mirror.SimpleWeb.TcpConfig
TcpConfig	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/TcpConfig.cs	/^    public struct TcpConfig$/;"	s	namespace:Mirror.SimpleWeb
TcpConfig	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        TcpConfig TcpConfig => new TcpConfig(noDelay, sendTimeout, receiveTimeout);$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport	file:
Telepathy	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^namespace Telepathy$/;"	n
Telepathy	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Common.cs	/^namespace Telepathy$/;"	n
Telepathy	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/ConnectionState.cs	/^namespace Telepathy$/;"	n
Telepathy	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/EventType.cs	/^namespace Telepathy$/;"	n
Telepathy	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Log.cs	/^namespace Telepathy$/;"	n
Telepathy	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^namespace Telepathy$/;"	n
Telepathy	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentSendPipe.cs	/^namespace Telepathy$/;"	n
Telepathy	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/NetworkStreamExtensions.cs	/^namespace Telepathy$/;"	n
Telepathy	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Pool.cs	/^namespace Telepathy$/;"	n
Telepathy	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^namespace Telepathy$/;"	n
Telepathy	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/ThreadFunctions.cs	/^namespace Telepathy$/;"	n
Telepathy	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Utils.cs	/^namespace Telepathy$/;"	n
TelepathyTransport	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^    public class TelepathyTransport : Transport$/;"	c	namespace:Mirror
TenBitsMax	Assets/Mirror/Runtime/Compression.cs	/^        const ushort TenBitsMax = 0x3FF;$/;"	f	class:Mirror.Compression	file:
ThreadFunctions	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/ThreadFunctions.cs	/^    public static class ThreadFunctions$/;"	c	namespace:Telepathy
ThrowIfBadOpCode	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^        static void ThrowIfBadOpCode(int opcode)$/;"	m	class:Mirror.SimpleWeb.MessageProcessor	file:
ThrowIfLengthZero	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^        static void ThrowIfLengthZero(int msglen)$/;"	m	class:Mirror.SimpleWeb.MessageProcessor	file:
ThrowIfMaskNotExpected	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^        static void ThrowIfMaskNotExpected(bool hasMask, bool expectMask)$/;"	m	class:Mirror.SimpleWeb.MessageProcessor	file:
ThrowIfMsgLengthTooLong	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^        static void ThrowIfMsgLengthTooLong(int msglen, int maxLength)$/;"	m	class:Mirror.SimpleWeb.MessageProcessor	file:
ThrowIfNotFinished	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^        static void ThrowIfNotFinished(bool finished)$/;"	m	class:Mirror.SimpleWeb.MessageProcessor	file:
Tick	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^        public void Tick()$/;"	m	class:kcp2k.KcpClient
Tick	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public void Tick()$/;"	m	class:kcp2k.KcpServer
Tick	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public int Tick(int processLimit, Func<bool> checkEnabled = null)$/;"	m	class:Telepathy.Client
Tick	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public int Tick(int processLimit, Func<bool> checkEnabled = null)$/;"	m	class:Telepathy.Server
TickIncoming	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^        public void TickIncoming()$/;"	m	class:kcp2k.KcpClient
TickIncoming	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public void TickIncoming()$/;"	m	class:kcp2k.KcpConnection
TickIncoming	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public void TickIncoming()$/;"	m	class:kcp2k.KcpServer
TickIncoming_Authenticated	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        void TickIncoming_Authenticated(uint time)$/;"	m	class:kcp2k.KcpConnection	file:
TickIncoming_Connected	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        void TickIncoming_Connected(uint time)$/;"	m	class:kcp2k.KcpConnection	file:
TickOutgoing	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^        public void TickOutgoing()$/;"	m	class:kcp2k.KcpClient
TickOutgoing	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public void TickOutgoing()$/;"	m	class:kcp2k.KcpConnection
TickOutgoing	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public void TickOutgoing()$/;"	m	class:kcp2k.KcpServer
TimeDiff	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Utils.cs	/^        public static int TimeDiff(uint later, uint earlier)$/;"	m	class:kcp2k.Utils
TimeoutAuthenticator	Assets/Mirror/Authenticators/TimeoutAuthenticator.cs	/^    public class TimeoutAuthenticator : NetworkAuthenticator$/;"	c	namespace:Mirror.Authenticators
ToArray	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public byte[] ToArray()$/;"	m	class:Mirror.NetworkWriter
ToArraySegment	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public ArraySegment<byte> ToArraySegment()$/;"	m	class:Mirror.NetworkWriter
ToBaseId	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        int ToBaseId(int connectionId)$/;"	m	class:Mirror.MultiplexTransport	file:
ToDictionary	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public static Dictionary<string, string> ToDictionary(this KeyValue[] keyValues)$/;"	m	class:Mirror.Cloud.ListServerService.CustomDataHelper
ToKeyValueArray	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public static KeyValue[] ToKeyValueArray(this Dictionary<string, string> dictionary)$/;"	m	class:Mirror.Cloud.ListServerService.CustomDataHelper
ToSegment	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public ArraySegment<byte> ToSegment()$/;"	m	class:Mirror.SimpleWeb.ArrayBuffer
ToString	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^            public override string ToString()$/;"	m	struct:Mirror.NetworkBehaviour.NetworkBehaviourSyncVar
ToString	Assets/Mirror/Runtime/NetworkConnection.cs	/^        public override string ToString() => $"connection({connectionId})";$/;"	m	class:Mirror.NetworkConnection
ToString	Assets/Mirror/Runtime/NetworkReader.cs	/^        public override string ToString()$/;"	m	class:Mirror.NetworkReader
ToString	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public override string ToString()$/;"	m	class:Mirror.FallbackTransport
ToString	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public override string ToString() => "KCP";$/;"	m	class:kcp2k.KcpTransport
ToString	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public override string ToString() => $"{nameof(LatencySimulation)} {wrap}";$/;"	m	class:Mirror.LatencySimulation
ToString	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public override string ToString()$/;"	m	class:Mirror.MultiplexTransport
ToString	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^        public override string ToString()$/;"	m	class:Mirror.SimpleWeb.Connection
ToString	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public override string ToString()$/;"	m	class:Mirror.TelepathyTransport
ToString	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        public override string ToString()$/;"	m	class:ParrelSync.Project
ToTransportId	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        int ToTransportId(int connectionId)$/;"	m	class:Mirror.MultiplexTransport	file:
ToggleIsReady	Assets/Project/Scripts/UI/LobbyManager.cs	/^    public void ToggleIsReady() {$/;"	m	class:LobbyManager
ToggleMask	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^        public static void ToggleMask(byte[] src, int sourceOffset, ArrayBuffer dst, int message/;"	m	class:Mirror.SimpleWeb.MessageProcessor
ToggleMask	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^        public static void ToggleMask(byte[] src, int sourceOffset, int messageLength, byte[] ma/;"	m	class:Mirror.SimpleWeb.MessageProcessor
ToggleMask	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^        public static void ToggleMask(byte[] src, int srcOffset, byte[] dst, int dstOffset, int /;"	m	class:Mirror.SimpleWeb.MessageProcessor
TopRow	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        TopRow = A1 + B1 + C1,$/;"	e	enum:Mirror.Examples.MultipleMatch.CellValue	file:
TotalCount	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^        public int TotalCount$/;"	p	class:Telepathy.MagnificentReceivePipe
Transport	Assets/Mirror/Runtime/Transport/Transport.cs	/^    public abstract class Transport : MonoBehaviour$/;"	c	namespace:Mirror
TransportReceive	Assets/Mirror/Runtime/NetworkConnection.cs	/^        internal void TransportReceive(ArraySegment<byte> buffer, int channelId)$/;"	m	class:Mirror.NetworkConnection	file:
TryCreateStream	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/ClientSslHelper.cs	/^        internal bool TryCreateStream(Connection conn, Uri uri)$/;"	m	class:Mirror.SimpleWeb.ClientSslHelper	file:
TryCreateStream	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerSslHelper.cs	/^        internal bool TryCreateStream(Connection conn)$/;"	m	class:Mirror.SimpleWeb.ServerSslHelper	file:
TryDequeue	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^        public bool TryDequeue()$/;"	m	class:Telepathy.MagnificentReceivePipe
TryGetValue	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public bool TryGetValue(TKey key, out TValue value) => objects.TryGetValue(key, out valu/;"	m	class:Mirror.SyncIDictionary
TryHandshake	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/ClientHandshake.cs	/^        public bool TryHandshake(Connection conn, Uri uri)$/;"	m	class:Mirror.SimpleWeb.ClientHandshake
TryHandshake	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        public bool TryHandshake(Connection conn)$/;"	m	class:Mirror.SimpleWeb.ServerHandshake
TryPeek	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^        public bool TryPeek(out int connectionId, out EventType eventType, out ArraySegment<byte/;"	m	class:Telepathy.MagnificentReceivePipe
TryRead	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReadHelper.cs	/^        public static bool TryRead(Stream stream, byte[] outBuffer, int outOffset, int length)$/;"	m	class:Mirror.SimpleWeb.ReadHelper
TryResolveMethodInParents	Assets/Mirror/Editor/Weaver/Resolvers.cs	/^        public static MethodReference TryResolveMethodInParents(TypeReference tr, AssemblyDefini/;"	m	class:Mirror.Weaver.Resolvers
TypeReferenceComparer	Assets/Mirror/Editor/Weaver/TypeReferenceComparer.cs	/^    public class TypeReferenceComparer : IEqualityComparer<TypeReference>$/;"	c	namespace:Mirror.Weaver
UIntDecimal	Assets/Mirror/Runtime/Utils.cs	/^    internal struct UIntDecimal$/;"	s	namespace:Mirror
UIntDouble	Assets/Mirror/Runtime/Utils.cs	/^    internal struct UIntDouble$/;"	s	namespace:Mirror
UIntFloat	Assets/Mirror/Runtime/Utils.cs	/^    internal struct UIntFloat$/;"	s	namespace:Mirror
UPM Package	Assets/ParrelSync/README.md	/^### UPM Package$/;"	S
UlongPayloadLength	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Constants.cs	/^        public const int UlongPayloadLength = 127;$/;"	f	class:Mirror.SimpleWeb.Constants
UnRegisterStartPosition	Assets/Mirror/Runtime/NetworkManager.cs	/^        public static void UnRegisterStartPosition(Transform start)$/;"	m	class:Mirror.NetworkManager
UnSpawnDelegate	Assets/Mirror/Runtime/Utils.cs	/^    public delegate void UnSpawnDelegate(GameObject spawned);$/;"	m	namespace:Mirror
UnionWith	Assets/Mirror/Runtime/SyncSet.cs	/^        public void UnionWith(IEnumerable<T> other)$/;"	m	class:Mirror.SyncSet
UnityAssembly	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^using UnityAssembly = UnityEditor.Compilation.Assembly;$/;"	t	file:
UnityEngineDllDirectoryName	Assets/Mirror/Editor/Weaver/Helpers.cs	/^        public static string UnityEngineDllDirectoryName()$/;"	m	class:Mirror.Weaver.Helpers
UnityEqualCheckExtension	Assets/Mirror/Cloud/Core/IUnityEqualCheck.cs	/^    public static class UnityEqualCheckExtension$/;"	c	namespace:Mirror.Cloud
UnityEventNetworkConnection	Assets/Mirror/Runtime/NetworkAuthenticator.cs	/^    [Serializable] public class UnityEventNetworkConnection : UnityEvent<NetworkConnection> {}$/;"	c	namespace:Mirror
UnityLogEnabled	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^        public static bool UnityLogEnabled = true;$/;"	f	class:Mirror.Weaver.CompilationFinishedHook
UnloadAdditive	Assets/Mirror/Runtime/Messages.cs	/^        UnloadAdditive$/;"	e	enum:Mirror.SceneOperation	file:
UnloadScenes	Assets/Mirror/Examples/AdditiveScenes/Scripts/AdditiveNetworkManager.cs	/^        IEnumerator UnloadScenes()$/;"	m	class:Mirror.Examples.Additive.AdditiveNetworkManager	file:
Unpack	Assets/Mirror/Runtime/MessagePacking.cs	/^        public static bool Unpack(NetworkReader messageReader, out int msgType)$/;"	m	class:Mirror.MessagePacking
UnpackAndInvoke	Assets/Mirror/Runtime/NetworkConnection.cs	/^        protected bool UnpackAndInvoke(NetworkReader reader, int channelId)$/;"	m	class:Mirror.NetworkConnection
UnpackMessage	Assets/Mirror/Runtime/MessagePacking.cs	/^        public static bool UnpackMessage(NetworkReader messageReader, out int msgType) =>$/;"	m	class:Mirror.MessagePacking
Unpause	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^        public void Unpause() => connection?.Unpause();$/;"	m	class:kcp2k.KcpClient
Unpause	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public void Unpause()$/;"	m	class:kcp2k.KcpConnection
Unpause	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public void Unpause()$/;"	m	class:kcp2k.KcpServer
UnregisterPrefab	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void UnregisterPrefab(GameObject prefab)$/;"	m	class:Mirror.NetworkClient
UnregisterSpawnHandler	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void UnregisterSpawnHandler(Guid assetId)$/;"	m	class:Mirror.NetworkClient
Unreliable	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpChannel.cs	/^        Unreliable = 0x02$/;"	e	enum:kcp2k.KcpChannel	file:
Unreliable	Assets/Mirror/Runtime/Utils.cs	/^        public const int Unreliable = 1;    \/\/ unordered$/;"	f	class:Mirror.Channels
UnreliableMaxMessageSize	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        public const int UnreliableMaxMessageSize = Kcp.MTU_DEF - CHANNEL_HEADER_SIZE;$/;"	f	class:kcp2k.KcpConnection
Update	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^        void Update()$/;"	m	class:Mirror.Experimental.NetworkLerpRigidbody	file:
Update	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        internal void Update()$/;"	m	class:Mirror.Experimental.NetworkRigidbody	file:
Update	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        internal void Update()$/;"	m	class:Mirror.Experimental.NetworkRigidbody2D	file:
Update	Assets/Mirror/Components/GUIConsole.cs	/^        void Update()$/;"	m	class:Mirror.GUIConsole	file:
Update	Assets/Mirror/Components/InterestManagement/Distance/DistanceInterestManagement.cs	/^        void Update()$/;"	m	class:Mirror.DistanceInterestManagement	file:
Update	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^        internal void Update()$/;"	m	class:Mirror.SpatialHashingInterestManagement	file:
Update	Assets/Mirror/Components/NetworkSceneChecker.cs	/^        void Update()$/;"	m	class:Mirror.NetworkSceneChecker	file:
Update	Assets/Mirror/Components/NetworkTransformBase.cs	/^        void Update()$/;"	m	class:Mirror.NetworkTransformBase	file:
Update	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        void Update()$/;"	m	class:Mirror.Examples.Additive.PlayerController	file:
Update	Assets/Mirror/Examples/AdditiveScenes/Scripts/ShootingTankBehaviour.cs	/^        void Update()$/;"	m	class:Mirror.Examples.Additive.ShootingTankBehaviour	file:
Update	Assets/Mirror/Examples/Benchmark/Scripts/MonsterMovement.cs	/^        void Update()$/;"	m	class:Mirror.Examples.Benchmark.MonsterMovement	file:
Update	Assets/Mirror/Examples/Benchmark/Scripts/PlayerMovement.cs	/^        void Update()$/;"	m	class:Mirror.Examples.Benchmark.PlayerMovement	file:
Update	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        void Update()$/;"	m	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController	file:
Update	Assets/Mirror/Examples/RigidbodyPhysics/Scripts/AddForce.cs	/^        void Update()$/;"	m	class:Mirror.Examples.RigidbodyPhysics.AddForce	file:
Update	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        void Update()$/;"	m	class:Mirror.Examples.NetworkRoom.PlayerController	file:
Update	Assets/Mirror/Examples/Tanks/Scripts/Tank.cs	/^        void Update()$/;"	m	class:Mirror.Examples.Tanks.Tank	file:
Update	Assets/Mirror/Runtime/LocalConnections.cs	/^        internal void Update()$/;"	m	class:Mirror.LocalConnectionToServer	file:
Update	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static void Update() => NetworkLateUpdate();$/;"	m	class:Mirror.NetworkClient
Update	Assets/Mirror/Runtime/NetworkConnectionToClient.cs	/^        internal void Update()$/;"	m	class:Mirror.NetworkConnectionToClient	file:
Update	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void Update() => NetworkLateUpdate();$/;"	m	class:Mirror.NetworkServer
Update	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public void Update(uint currentTimeMilliSeconds)$/;"	m	class:kcp2k.Kcp
Update	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public void Update() {}$/;"	m	class:Mirror.Transport
Update	Assets/Project/Scripts/Player/PlayerMovement.cs	/^    private void Update() {$/;"	m	class:PlayerMovement	file:
Update Server	Assets/Mirror/Cloud/README.md	/^#### Update Server$/;"	t
UpdateAck	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        void UpdateAck(int rtt) \/\/ round trip time$/;"	m	class:kcp2k.Kcp	file:
UpdateChecker	Assets/ParrelSync/ParrelSync/Editor/UpdateChecker.cs	/^    public class UpdateChecker$/;"	c	namespace:ParrelSync.Update
UpdateClient	Assets/Mirror/Runtime/NetworkTime.cs	/^        internal static void UpdateClient()$/;"	m	class:Mirror.NetworkTime	file:
UpdateData	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        void UpdateData()$/;"	m	class:Mirror.Examples.Basic.Player	file:
UpdateGameUI	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public void UpdateGameUI(NetworkIdentity _, NetworkIdentity newPlayerTurn)$/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
UpdateList	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUI.cs	/^        public void UpdateList(ServerCollectionJson serverCollection)$/;"	m	class:Mirror.Cloud.Example.ServerListUI
UpdateRoom	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        UpdateRoom,$/;"	e	enum:Mirror.Examples.MultipleMatch.ClientMatchOperation	file:
UpdateScene	Assets/Mirror/Runtime/NetworkManager.cs	/^        void UpdateScene()$/;"	m	class:Mirror.NetworkManager	file:
UpdateServer	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^        void UpdateServer(ServerJson server);$/;"	m	interface:Mirror.Cloud.ListServerService.IListServerServerApi
UpdateServer	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^        void UpdateServer(int newPlayerCount);$/;"	m	interface:Mirror.Cloud.ListServerService.IListServerServerApi
UpdateServer	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        public void UpdateServer(ServerJson server)$/;"	m	class:Mirror.Cloud.ListServerService.ListServerServerApi
UpdateServer	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        public void UpdateServer(int newPlayerCount)$/;"	m	class:Mirror.Cloud.ListServerService.ListServerServerApi
UpdateVarsMessage	Assets/Mirror/Runtime/Messages.cs	/^    public struct UpdateVarsMessage : NetworkMessage$/;"	s	namespace:Mirror
UpdateWins	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public void UpdateWins(SyncDictionary<NetworkIdentity, MatchPlayerData>.Operation op, Ne/;"	m	class:Mirror.Examples.MultipleMatch.MatchController
Use the QuickListServerDebug	Assets/Mirror/Cloud/README.md	/^### Use the QuickListServerDebug$/;"	S
Username	Assets/Project/Scripts/GameManager.cs	/^    public string Username;$/;"	f	class:GameManager
Username	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    public string Username;$/;"	f	class:LobbyPlayer
UsernameText	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    public TextMeshProUGUI UsernameText;$/;"	f	class:LobbyPlayer
UshortPayloadLength	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Constants.cs	/^        public const int UshortPayloadLength = 126;$/;"	f	class:Mirror.SimpleWeb.Constants
Utils	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Utils.cs	/^    public static partial class Utils$/;"	c	namespace:kcp2k
Utils	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Utils.cs	/^    internal static class Utils$/;"	c	namespace:Mirror.SimpleWeb
Utils	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Utils.cs	/^    public static class Utils$/;"	c	namespace:Telepathy
Utils	Assets/Mirror/Runtime/Utils.cs	/^    public static class Utils$/;"	c	namespace:Mirror
Validate	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public bool Validate()$/;"	m	struct:Mirror.Cloud.ListServerService.ServerJson
Validate	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public void Validate()$/;"	m	struct:Mirror.Cloud.ListServerService.KeyValue
Validate	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public void Validate()$/;"	m	struct:Mirror.Cloud.ListServerService.PartialServerJson
Validate	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        internal void Validate(int arraySize)$/;"	m	class:Mirror.SimpleWeb.ArrayBuffer	file:
Validate	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        void Validate()$/;"	m	class:Mirror.SimpleWeb.BufferPool	file:
ValidateCopiedFoldersIntegrity	Assets/ParrelSync/ParrelSync/Editor/ValidateCopiedFoldersIntegrity.cs	/^        static ValidateCopiedFoldersIntegrity()$/;"	m	class:ParrelSync.NonCore.ValidateCopiedFoldersIntegrity	file:
ValidateCopiedFoldersIntegrity	Assets/ParrelSync/ParrelSync/Editor/ValidateCopiedFoldersIntegrity.cs	/^    public class ValidateCopiedFoldersIntegrity$/;"	c	namespace:ParrelSync.NonCore
ValidateCustomData	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public static void ValidateCustomData(KeyValue[] customData)$/;"	m	class:Mirror.Cloud.ListServerService.CustomDataHelper
ValidateFolder	Assets/ParrelSync/ParrelSync/Editor/ValidateCopiedFoldersIntegrity.cs	/^        static void ValidateFolder(string folderName)$/;"	m	class:ParrelSync.NonCore.ValidateCopiedFoldersIntegrity	file:
ValidateFunction	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        static bool ValidateFunction(MethodReference md)$/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
ValidateHeader	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^        public static void ValidateHeader(byte[] buffer, int maxLength, bool expectMask)$/;"	m	class:Mirror.SimpleWeb.MessageProcessor
ValidatePacketSize	Assets/Mirror/Runtime/NetworkConnection.cs	/^        protected static bool ValidatePacketSize(ArraySegment<byte> segment, int channelId)$/;"	m	class:Mirror.NetworkConnection
ValidateParameter	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        static bool ValidateParameter(MethodReference method, ParameterDefinition param, RemoteC/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
ValidateParameters	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        static bool ValidateParameters(MethodReference method, RemoteCallType callType)$/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
ValidateRemoteCallAndParameters	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public static bool ValidateRemoteCallAndParameters(MethodDefinition method, RemoteCallTy/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor
ValidateSceneObject	Assets/Mirror/Runtime/NetworkServer.cs	/^        internal static bool ValidateSceneObject(NetworkIdentity identity)$/;"	m	class:Mirror.NetworkServer	file:
ValidateServerCertificate	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/ClientSslHelper.cs	/^        static bool ValidateServerCertificate(object sender, X509Certificate certificate, X509Ch/;"	m	class:Mirror.SimpleWeb.ClientSslHelper	file:
Value	Assets/Mirror/Runtime/ExponentialMovingAverage.cs	/^        public double Value { get; private set; }$/;"	p	class:Mirror.ExponentialMovingAverage
Value	Assets/ParrelSync/ParrelSync/Editor/Preferences.cs	/^        public bool Value$/;"	p	class:ParrelSync.BoolPreference
Values	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public ICollection<TValue> Values => objects.Values;$/;"	f	class:Mirror.SyncIDictionary
Var	Assets/Mirror/Runtime/ExponentialMovingAverage.cs	/^        public double Var { get; private set; }$/;"	p	class:Mirror.ExponentialMovingAverage
Verbose	Assets/Mirror/Cloud/Core/Logger.cs	/^        internal static void Verbose(string msg)$/;"	m	class:Mirror.Cloud.Logger	file:
Verbose	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^        public static void Verbose(string msg, bool showColor = true)$/;"	m	class:Mirror.SimpleWeb.Log
VerboseLogging	Assets/Mirror/Cloud/Core/Logger.cs	/^        public static bool VerboseLogging = false;$/;"	f	class:Mirror.Cloud.Logger
Version	Assets/Mirror/Runtime/Utils.cs	/^    public enum Version$/;"	g	namespace:Mirror
Vertical	Assets/Project/Scripts/Joystick/Joystick.cs	/^    public float Vertical => _direction.y;$/;"	f	class:Joystick
Visibility	Assets/Mirror/Runtime/NetworkIdentity.cs	/^    public enum Visibility { Default, ForceHidden, ForceShown }$/;"	g	namespace:Mirror
WND_RCV	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int WND_RCV = 128;            \/\/ default receive window. must be >= max f/;"	f	class:kcp2k.Kcp
WND_SND	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public const int WND_SND = 32;             \/\/ default send window$/;"	f	class:kcp2k.Kcp
WaitSnd	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        public int WaitSnd => snd_buf.Count + snd_queue.Count;$/;"	f	class:kcp2k.Kcp
Warn	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^        public static void Warn(string msg, bool showColor = true)$/;"	m	class:Mirror.SimpleWeb.Log
Warning	Assets/Mirror/Editor/Weaver/Log.cs	/^        public static Action<string> Warning;$/;"	f	class:Mirror.Weaver.Log
Warning	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public static void Warning(string message, MemberReference mr)$/;"	m	class:Mirror.Weaver.Weaver
Warning	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/Log.cs	/^        public static Action<string> Warning = Console.WriteLine;$/;"	f	class:kcp2k.Log
Warning	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Log.cs	/^        public static Action<string> Warning = Console.WriteLine;$/;"	f	class:Telepathy.Log
WasProcessed	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public static bool WasProcessed(TypeDefinition td)$/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor
Weave	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        static bool Weave(string assName, IEnumerable<string> dependencies)$/;"	m	class:Mirror.Weaver.Weaver	file:
WeaveAssembly	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public static bool WeaveAssembly(string assembly, IEnumerable<string> dependencies)$/;"	m	class:Mirror.Weaver.Weaver
WeaveExistingAssemblies	Assets/Mirror/Editor/Weaver/CompilationFinishedHook.cs	/^        public static void WeaveExistingAssemblies()$/;"	m	class:Mirror.Weaver.CompilationFinishedHook
WeaveLists	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public static WeaverLists WeaveLists { get; private set; }$/;"	p	class:Mirror.Weaver.Weaver
WeaveModule	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        static bool WeaveModule(ModuleDefinition moduleDefinition)$/;"	m	class:Mirror.Weaver.Weaver	file:
WeaveNetworkBehavior	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        static bool WeaveNetworkBehavior(TypeDefinition td)$/;"	m	class:Mirror.Weaver.Weaver	file:
Weaver	Assets/Mirror/Editor/Weaver/Weaver.cs	/^    internal static class Weaver$/;"	c	namespace:Mirror.Weaver
WeaverException	Assets/Mirror/Editor/Weaver/WeaverExceptions.cs	/^        protected WeaverException(System.Runtime.Serialization.SerializationInfo serializationIn/;"	m	class:Mirror.Weaver.WeaverException
WeaverException	Assets/Mirror/Editor/Weaver/WeaverExceptions.cs	/^        protected WeaverException(string message, MemberReference member) : base(message)$/;"	m	class:Mirror.Weaver.WeaverException
WeaverException	Assets/Mirror/Editor/Weaver/WeaverExceptions.cs	/^    public abstract class WeaverException : Exception$/;"	c	namespace:Mirror.Weaver
WeaverLists	Assets/Mirror/Editor/Weaver/Weaver.cs	/^    class WeaverLists$/;"	c	namespace:Mirror.Weaver
WeaverTypes	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^    public static class WeaverTypes$/;"	c	namespace:Mirror.Weaver
WeavingFailed	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public static bool WeavingFailed { get; private set; }$/;"	p	class:Mirror.Weaver.Weaver
WebSocketClientStandAlone	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/WebSocketClientStandAlone.cs	/^        internal WebSocketClientStandAlone(int maxMessageSize, int maxMessagesPerTick, TcpConfig/;"	m	class:Mirror.SimpleWeb.WebSocketClientStandAlone	file:
WebSocketClientStandAlone	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/WebSocketClientStandAlone.cs	/^    public class WebSocketClientStandAlone : SimpleWebClient$/;"	c	namespace:Mirror.SimpleWeb
WebSocketClientWebGl	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^        internal WebSocketClientWebGl(int maxMessageSize, int maxMessagesPerTick) : base(maxMess/;"	m	class:Mirror.SimpleWeb.WebSocketClientWebGl	file:
WebSocketClientWebGl	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^    public class WebSocketClientWebGl : SimpleWebClient$/;"	c	namespace:Mirror.SimpleWeb
WebSocketServer	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        public WebSocketServer(TcpConfig tcpConfig, int maxMessageSize, int handshakeMaxSize, Ss/;"	m	class:Mirror.SimpleWeb.WebSocketServer
WebSocketServer	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^    public class WebSocketServer$/;"	c	namespace:Mirror.SimpleWeb
WndUnused	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        uint WndUnused()$/;"	m	class:kcp2k.Kcp	file:
Write	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public void Write<T>(T value)$/;"	m	class:Mirror.NetworkWriter
WriteAllFields	Assets/Mirror/Editor/Weaver/Writers.cs	/^        static bool WriteAllFields(TypeReference variable, ILProcessor worker)$/;"	m	class:Mirror.Weaver.Writers	file:
WriteArguments	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public static bool WriteArguments(ILProcessor worker, MethodDefinition method, RemoteCal/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor
WriteArray	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteArray<T>(this NetworkWriter writer, T[] array)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteArraySegment	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteArraySegment<T>(this NetworkWriter writer, ArraySegment<T> segme/;"	m	class:Mirror.NetworkWriterExtensions
WriteBoolean	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteBoolean(this NetworkWriter writer, bool value) => writer.WriteBy/;"	m	class:Mirror.NetworkWriterExtensions
WriteByte	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteByte(this NetworkWriter writer, byte value) => writer.WriteByte(/;"	m	class:Mirror.NetworkWriterExtensions
WriteByte	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public void WriteByte(byte value)$/;"	m	class:Mirror.NetworkWriter
WriteBytes	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public void WriteBytes(byte[] buffer, int offset, int count)$/;"	m	class:Mirror.NetworkWriter
WriteBytesAndSize	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteBytesAndSize(this NetworkWriter writer, byte[] buffer)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteBytesAndSize	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteBytesAndSize(this NetworkWriter writer, byte[] buffer, int offse/;"	m	class:Mirror.NetworkWriterExtensions
WriteBytesAndSizeSegment	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteBytesAndSizeSegment(this NetworkWriter writer, ArraySegment<byte/;"	m	class:Mirror.NetworkWriterExtensions
WriteCallHookMethod	Assets/Mirror/Editor/Weaver/Processors/SyncVarProcessor.cs	/^        static void WriteCallHookMethod(ILProcessor worker, MethodDefinition hookMethod, Variabl/;"	m	class:Mirror.Weaver.SyncVarProcessor	file:
WriteCallHookMethodUsingArgument	Assets/Mirror/Editor/Weaver/Processors/SyncVarProcessor.cs	/^        public static void WriteCallHookMethodUsingArgument(ILProcessor worker, MethodDefinition/;"	m	class:Mirror.Weaver.SyncVarProcessor
WriteCallHookMethodUsingField	Assets/Mirror/Editor/Weaver/Processors/SyncVarProcessor.cs	/^        public static void WriteCallHookMethodUsingField(ILProcessor worker, MethodDefinition ho/;"	m	class:Mirror.Weaver.SyncVarProcessor
WriteChar	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteChar(this NetworkWriter writer, char value) => writer.WriteUInt1/;"	m	class:Mirror.NetworkWriterExtensions
WriteClientActiveCheck	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public static void WriteClientActiveCheck(ILProcessor worker, string mdName, Instruction/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor
WriteColor	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteColor(this NetworkWriter writer, Color value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteColor32	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteColor32(this NetworkWriter writer, Color32 value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteCreateWriter	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public static void WriteCreateWriter(ILProcessor worker)$/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor
WriteDecimal	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteDecimal(this NetworkWriter writer, decimal value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteDouble	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteDouble(this NetworkWriter writer, double value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteGameObject	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteGameObject(this NetworkWriter writer, GameObject value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteGuid	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteGuid(this NetworkWriter writer, Guid value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteHeader	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^        static int WriteHeader(byte[] buffer, int startOffset, int msgLength, bool setMask)$/;"	m	class:Mirror.SimpleWeb.SendLoop	file:
WriteInt16	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteInt16(this NetworkWriter writer, short value) => writer.WriteUIn/;"	m	class:Mirror.NetworkWriterExtensions
WriteInt32	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteInt32(this NetworkWriter writer, int value) => writer.WriteUInt3/;"	m	class:Mirror.NetworkWriterExtensions
WriteInt64	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteInt64(this NetworkWriter writer, long value) => writer.WriteUInt/;"	m	class:Mirror.NetworkWriterExtensions
WriteList	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteList<T>(this NetworkWriter writer, List<T> list)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteMask	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^            public int WriteMask(byte[] buffer, int offset)$/;"	m	class:Mirror.SimpleWeb.SendLoop.MaskHelper
WriteMatrix4x4	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteMatrix4x4(this NetworkWriter writer, Matrix4x4 value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteNetworkBehaviour	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteNetworkBehaviour(this NetworkWriter writer, NetworkBehaviour val/;"	m	class:Mirror.NetworkWriterExtensions
WriteNetworkIdentity	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteNetworkIdentity(this NetworkWriter writer, NetworkIdentity value/;"	m	class:Mirror.NetworkWriterExtensions
WriteNullCheck	Assets/Mirror/Editor/Weaver/Writers.cs	/^        static void WriteNullCheck(ILProcessor worker)$/;"	m	class:Mirror.Weaver.Writers	file:
WriteParameters	Assets/Mirror/Components/NetworkAnimator.cs	/^        bool WriteParameters(NetworkWriter writer, bool forceAll = false)$/;"	m	class:Mirror.NetworkAnimator	file:
WritePlane	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WritePlane(this NetworkWriter writer, Plane value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteQuaternion	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteQuaternion(this NetworkWriter writer, Quaternion value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteRay	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteRay(this NetworkWriter writer, Ray value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteRect	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteRect(this NetworkWriter writer, Rect value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteRecycleWriter	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public static void WriteRecycleWriter(ILProcessor worker)$/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor
WriteSByte	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteSByte(this NetworkWriter writer, sbyte value) => writer.WriteByt/;"	m	class:Mirror.NetworkWriterExtensions
WriteServerActiveCheck	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public static void WriteServerActiveCheck(ILProcessor worker, string mdName, Instruction/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor
WriteSetupLocals	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        public static void WriteSetupLocals(ILProcessor worker)$/;"	m	class:Mirror.Weaver.NetworkBehaviourProcessor
WriteSingle	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteSingle(this NetworkWriter writer, float value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteString	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteString(this NetworkWriter writer, string value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteTransform	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteTransform(this NetworkWriter writer, Transform value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteUInt16	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteUInt16(this NetworkWriter writer, ushort value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteUInt32	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteUInt32(this NetworkWriter writer, uint value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteUInt64	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteUInt64(this NetworkWriter writer, ulong value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteUri	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteUri(this NetworkWriter writer, Uri uri)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteVector2	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteVector2(this NetworkWriter writer, Vector2 value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteVector2Int	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteVector2Int(this NetworkWriter writer, Vector2Int value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteVector3	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteVector3(this NetworkWriter writer, Vector3 value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteVector3Int	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteVector3Int(this NetworkWriter writer, Vector3Int value)$/;"	m	class:Mirror.NetworkWriterExtensions
WriteVector4	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static void WriteVector4(this NetworkWriter writer, Vector4 value)$/;"	m	class:Mirror.NetworkWriterExtensions
Writer	Assets/Mirror/Runtime/NetworkWriter.cs	/^    public static class Writer<T>$/;"	c	namespace:Mirror
Writers	Assets/Mirror/Editor/Weaver/Writers.cs	/^    public static class Writers$/;"	c	namespace:Mirror.Weaver
XY_FOR_2D	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^            XY_FOR_2D$/;"	e	enum:Mirror.SpatialHashingInterestManagement.CheckMethod	file:
XZ_FOR_3D	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^            XZ_FOR_3D,$/;"	e	enum:Mirror.SpatialHashingInterestManagement.CheckMethod	file:
Zone	Assets/Mirror/Examples/AdditiveScenes/Scripts/AdditiveNetworkManager.cs	/^        public GameObject Zone;$/;"	f	class:Mirror.Examples.Additive.AdditiveNetworkManager
ZoneHandler	Assets/Mirror/Examples/AdditiveScenes/Scripts/ZoneHandler.cs	/^    public class ZoneHandler : MonoBehaviour$/;"	c	namespace:Mirror.Examples.Additive
_NetworkBehaviours	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        NetworkBehaviour[] _NetworkBehaviours;$/;"	f	class:Mirror.NetworkIdentity	file:
_UPnPDescription	Assets/Project/Scripts/Networking/MyNetworkManager.cs	/^    private string _UPnPDescription = "Mapping created by Slap";$/;"	f	class:MyNetworkManager	file:
_UPnPPort	Assets/Project/Scripts/Networking/MyNetworkManager.cs	/^    private int _UPnPPort = 7777;$/;"	f	class:MyNetworkManager	file:
_allPlayersReady	Assets/Mirror/Components/NetworkRoomManager.cs	/^        [SerializeField] bool _allPlayersReady;$/;"	f	class:Mirror.NetworkRoomManager	file:
_canvas	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    private Transform _canvas;$/;"	f	class:LobbyPlayer	file:
_centerPosition	Assets/Project/Scripts/Joystick/Joystick.cs	/^    protected Vector2 _centerPosition;$/;"	f	class:Joystick
_connectionToClient	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        NetworkConnectionToClient _connectionToClient;$/;"	f	class:Mirror.NetworkIdentity	file:
_current	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        internal int _current = 0;$/;"	f	class:Mirror.SimpleWeb.BufferBucket	file:
_direction	Assets/Project/Scripts/Joystick/Joystick.cs	/^    protected Vector2 _direction;$/;"	f	class:Joystick
_idCounter	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        int _idCounter = 0;$/;"	f	class:Mirror.SimpleWeb.WebSocketServer	file:
_lobby	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    private Transform _lobby;$/;"	f	class:LobbyPlayer	file:
_lobbyManager	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    private LobbyManager _lobbyManager;$/;"	f	class:LobbyPlayer	file:
_lobbyPlayers	Assets/Project/Scripts/UI/LobbyPlayer.cs	/^    private Transform _lobbyPlayers;$/;"	f	class:LobbyPlayer	file:
_logLevels	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        [SerializeField] Log.Levels _logLevels = Log.Levels.none;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport	file:
_modelRigidbody	Assets/Project/Scripts/Player/PlayerMovement.cs	/^    private Rigidbody _modelRigidbody;$/;"	f	class:PlayerMovement	file:
_movementDirection	Assets/Project/Scripts/Player/PlayerMovement.cs	/^    private Vector3 _movementDirection;$/;"	f	class:PlayerMovement	file:
_movementJoystick	Assets/Project/Scripts/Player/PlayerMovement.cs	/^    private Joystick _movementJoystick;$/;"	f	class:PlayerMovement	file:
_offset	Assets/Mirror/Runtime/NetworkTime.cs	/^        static ExponentialMovingAverage _offset = new ExponentialMovingAverage(10);$/;"	f	class:Mirror.NetworkTime	file:
_onServerListUpdated	Assets/Mirror/Cloud/ApiConnector.cs	/^        [SerializeField] ServerListEvent _onServerListUpdated = new ServerListEvent();$/;"	f	class:Mirror.Cloud.ApiConnector	file:
_onServerListUpdated	Assets/Mirror/Cloud/ListServer/ListServerClientApi.cs	/^        readonly ServerListEvent _onServerListUpdated;$/;"	f	class:Mirror.Cloud.ListServerService.ListServerClientApi	file:
_pingCoroutine	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        Coroutine _pingCoroutine;$/;"	f	class:Mirror.Cloud.ListServerService.ListServerServerApi	file:
_pointerCurrentPosition	Assets/Project/Scripts/Joystick/Joystick.cs	/^    protected Vector2 _pointerCurrentPosition;$/;"	f	class:Joystick
_rtt	Assets/Mirror/Runtime/NetworkTime.cs	/^        static ExponentialMovingAverage _rtt = new ExponentialMovingAverage(10);$/;"	f	class:Mirror.NetworkTime	file:
acceptClient	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerSslHelper.cs	/^        bool acceptClient(object sender, X509Certificate certificate, X509Chain chain, SslPolicy/;"	m	class:Mirror.SimpleWeb.ServerSslHelper	file:
acceptLoop	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        void acceptLoop()$/;"	m	class:Mirror.SimpleWeb.WebSocketServer	file:
acceptThread	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        Thread acceptThread;$/;"	f	class:Mirror.SimpleWeb.WebSocketServer	file:
acklist	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal readonly List<AckItem> acklist = new List<AckItem>(16);$/;"	f	class:kcp2k.Kcp	file:
active	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static bool active => connectState == ConnectState.Connecting ||$/;"	f	class:Mirror.NetworkClient
active	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static bool active { get; internal set; }$/;"	p	class:Mirror.NetworkServer
activeTransport	Assets/Mirror/Runtime/Transport/Transport.cs	/^        public static Transport activeTransport;$/;"	f	class:Mirror.Transport
addServer	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        IEnumerator addServer(ServerJson server)$/;"	m	class:Mirror.Cloud.ListServerService.ListServerServerApi	file:
added	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        bool added;$/;"	f	class:Mirror.Cloud.ListServerService.ListServerServerApi	file:
address	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public string address;$/;"	f	struct:Mirror.Cloud.ListServerService.ServerJson
address	Assets/Mirror/Runtime/LocalConnections.cs	/^        public override string address => "localhost";$/;"	f	class:Mirror.LocalConnectionToClient
address	Assets/Mirror/Runtime/LocalConnections.cs	/^        public override string address => "localhost";$/;"	f	class:Mirror.LocalConnectionToServer
address	Assets/Mirror/Runtime/NetworkConnection.cs	/^        public abstract string address { get; }$/;"	p	class:Mirror.NetworkConnection
address	Assets/Mirror/Runtime/NetworkConnectionToClient.cs	/^        public override string address =>$/;"	f	class:Mirror.NetworkConnectionToClient
address	Assets/Mirror/Runtime/NetworkConnectionToServer.cs	/^        public override string address => "";$/;"	f	class:Mirror.NetworkConnectionToServer
addressText	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUIItem.cs	/^        [SerializeField] Text addressText = null;$/;"	f	class:Mirror.Cloud.Example.ServerListUIItem	file:
agent	Assets/Mirror/Examples/Tanks/Scripts/Tank.cs	/^        public NavMeshAgent agent;$/;"	f	class:Mirror.Examples.Tanks.Tank
allPlayersReady	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public bool allPlayersReady$/;"	p	class:Mirror.NetworkRoomManager
alpha	Assets/Mirror/Runtime/ExponentialMovingAverage.cs	/^        readonly float alpha;$/;"	f	class:Mirror.ExponentialMovingAverage	file:
angularDrag	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^            public float angularDrag;$/;"	f	class:Mirror.Experimental.NetworkRigidbody.ClientSyncState
angularDrag	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        float angularDrag;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
angularDrag	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^            public float angularDrag;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D.ClientSyncState
angularDrag	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        float angularDrag;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
angularVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^            public Vector3 angularVelocity;$/;"	f	class:Mirror.Experimental.NetworkRigidbody.ClientSyncState
angularVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        Vector3 angularVelocity;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
angularVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^            public float angularVelocity;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D.ClientSyncState
angularVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        float angularVelocity;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
angularVelocitySensitivity	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        [SerializeField] float angularVelocitySensitivity = 0.1f;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
angularVelocitySensitivity	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        [SerializeField] float angularVelocitySensitivity = 0.1f;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
animationHash	Assets/Mirror/Components/NetworkAnimator.cs	/^        int[] animationHash;$/;"	f	class:Mirror.NetworkAnimator	file:
animator	Assets/Mirror/Components/NetworkAnimator.cs	/^        public Animator animator;$/;"	f	class:Mirror.NetworkAnimator
animator	Assets/Mirror/Examples/Tanks/Scripts/Tank.cs	/^        public Animator animator;$/;"	f	class:Mirror.Examples.Tanks.Tank
animatorSpeed	Assets/Mirror/Components/NetworkAnimator.cs	/^        float animatorSpeed;$/;"	f	class:Mirror.NetworkAnimator	file:
aoi	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static InterestManagement aoi;$/;"	f	class:Mirror.NetworkServer
apiKey	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        public readonly string apiKey;$/;"	f	class:Mirror.Cloud.RequestCreator
app	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"app": "http:\/\/www.codeandweb.com\/texturepacker",$/;"	s	object:meta
array	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public readonly byte[] array;$/;"	f	class:Mirror.SimpleWeb.ArrayBuffer
arraySize	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        public readonly int arraySize;$/;"	f	class:Mirror.SimpleWeb.BufferBucket
assetId	Assets/Mirror/Runtime/ClientScene.cs	/^        public static void UnregisterSpawnHandler(Guid assetId) => NetworkClient.UnregisterSpawn/;"	f	class:Mirror.ClientScene
assetId	Assets/Mirror/Runtime/Messages.cs	/^        public Guid assetId;$/;"	f	struct:Mirror.SpawnMessage
assetId	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public Guid assetId$/;"	p	class:Mirror.NetworkIdentity
assetPath	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        public string assetPath;$/;"	f	class:ParrelSync.Project
authPassword	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^            public string authPassword;$/;"	f	struct:Mirror.Authenticators.BasicAuthenticator.AuthRequestMessage
authUsername	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^            public string authUsername;$/;"	f	struct:Mirror.Authenticators.BasicAuthenticator.AuthRequestMessage
authenticationData	Assets/Mirror/Runtime/NetworkConnection.cs	/^        public object authenticationData;$/;"	f	class:Mirror.NetworkConnection
authenticator	Assets/Mirror/Authenticators/TimeoutAuthenticator.cs	/^        public NetworkAuthenticator authenticator;$/;"	f	class:Mirror.Authenticators.TimeoutAuthenticator
authenticator	Assets/Mirror/Runtime/NetworkManager.cs	/^        public NetworkAuthenticator authenticator;$/;"	f	class:Mirror.NetworkManager
autoBuildPath	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        public string autoBuildPath;$/;"	f	class:ParrelSync.Project
autoCreatePlayer	Assets/Mirror/Runtime/NetworkManager.cs	/^        public bool autoCreatePlayer = true;$/;"	f	class:Mirror.NetworkManager
autoRefreshServerlist	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListManager.cs	/^        [SerializeField] bool autoRefreshServerlist = false;$/;"	f	class:Mirror.Cloud.Example.ServerListManager	file:
autoStartServerBuild	Assets/Mirror/Runtime/NetworkManager.cs	/^        public bool autoStartServerBuild = true;$/;"	f	class:Mirror.NetworkManager
available	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/Reward.cs	/^        public bool available = true;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.Reward
available	Assets/Mirror/Examples/Room/Scripts/Reward.cs	/^        public bool available = true;$/;"	f	class:Mirror.Examples.NetworkRoom.Reward
available	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        Transport available;$/;"	f	class:Mirror.FallbackTransport	file:
available	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        Transport available;$/;"	f	class:Mirror.MultiplexTransport	file:
background	Assets/Project/Scripts/Joystick/Joystick.cs	/^    [SerializeField] protected RectTransform background;$/;"	f	class:Joystick
ball	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/BallManager.cs	/^        GameObject ball;$/;"	f	class:Mirror.Cloud.Examples.Pong.BallManager	file:
ball	Assets/Mirror/Examples/Pong/Scripts/NetworkManagerPong.cs	/^        GameObject ball;$/;"	f	class:Mirror.Examples.Pong.NetworkManagerPong	file:
ballPrefab	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/BallManager.cs	/^        [SerializeField] GameObject ballPrefab = null;$/;"	f	class:Mirror.Cloud.Examples.Pong.BallManager	file:
baseAddress	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        public readonly string baseAddress;$/;"	f	class:Mirror.Cloud.RequestCreator
batchInterval	Assets/Mirror/Runtime/NetworkConnectionToClient.cs	/^        float batchInterval;$/;"	f	class:Mirror.NetworkConnectionToClient	file:
batchInterval	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static float batchInterval = 0;$/;"	f	class:Mirror.NetworkServer
batchSend	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^        public static volatile bool batchSend = false;$/;"	f	class:Mirror.SimpleWeb.SendLoopConfig
batchSend	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public bool batchSend = true;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
batches	Assets/Mirror/Runtime/NetworkConnectionToClient.cs	/^        Dictionary<int, Batch> batches = new Dictionary<int, Batch>();$/;"	f	class:Mirror.NetworkConnectionToClient	file:
batching	Assets/Mirror/Runtime/NetworkConnectionToClient.cs	/^        bool batching;$/;"	f	class:Mirror.NetworkConnectionToClient	file:
batching	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static bool batching = true;$/;"	f	class:Mirror.NetworkServer
behaviour	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^            public NetworkBehaviour behaviour;$/;"	f	struct:Mirror.NetworkInformationPreview.NetworkBehaviourInfo
boardScore	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        CellValue boardScore = CellValue.None;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchController	file:
bucketCount	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        readonly int bucketCount;$/;"	f	class:Mirror.SimpleWeb.BufferPool	file:
buckets	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        internal readonly BufferBucket[] buckets;$/;"	f	class:Mirror.SimpleWeb.BufferPool	file:
buffer	Assets/Mirror/Runtime/NetworkReader.cs	/^        internal ArraySegment<byte> buffer;$/;"	f	class:Mirror.NetworkReader	file:
buffer	Assets/Mirror/Runtime/NetworkWriter.cs	/^        byte[] buffer = new byte[1500];$/;"	f	class:Mirror.NetworkWriter	file:
buffer	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal byte[] buffer;$/;"	f	class:kcp2k.Kcp	file:
buffer	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/MessageProcessor.cs	/^        static byte FirstLengthByte(byte[] buffer) => (byte)(buffer[1] & 0b0111_1111);$/;"	f	class:Mirror.SimpleWeb.MessageProcessor	file:
bufferPool	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        protected readonly BufferPool bufferPool;$/;"	f	class:Mirror.SimpleWeb.SimpleWebClient
bufferPool	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^            public readonly BufferPool bufferPool;$/;"	f	struct:Mirror.SimpleWeb.ReceiveLoop.Config
bufferPool	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        readonly BufferPool bufferPool;$/;"	f	class:Mirror.SimpleWeb.ServerHandshake	file:
bufferPool	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        readonly BufferPool bufferPool;$/;"	f	class:Mirror.SimpleWeb.SimpleWebServer	file:
bufferPool	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        readonly BufferPool bufferPool;$/;"	f	class:Mirror.SimpleWeb.WebSocketServer	file:
bufferSize	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^            public readonly int bufferSize;$/;"	f	struct:Mirror.SimpleWeb.SendLoop.Config
buffers	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        readonly ConcurrentQueue<ArrayBuffer> buffers;$/;"	f	class:Mirror.SimpleWeb.BufferBucket	file:
button	Assets/Mirror/Examples/MultipleMatches/Scripts/CellGUI.cs	/^        public Button button;$/;"	f	class:Mirror.Examples.MultipleMatch.CellGUI
bytes	Assets/Mirror/Runtime/NetworkDiagnostics.cs	/^            public readonly int bytes;$/;"	f	struct:Mirror.NetworkDiagnostics.MessageInfo
bytes	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public byte[] bytes;$/;"	f	struct:Mirror.QueuedMessage
cachedMaterial	Assets/Mirror/Examples/AdditiveScenes/Scripts/RandomColor.cs	/^        Material cachedMaterial;$/;"	f	class:Mirror.Examples.Additive.RandomColor	file:
cachedMaterial	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/RandomColor.cs	/^        Material cachedMaterial;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.RandomColor	file:
cachedMaterial	Assets/Mirror/Examples/Room/Scripts/RandomColor.cs	/^        Material cachedMaterial;$/;"	f	class:Mirror.Examples.NetworkRoom.RandomColor	file:
cancelButton	Assets/Mirror/Examples/MultipleMatches/Scripts/RoomGUI.cs	/^        public GameObject cancelButton;$/;"	f	class:Mirror.Examples.MultipleMatch.RoomGUI
canvas	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchNetworkManager.cs	/^        public GameObject canvas;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchNetworkManager
canvas	Assets/Project/Scripts/Joystick/Joystick.cs	/^    [SerializeField] protected Canvas canvas;$/;"	f	class:Joystick
canvasController	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public CanvasController canvasController;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchController
canvasController	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchGUI.cs	/^        public CanvasController canvasController;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchGUI
canvasController	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchNetworkManager.cs	/^        public CanvasController canvasController;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchNetworkManager
canvasGroup	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public CanvasGroup canvasGroup;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchController
cellValue	Assets/Mirror/Examples/MultipleMatches/Scripts/CellGUI.cs	/^        public CellValue cellValue;$/;"	f	class:Mirror.Examples.MultipleMatch.CellGUI
certPassword	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerSslHelper.cs	/^        public readonly string certPassword;$/;"	f	struct:Mirror.SimpleWeb.SslConfig
certPath	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerSslHelper.cs	/^        public readonly string certPath;$/;"	f	struct:Mirror.SimpleWeb.SslConfig
certificate	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerSslHelper.cs	/^        readonly X509Certificate2 certificate;$/;"	f	class:Mirror.SimpleWeb.ServerSslHelper	file:
changes	Assets/Mirror/Runtime/SyncDictionary.cs	/^        readonly List<Change> changes = new List<Change>();$/;"	f	class:Mirror.SyncIDictionary	file:
changes	Assets/Mirror/Runtime/SyncList.cs	/^        readonly List<Change> changes = new List<Change>();$/;"	f	class:Mirror.SyncList	file:
changes	Assets/Mirror/Runtime/SyncSet.cs	/^        readonly List<Change> changes = new List<Change>();$/;"	f	class:Mirror.SyncSet	file:
changesAhead	Assets/Mirror/Runtime/SyncDictionary.cs	/^        int changesAhead;$/;"	f	class:Mirror.SyncIDictionary	file:
changesAhead	Assets/Mirror/Runtime/SyncList.cs	/^        int changesAhead;$/;"	f	class:Mirror.SyncList	file:
changesAhead	Assets/Mirror/Runtime/SyncSet.cs	/^        int changesAhead;$/;"	f	class:Mirror.SyncSet	file:
channel	Assets/Mirror/Runtime/Attributes.cs	/^        public int channel = Channels.Reliable;$/;"	f	class:Mirror.ClientRpcAttribute
channel	Assets/Mirror/Runtime/Attributes.cs	/^        public int channel = Channels.Reliable;$/;"	f	class:Mirror.CommandAttribute
channel	Assets/Mirror/Runtime/Attributes.cs	/^        public int channel = Channels.Reliable;$/;"	f	class:Mirror.TargetRpcAttribute
channel	Assets/Mirror/Runtime/NetworkDiagnostics.cs	/^            public readonly int channel;$/;"	f	struct:Mirror.NetworkDiagnostics.MessageInfo
characterController	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        public CharacterController characterController;$/;"	f	class:Mirror.Examples.Additive.PlayerController
characterController	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        public CharacterController characterController;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController
characterController	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        public CharacterController characterController;$/;"	f	class:Mirror.Examples.NetworkRoom.PlayerController
chatHistory	Assets/Mirror/Examples/Chat/Scripts/ChatWindow.cs	/^        public Text chatHistory;$/;"	f	class:Mirror.Examples.Chat.ChatWindow
chatMessage	Assets/Mirror/Examples/Chat/Scripts/ChatWindow.cs	/^        public InputField chatMessage;$/;"	f	class:Mirror.Examples.Chat.ChatWindow
chatWindow	Assets/Mirror/Examples/Chat/Scripts/ChatNetworkManager.cs	/^        public ChatWindow chatWindow;$/;"	f	class:Mirror.Examples.Chat.ChatNetworkManager
checkMethod	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^        public CheckMethod checkMethod = CheckMethod.XZ_FOR_3D;$/;"	f	class:Mirror.SpatialHashingInterestManagement
clearAngularVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        [SerializeField] bool clearAngularVelocity = false;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
clearAngularVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        [SerializeField] bool clearAngularVelocity = false;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
clearVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        [SerializeField] bool clearVelocity = false;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
clearVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        [SerializeField] bool clearVelocity = false;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
client	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        KcpClient client;$/;"	f	class:kcp2k.KcpTransport	file:
client	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^        public TcpClient client;$/;"	f	class:Mirror.SimpleWeb.Connection
client	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        SimpleWebClient client;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport	file:
client	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/ConnectionState.cs	/^        public TcpClient client;$/;"	f	class:Telepathy.ConnectionState
client	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        Telepathy.Client client;$/;"	f	class:Mirror.TelepathyTransport	file:
clientAuthority	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^        [SerializeField] bool clientAuthority = false;$/;"	f	class:Mirror.Experimental.NetworkLerpRigidbody	file:
clientAuthority	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        [SerializeField] bool clientAuthority = false;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
clientAuthority	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        [SerializeField] bool clientAuthority = false;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
clientAuthority	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public bool clientAuthority;$/;"	f	class:Mirror.Experimental.NetworkTransformBase
clientAuthority	Assets/Mirror/Components/NetworkAnimator.cs	/^        public bool clientAuthority;$/;"	f	class:Mirror.NetworkAnimator
clientAuthority	Assets/Mirror/Components/NetworkTransformBase.cs	/^        public bool clientAuthority;$/;"	f	class:Mirror.NetworkTransformBase
clientAuthorityBeforeTeleport	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        bool clientAuthorityBeforeTeleport;$/;"	f	class:Mirror.Experimental.NetworkTransformBase	file:
clientAuthorityBeforeTeleport	Assets/Mirror/Components/NetworkTransformBase.cs	/^        bool clientAuthorityBeforeTeleport;$/;"	f	class:Mirror.NetworkTransformBase	file:
clientAuthorityCallback	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public static event ClientAuthorityCallback clientAuthorityCallback;$/;"	E	class:Mirror.NetworkIdentity
clientIndex	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public int clientIndex;$/;"	f	class:Mirror.NetworkRoomManager
clientIndex	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^        int clientIndex;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.MultiSceneNetManager	file:
clientLoadedScene	Assets/Mirror/Runtime/NetworkManager.cs	/^        public bool clientLoadedScene;$/;"	f	class:Mirror.NetworkManager
clientMatchIndex	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerScore.cs	/^        public int clientMatchIndex = -1;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerScore
clientMatchOperation	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        public ClientMatchOperation clientMatchOperation;$/;"	f	struct:Mirror.Examples.MultipleMatch.ClientMatchMessage
clientMaxMessageSize	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public int clientMaxMessageSize = 16 * 1024;$/;"	f	class:Mirror.TelepathyTransport
clientMaxMessagesPerTick	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public int clientMaxMessagesPerTick = 1000;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
clientMaxReceivesPerTick	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public int clientMaxReceivesPerTick = 1000;$/;"	f	class:Mirror.TelepathyTransport
clientOwnedObjects	Assets/Mirror/Runtime/NetworkConnection.cs	/^        public readonly HashSet<NetworkIdentity> clientOwnedObjects = new HashSet<NetworkIdentit/;"	f	class:Mirror.NetworkConnection
clientReadyConnection	Assets/Mirror/Runtime/NetworkManager.cs	/^        static NetworkConnection clientReadyConnection;$/;"	f	class:Mirror.NetworkManager	file:
clientReceiveQueueLimit	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public int clientReceiveQueueLimit = 10000;$/;"	f	class:Mirror.TelepathyTransport
clientRpcInvocationFuncs	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        readonly List<MethodDefinition> clientRpcInvocationFuncs = new List<MethodDefinition>();$/;"	f	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
clientRpcs	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        readonly List<ClientRpcResult> clientRpcs = new List<ClientRpcResult>();$/;"	f	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
clientSceneOperation	Assets/Mirror/Runtime/NetworkManager.cs	/^        SceneOperation clientSceneOperation = SceneOperation.Normal;$/;"	f	class:Mirror.NetworkManager	file:
clientSendQueueLimit	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public int clientSendQueueLimit = 10000;$/;"	f	class:Mirror.TelepathyTransport
clientStarted	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        bool clientStarted;$/;"	f	class:Mirror.NetworkIdentity	file:
clientTime	Assets/Mirror/Runtime/Messages.cs	/^        public double clientTime;$/;"	f	struct:Mirror.NetworkPingMessage
clientTime	Assets/Mirror/Runtime/Messages.cs	/^        public double clientTime;$/;"	f	struct:Mirror.NetworkPongMessage
clientUdpClient	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        protected UdpClient clientUdpClient;$/;"	f	class:Mirror.Discovery.NetworkDiscoveryBase
clientUseWss	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public bool clientUseWss;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
clients	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        readonly ConcurrentDictionary<int, ConnectionState> clients = new ConcurrentDictionary<i/;"	f	class:Telepathy.Server	file:
clonesScrollPos	Assets/ParrelSync/ParrelSync/Editor/ClonesManagerWindow.cs	/^        Vector2 clonesScrollPos;$/;"	f	class:ParrelSync.ClonesManagerWindow	file:
cmd	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        internal uint cmd;      \/\/ command, e.g. Kcp.CMD_ACK etc.$/;"	f	class:kcp2k.Segment	file:
cmdHandlerDelegates	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        static readonly Dictionary<int, Invoker> cmdHandlerDelegates = new Dictionary<int, Invok/;"	f	class:Mirror.RemoteCalls.RemoteCallHelper	file:
cmdRequiresAuthority	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        public bool cmdRequiresAuthority;$/;"	f	class:Mirror.RemoteCalls.Invoker
code	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^            public byte code;$/;"	f	struct:Mirror.Authenticators.BasicAuthenticator.AuthResponseMessage
code	Assets/Mirror/Cloud/Core/JsonStructs.cs	/^        public string code;$/;"	f	struct:Mirror.Cloud.ErrorJson
collection	Assets/Mirror/Examples/Cloud/GUI/Scripts/QuickListServerDebug.cs	/^        ServerCollectionJson? collection;$/;"	f	class:Mirror.Cloud.Example.QuickListServerDebug	file:
color	Assets/Mirror/Components/NetworkPingDisplay.cs	/^        public Color color = Color.white;$/;"	f	class:Mirror.NetworkPingDisplay
color	Assets/Mirror/Examples/AdditiveScenes/Scripts/RandomColor.cs	/^        public Color32 color = Color.black;$/;"	f	class:Mirror.Examples.Additive.RandomColor
color	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/RandomColor.cs	/^        public Color32 color = Color.black;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.RandomColor
color	Assets/Mirror/Examples/Room/Scripts/RandomColor.cs	/^        public Color32 color = Color.black;$/;"	f	class:Mirror.Examples.NetworkRoom.RandomColor
com.unity.collab-proxy	Packages/manifest.json	/^    "com.unity.collab-proxy": "1.3.9",$/;"	s	object:dependencies
com.unity.collab-proxy	Packages/packages-lock.json	/^    "com.unity.collab-proxy": {$/;"	o	object:dependencies
com.unity.ext.nunit	Packages/packages-lock.json	/^        "com.unity.ext.nunit": "1.0.6",$/;"	s	object:dependencies.com.unity.test-framework.dependencies
com.unity.ext.nunit	Packages/packages-lock.json	/^    "com.unity.ext.nunit": {$/;"	o	object:dependencies
com.unity.ide.rider	Packages/manifest.json	/^    "com.unity.ide.rider": "2.0.7",$/;"	s	object:dependencies
com.unity.ide.rider	Packages/packages-lock.json	/^    "com.unity.ide.rider": {$/;"	o	object:dependencies
com.unity.ide.visualstudio	Packages/manifest.json	/^    "com.unity.ide.visualstudio": "2.0.7",$/;"	s	object:dependencies
com.unity.ide.visualstudio	Packages/packages-lock.json	/^    "com.unity.ide.visualstudio": {$/;"	o	object:dependencies
com.unity.ide.vscode	Packages/manifest.json	/^    "com.unity.ide.vscode": "1.2.3",$/;"	s	object:dependencies
com.unity.ide.vscode	Packages/packages-lock.json	/^    "com.unity.ide.vscode": {$/;"	o	object:dependencies
com.unity.modules.ai	Packages/manifest.json	/^    "com.unity.modules.ai": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.ai	Packages/packages-lock.json	/^    "com.unity.modules.ai": {$/;"	o	object:dependencies
com.unity.modules.androidjni	Packages/manifest.json	/^    "com.unity.modules.androidjni": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.androidjni	Packages/packages-lock.json	/^    "com.unity.modules.androidjni": {$/;"	o	object:dependencies
com.unity.modules.animation	Packages/manifest.json	/^    "com.unity.modules.animation": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.animation	Packages/packages-lock.json	/^        "com.unity.modules.animation": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.director.dependencies
com.unity.modules.animation	Packages/packages-lock.json	/^        "com.unity.modules.animation": "1.0.0",$/;"	s	object:dependencies.com.unity.timeline.dependencies
com.unity.modules.animation	Packages/packages-lock.json	/^    "com.unity.modules.animation": {$/;"	o	object:dependencies
com.unity.modules.assetbundle	Packages/manifest.json	/^    "com.unity.modules.assetbundle": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.assetbundle	Packages/packages-lock.json	/^        "com.unity.modules.assetbundle": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.unitywebrequestassetbundle.dependencies
com.unity.modules.assetbundle	Packages/packages-lock.json	/^        "com.unity.modules.assetbundle": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.unitywebrequestwww.dependencies
com.unity.modules.assetbundle	Packages/packages-lock.json	/^    "com.unity.modules.assetbundle": {$/;"	o	object:dependencies
com.unity.modules.audio	Packages/manifest.json	/^    "com.unity.modules.audio": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.audio	Packages/packages-lock.json	/^        "com.unity.modules.audio": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.unitywebrequestaudio.dependencies
com.unity.modules.audio	Packages/packages-lock.json	/^        "com.unity.modules.audio": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.director.dependencies
com.unity.modules.audio	Packages/packages-lock.json	/^        "com.unity.modules.audio": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.unitywebrequestwww.dependencies
com.unity.modules.audio	Packages/packages-lock.json	/^        "com.unity.modules.audio": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.video.dependencies
com.unity.modules.audio	Packages/packages-lock.json	/^        "com.unity.modules.audio": "1.0.0",$/;"	s	object:dependencies.com.unity.timeline.dependencies
com.unity.modules.audio	Packages/packages-lock.json	/^    "com.unity.modules.audio": {$/;"	o	object:dependencies
com.unity.modules.cloth	Packages/manifest.json	/^    "com.unity.modules.cloth": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.cloth	Packages/packages-lock.json	/^    "com.unity.modules.cloth": {$/;"	o	object:dependencies
com.unity.modules.director	Packages/manifest.json	/^    "com.unity.modules.director": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.director	Packages/packages-lock.json	/^        "com.unity.modules.director": "1.0.0",$/;"	s	object:dependencies.com.unity.timeline.dependencies
com.unity.modules.director	Packages/packages-lock.json	/^    "com.unity.modules.director": {$/;"	o	object:dependencies
com.unity.modules.imageconversion	Packages/manifest.json	/^    "com.unity.modules.imageconversion": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.imageconversion	Packages/packages-lock.json	/^        "com.unity.modules.imageconversion": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.screencapture.dependencies
com.unity.modules.imageconversion	Packages/packages-lock.json	/^        "com.unity.modules.imageconversion": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.unitywebrequesttexture.dependencies
com.unity.modules.imageconversion	Packages/packages-lock.json	/^        "com.unity.modules.imageconversion": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.unitywebrequestwww.dependencies
com.unity.modules.imageconversion	Packages/packages-lock.json	/^    "com.unity.modules.imageconversion": {$/;"	o	object:dependencies
com.unity.modules.imgui	Packages/manifest.json	/^    "com.unity.modules.imgui": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.imgui	Packages/packages-lock.json	/^        "com.unity.modules.imgui": "1.0.0"$/;"	s	object:dependencies.com.unity.ugui.dependencies
com.unity.modules.imgui	Packages/packages-lock.json	/^        "com.unity.modules.imgui": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.uielements.dependencies
com.unity.modules.imgui	Packages/packages-lock.json	/^        "com.unity.modules.imgui": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.uielementsnative.dependencies
com.unity.modules.imgui	Packages/packages-lock.json	/^        "com.unity.modules.imgui": "1.0.0",$/;"	s	object:dependencies.com.unity.test-framework.dependencies
com.unity.modules.imgui	Packages/packages-lock.json	/^    "com.unity.modules.imgui": {$/;"	o	object:dependencies
com.unity.modules.jsonserialize	Packages/manifest.json	/^    "com.unity.modules.jsonserialize": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.jsonserialize	Packages/packages-lock.json	/^        "com.unity.modules.jsonserialize": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.subsystems.dependencies
com.unity.modules.jsonserialize	Packages/packages-lock.json	/^        "com.unity.modules.jsonserialize": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.uielementsnative.dependencies
com.unity.modules.jsonserialize	Packages/packages-lock.json	/^        "com.unity.modules.jsonserialize": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.unityanalytics.dependencies
com.unity.modules.jsonserialize	Packages/packages-lock.json	/^        "com.unity.modules.jsonserialize": "1.0.0"$/;"	s	object:dependencies.com.unity.test-framework.dependencies
com.unity.modules.jsonserialize	Packages/packages-lock.json	/^        "com.unity.modules.jsonserialize": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.uielements.dependencies
com.unity.modules.jsonserialize	Packages/packages-lock.json	/^        "com.unity.modules.jsonserialize": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.vr.dependencies
com.unity.modules.jsonserialize	Packages/packages-lock.json	/^        "com.unity.modules.jsonserialize": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.xr.dependencies
com.unity.modules.jsonserialize	Packages/packages-lock.json	/^    "com.unity.modules.jsonserialize": {$/;"	o	object:dependencies
com.unity.modules.particlesystem	Packages/manifest.json	/^    "com.unity.modules.particlesystem": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.particlesystem	Packages/packages-lock.json	/^        "com.unity.modules.particlesystem": "1.0.0"$/;"	s	object:dependencies.com.unity.timeline.dependencies
com.unity.modules.particlesystem	Packages/packages-lock.json	/^    "com.unity.modules.particlesystem": {$/;"	o	object:dependencies
com.unity.modules.physics	Packages/manifest.json	/^    "com.unity.modules.physics": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.physics	Packages/packages-lock.json	/^        "com.unity.modules.physics": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.cloth.dependencies
com.unity.modules.physics	Packages/packages-lock.json	/^        "com.unity.modules.physics": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.vehicles.dependencies
com.unity.modules.physics	Packages/packages-lock.json	/^        "com.unity.modules.physics": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.terrainphysics.dependencies
com.unity.modules.physics	Packages/packages-lock.json	/^        "com.unity.modules.physics": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.vr.dependencies
com.unity.modules.physics	Packages/packages-lock.json	/^        "com.unity.modules.physics": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.xr.dependencies
com.unity.modules.physics	Packages/packages-lock.json	/^    "com.unity.modules.physics": {$/;"	o	object:dependencies
com.unity.modules.physics2d	Packages/manifest.json	/^    "com.unity.modules.physics2d": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.physics2d	Packages/packages-lock.json	/^        "com.unity.modules.physics2d": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.tilemap.dependencies
com.unity.modules.physics2d	Packages/packages-lock.json	/^    "com.unity.modules.physics2d": {$/;"	o	object:dependencies
com.unity.modules.screencapture	Packages/manifest.json	/^    "com.unity.modules.screencapture": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.screencapture	Packages/packages-lock.json	/^    "com.unity.modules.screencapture": {$/;"	o	object:dependencies
com.unity.modules.subsystems	Packages/packages-lock.json	/^        "com.unity.modules.subsystems": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.xr.dependencies
com.unity.modules.subsystems	Packages/packages-lock.json	/^    "com.unity.modules.subsystems": {$/;"	o	object:dependencies
com.unity.modules.terrain	Packages/manifest.json	/^    "com.unity.modules.terrain": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.terrain	Packages/packages-lock.json	/^        "com.unity.modules.terrain": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.terrainphysics.dependencies
com.unity.modules.terrain	Packages/packages-lock.json	/^    "com.unity.modules.terrain": {$/;"	o	object:dependencies
com.unity.modules.terrainphysics	Packages/manifest.json	/^    "com.unity.modules.terrainphysics": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.terrainphysics	Packages/packages-lock.json	/^    "com.unity.modules.terrainphysics": {$/;"	o	object:dependencies
com.unity.modules.tilemap	Packages/manifest.json	/^    "com.unity.modules.tilemap": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.tilemap	Packages/packages-lock.json	/^    "com.unity.modules.tilemap": {$/;"	o	object:dependencies
com.unity.modules.ui	Packages/manifest.json	/^    "com.unity.modules.ui": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.ui	Packages/packages-lock.json	/^        "com.unity.modules.ui": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.uielements.dependencies
com.unity.modules.ui	Packages/packages-lock.json	/^        "com.unity.modules.ui": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.uielementsnative.dependencies
com.unity.modules.ui	Packages/packages-lock.json	/^        "com.unity.modules.ui": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.video.dependencies
com.unity.modules.ui	Packages/packages-lock.json	/^        "com.unity.modules.ui": "1.0.0",$/;"	s	object:dependencies.com.unity.ugui.dependencies
com.unity.modules.ui	Packages/packages-lock.json	/^    "com.unity.modules.ui": {$/;"	o	object:dependencies
com.unity.modules.uielements	Packages/manifest.json	/^    "com.unity.modules.uielements": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.uielements	Packages/packages-lock.json	/^    "com.unity.modules.uielements": {$/;"	o	object:dependencies
com.unity.modules.uielementsnative	Packages/packages-lock.json	/^        "com.unity.modules.uielementsnative": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.uielements.dependencies
com.unity.modules.uielementsnative	Packages/packages-lock.json	/^    "com.unity.modules.uielementsnative": {$/;"	o	object:dependencies
com.unity.modules.umbra	Packages/manifest.json	/^    "com.unity.modules.umbra": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.umbra	Packages/packages-lock.json	/^    "com.unity.modules.umbra": {$/;"	o	object:dependencies
com.unity.modules.unityanalytics	Packages/manifest.json	/^    "com.unity.modules.unityanalytics": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.unityanalytics	Packages/packages-lock.json	/^    "com.unity.modules.unityanalytics": {$/;"	o	object:dependencies
com.unity.modules.unitywebrequest	Packages/manifest.json	/^    "com.unity.modules.unitywebrequest": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.unitywebrequest	Packages/packages-lock.json	/^        "com.unity.modules.unitywebrequest": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.unitywebrequestassetbundle.dependencies
com.unity.modules.unitywebrequest	Packages/packages-lock.json	/^        "com.unity.modules.unitywebrequest": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.video.dependencies
com.unity.modules.unitywebrequest	Packages/packages-lock.json	/^        "com.unity.modules.unitywebrequest": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.unityanalytics.dependencies
com.unity.modules.unitywebrequest	Packages/packages-lock.json	/^        "com.unity.modules.unitywebrequest": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.unitywebrequestaudio.dependencies
com.unity.modules.unitywebrequest	Packages/packages-lock.json	/^        "com.unity.modules.unitywebrequest": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.unitywebrequesttexture.dependencies
com.unity.modules.unitywebrequest	Packages/packages-lock.json	/^        "com.unity.modules.unitywebrequest": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.unitywebrequestwww.dependencies
com.unity.modules.unitywebrequest	Packages/packages-lock.json	/^    "com.unity.modules.unitywebrequest": {$/;"	o	object:dependencies
com.unity.modules.unitywebrequestassetbundle	Packages/manifest.json	/^    "com.unity.modules.unitywebrequestassetbundle": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.unitywebrequestassetbundle	Packages/packages-lock.json	/^        "com.unity.modules.unitywebrequestassetbundle": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.unitywebrequestwww.dependencies
com.unity.modules.unitywebrequestassetbundle	Packages/packages-lock.json	/^    "com.unity.modules.unitywebrequestassetbundle": {$/;"	o	object:dependencies
com.unity.modules.unitywebrequestaudio	Packages/manifest.json	/^    "com.unity.modules.unitywebrequestaudio": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.unitywebrequestaudio	Packages/packages-lock.json	/^        "com.unity.modules.unitywebrequestaudio": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.unitywebrequestwww.dependencies
com.unity.modules.unitywebrequestaudio	Packages/packages-lock.json	/^    "com.unity.modules.unitywebrequestaudio": {$/;"	o	object:dependencies
com.unity.modules.unitywebrequesttexture	Packages/manifest.json	/^    "com.unity.modules.unitywebrequesttexture": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.unitywebrequesttexture	Packages/packages-lock.json	/^    "com.unity.modules.unitywebrequesttexture": {$/;"	o	object:dependencies
com.unity.modules.unitywebrequestwww	Packages/manifest.json	/^    "com.unity.modules.unitywebrequestwww": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.unitywebrequestwww	Packages/packages-lock.json	/^    "com.unity.modules.unitywebrequestwww": {$/;"	o	object:dependencies
com.unity.modules.vehicles	Packages/manifest.json	/^    "com.unity.modules.vehicles": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.vehicles	Packages/packages-lock.json	/^    "com.unity.modules.vehicles": {$/;"	o	object:dependencies
com.unity.modules.video	Packages/manifest.json	/^    "com.unity.modules.video": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.video	Packages/packages-lock.json	/^    "com.unity.modules.video": {$/;"	o	object:dependencies
com.unity.modules.vr	Packages/manifest.json	/^    "com.unity.modules.vr": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.vr	Packages/packages-lock.json	/^    "com.unity.modules.vr": {$/;"	o	object:dependencies
com.unity.modules.wind	Packages/manifest.json	/^    "com.unity.modules.wind": "1.0.0",$/;"	s	object:dependencies
com.unity.modules.wind	Packages/packages-lock.json	/^    "com.unity.modules.wind": {$/;"	o	object:dependencies
com.unity.modules.xr	Packages/manifest.json	/^    "com.unity.modules.xr": "1.0.0"$/;"	s	object:dependencies
com.unity.modules.xr	Packages/packages-lock.json	/^        "com.unity.modules.xr": "1.0.0"$/;"	s	object:dependencies.com.unity.modules.vr.dependencies
com.unity.modules.xr	Packages/packages-lock.json	/^    "com.unity.modules.xr": {$/;"	o	object:dependencies
com.unity.test-framework	Packages/manifest.json	/^    "com.unity.test-framework": "1.1.24",$/;"	s	object:dependencies
com.unity.test-framework	Packages/packages-lock.json	/^        "com.unity.test-framework": "1.1.1"$/;"	s	object:dependencies.com.unity.ide.rider.dependencies
com.unity.test-framework	Packages/packages-lock.json	/^        "com.unity.test-framework": "1.1.9"$/;"	s	object:dependencies.com.unity.ide.visualstudio.dependencies
com.unity.test-framework	Packages/packages-lock.json	/^    "com.unity.test-framework": {$/;"	o	object:dependencies
com.unity.textmeshpro	Packages/manifest.json	/^    "com.unity.textmeshpro": "3.0.4",$/;"	s	object:dependencies
com.unity.textmeshpro	Packages/packages-lock.json	/^    "com.unity.textmeshpro": {$/;"	o	object:dependencies
com.unity.timeline	Packages/manifest.json	/^    "com.unity.timeline": "1.4.7",$/;"	s	object:dependencies
com.unity.timeline	Packages/packages-lock.json	/^    "com.unity.timeline": {$/;"	o	object:dependencies
com.unity.ugui	Packages/manifest.json	/^    "com.unity.ugui": "1.0.0",$/;"	s	object:dependencies
com.unity.ugui	Packages/packages-lock.json	/^        "com.unity.ugui": "1.0.0"$/;"	s	object:dependencies.com.unity.textmeshpro.dependencies
com.unity.ugui	Packages/packages-lock.json	/^    "com.unity.ugui": {$/;"	o	object:dependencies
commandInvocationFuncs	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        readonly List<MethodDefinition> commandInvocationFuncs = new List<MethodDefinition>();$/;"	f	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
commands	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        readonly List<CmdResult> commands = new List<CmdResult>();$/;"	f	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
comparer	Assets/Mirror/Runtime/SyncList.cs	/^        readonly IEqualityComparer<T> comparer;$/;"	f	class:Mirror.SyncList	file:
componentIndex	Assets/Mirror/Runtime/Messages.cs	/^        public int componentIndex;$/;"	f	struct:Mirror.CommandMessage
componentIndex	Assets/Mirror/Runtime/Messages.cs	/^        public int componentIndex;$/;"	f	struct:Mirror.RpcMessage
componentIndex	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^            public byte componentIndex;$/;"	f	struct:Mirror.NetworkBehaviour.NetworkBehaviourSyncVar
componentName	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^            public GUIStyle componentName = new GUIStyle(EditorStyles.boldLabel);$/;"	f	class:Mirror.NetworkInformationPreview.Styles
compressRotation	Assets/Mirror/Components/NetworkTransformBase.cs	/^        public bool compressRotation; \/\/ disabled by default to not break 2D projects$/;"	f	class:Mirror.NetworkTransformBase
config	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerSslHelper.cs	/^        readonly SslConfig config;$/;"	f	class:Mirror.SimpleWeb.ServerSslHelper	file:
conn	Assets/Mirror/Components/NetworkRoomManager.cs	/^            public NetworkConnection conn;$/;"	f	struct:Mirror.NetworkRoomManager.PendingPlayer
conn	Assets/Mirror/Runtime/ClientScene.cs	/^        public static bool Ready(NetworkConnection conn) => NetworkClient.Ready(conn);$/;"	f	class:Mirror.ClientScene
conn	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static bool Ready(NetworkConnection conn) => Ready();$/;"	f	class:Mirror.NetworkClient
conn	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/WebSocketClientStandAlone.cs	/^        Connection conn;$/;"	f	class:Mirror.SimpleWeb.WebSocketClientStandAlone	file:
conn	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^            public readonly Connection conn;$/;"	f	struct:Mirror.SimpleWeb.ReceiveLoop.Config
conn	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^            public readonly Connection conn;$/;"	f	struct:Mirror.SimpleWeb.SendLoop.Config
connId	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^        public int connId = IdNotSet;$/;"	f	class:Mirror.SimpleWeb.Connection
connId	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Message.cs	/^        public readonly int connId;$/;"	f	struct:Mirror.SimpleWeb.Message
connectState	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static ConnectState connectState = ConnectState.None;$/;"	f	class:Mirror.NetworkClient	file:
connected	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^        public bool connected;$/;"	f	class:kcp2k.KcpClient
connectedEventPending	Assets/Mirror/Runtime/LocalConnections.cs	/^        bool connectedEventPending;$/;"	f	class:Mirror.LocalConnectionToServer	file:
connection	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static NetworkConnection connection { get; internal set; }$/;"	p	class:Mirror.NetworkClient
connection	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^        public KcpClientConnection connection;$/;"	f	class:kcp2k.KcpClient
connectionCount	Assets/Mirror/Examples/Cloud/GUI/Scripts/NetworkManagerListServer.cs	/^        int connectionCount => NetworkServer.connections.Count;$/;"	f	class:Mirror.Cloud.Example.NetworkManagerListServer	file:
connectionId	Assets/Mirror/Runtime/NetworkConnection.cs	/^        public readonly int connectionId;$/;"	f	class:Mirror.NetworkConnection
connectionId	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public int connectionId;$/;"	f	struct:Mirror.QueuedMessage
connectionId	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^            public int connectionId;$/;"	f	struct:Telepathy.MagnificentReceivePipe.Entry
connectionToClient	Assets/Mirror/Runtime/LocalConnections.cs	/^        internal LocalConnectionToClient connectionToClient;$/;"	f	class:Mirror.LocalConnectionToServer	file:
connectionToClient	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public NetworkConnection connectionToClient => netIdentity.connectionToClient;$/;"	f	class:Mirror.NetworkBehaviour
connectionToClient	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public NetworkConnectionToClient connectionToClient$/;"	p	class:Mirror.NetworkIdentity
connectionToServer	Assets/Mirror/Runtime/LocalConnections.cs	/^        internal LocalConnectionToServer connectionToServer;$/;"	f	class:Mirror.LocalConnectionToClient	file:
connectionToServer	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public NetworkConnection connectionToServer => netIdentity.connectionToServer;$/;"	f	class:Mirror.NetworkBehaviour
connectionToServer	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public NetworkConnection connectionToServer { get; internal set; }$/;"	p	class:Mirror.NetworkIdentity
connections	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static Dictionary<int, NetworkConnectionToClient> connections =$/;"	f	class:Mirror.NetworkServer
connections	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        public Dictionary<int, KcpServerConnection> connections = new Dictionary<int, KcpServerC/;"	f	class:kcp2k.KcpServer
connections	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        readonly ConcurrentDictionary<int, Connection> connections = new ConcurrentDictionary<in/;"	f	class:Mirror.SimpleWeb.WebSocketServer	file:
connectionsToRemove	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        HashSet<int> connectionsToRemove = new HashSet<int>();$/;"	f	class:kcp2k.KcpServer	file:
connector	Assets/Mirror/Examples/Cloud/GUI/Scripts/ApiUpdater.cs	/^        [SerializeField] ApiConnector connector;$/;"	f	class:Mirror.Cloud.Example.ApiUpdater	file:
connector	Assets/Mirror/Examples/Cloud/GUI/Scripts/QuickListServerDebug.cs	/^        ApiConnector connector;$/;"	f	class:Mirror.Cloud.Example.QuickListServerDebug	file:
connector	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListManager.cs	/^        ApiConnector connector;$/;"	f	class:Mirror.Cloud.Example.ServerListManager	file:
conv	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        readonly uint conv;          \/\/ conversation$/;"	f	class:kcp2k.Kcp	file:
conv	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        internal uint conv;     \/\/ conversation$/;"	f	class:kcp2k.Segment	file:
count	Assets/Mirror/Runtime/NetworkDiagnostics.cs	/^            public readonly int count;$/;"	f	struct:Mirror.NetworkDiagnostics.MessageInfo
count	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        internal int count;$/;"	f	class:Mirror.SimpleWeb.ArrayBuffer	file:
counter	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        int counter;$/;"	f	class:Telepathy.Server	file:
createButton	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public Button createButton;$/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController
current	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint current;       \/\/ current time (milliseconds). set by Update.$/;"	f	class:kcp2k.Kcp	file:
currentAssembly	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        static AssemblyDefinition currentAssembly;$/;"	f	class:Mirror.Weaver.WeaverTypes	file:
currentMatch	Assets/Mirror/Components/NetworkMatchChecker.cs	/^        Guid currentMatch = Guid.Empty;$/;"	f	class:Mirror.NetworkMatchChecker	file:
currentMatchDebug	Assets/Mirror/Components/NetworkMatchChecker.cs	/^        public string currentMatchDebug;$/;"	f	class:Mirror.NetworkMatchChecker
currentPlayer	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public NetworkIdentity currentPlayer;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchController
currentScene	Assets/Mirror/Components/NetworkSceneChecker.cs	/^        Scene currentScene;$/;"	f	class:Mirror.NetworkSceneChecker	file:
currentScore	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        public CellValue currentScore;$/;"	f	struct:Mirror.Examples.MultipleMatch.MatchPlayerData
currentServer	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        ServerJson currentServer;$/;"	f	class:Mirror.Cloud.ListServerService.ListServerServerApi	file:
customAddress	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public string customAddress;$/;"	f	struct:Mirror.Cloud.ListServerService.ServerJson
customData	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public KeyValue[] customData;$/;"	f	struct:Mirror.Cloud.ListServerService.PartialServerJson
customData	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public KeyValue[] customData;$/;"	f	struct:Mirror.Cloud.ListServerService.ServerJson
customHandling	Assets/Mirror/Runtime/Messages.cs	/^        public bool customHandling;$/;"	f	struct:Mirror.SceneMessage
cwnd	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint cwnd;          \/\/ congestion window$/;"	f	class:kcp2k.Kcp	file:
data	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        internal MemoryStream data = new MemoryStream();$/;"	f	class:kcp2k.Segment	file:
data	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Message.cs	/^        public readonly ArrayBuffer data;$/;"	f	struct:Mirror.SimpleWeb.Message
data	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^            public ArraySegment<byte> data;$/;"	f	struct:Telepathy.MagnificentReceivePipe.Entry
dead_link	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint dead_link;$/;"	f	class:kcp2k.Kcp	file:
debugLog	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public bool debugLog;$/;"	f	class:kcp2k.KcpTransport
decimalValue	Assets/Mirror/Runtime/Utils.cs	/^        public decimal decimalValue;$/;"	f	struct:Mirror.UIntDecimal
defaultDependencyTypeInfo	ProjectSettings/SceneTemplateSettings.json	/^    "defaultDependencyTypeInfo": {$/;"	o
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.0
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.1
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.11
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.12
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.13
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.14
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.15
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.16
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.19
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.2
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.20
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.21
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.3
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.5
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.6
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.7
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.8
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 0,$/;"	n	object:dependencyTypeInfos.9
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 1,$/;"	n	object:dependencyTypeInfos.10
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 1,$/;"	n	object:dependencyTypeInfos.17
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 1,$/;"	n	object:dependencyTypeInfos.18
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^            "defaultInstantiationMode": 1,$/;"	n	object:dependencyTypeInfos.4
defaultInstantiationMode	ProjectSettings/SceneTemplateSettings.json	/^        "defaultInstantiationMode": 1,$/;"	n	object:defaultDependencyTypeInfo
defaultValue	Assets/ParrelSync/ParrelSync/Editor/Preferences.cs	/^        public bool defaultValue { get; private set; }$/;"	p	class:ParrelSync.BoolPreference
dependencies	Assets/ParrelSync/ParrelSync/package.json	/^    "dependencies": {}$/;"	o
dependencies	Packages/manifest.json	/^  "dependencies": {$/;"	o
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.ide.rider
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.ide.visualstudio
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.cloth
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.director
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.screencapture
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.subsystems
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.terrainphysics
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.tilemap
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.uielements
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.uielementsnative
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.unityanalytics
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.unitywebrequestassetbundle
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.unitywebrequestaudio
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.unitywebrequesttexture
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.unitywebrequestwww
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.vehicles
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.video
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.vr
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.modules.xr
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.test-framework
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.textmeshpro
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.timeline
dependencies	Packages/packages-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.com.unity.ugui
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.ai
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.androidjni
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.animation
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.assetbundle
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.audio
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.imageconversion
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.imgui
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.jsonserialize
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.particlesystem
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.physics
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.physics2d
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.terrain
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.ui
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.umbra
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.unitywebrequest
dependencies	Packages/packages-lock.json	/^      "dependencies": {}$/;"	o	object:dependencies.com.unity.modules.wind
dependencies	Packages/packages-lock.json	/^      "dependencies": {},$/;"	o	object:dependencies.com.unity.collab-proxy
dependencies	Packages/packages-lock.json	/^      "dependencies": {},$/;"	o	object:dependencies.com.unity.ext.nunit
dependencies	Packages/packages-lock.json	/^      "dependencies": {},$/;"	o	object:dependencies.com.unity.ide.vscode
dependencies	Packages/packages-lock.json	/^  "dependencies": {$/;"	o
dependencyTypeInfos	ProjectSettings/SceneTemplateSettings.json	/^    "dependencyTypeInfos": [$/;"	a
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.collab-proxy
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.ide.rider
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.ide.visualstudio
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.ide.vscode
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.ai
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.androidjni
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.animation
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.assetbundle
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.audio
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.cloth
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.director
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.imageconversion
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.imgui
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.jsonserialize
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.particlesystem
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.physics
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.physics2d
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.screencapture
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.terrain
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.terrainphysics
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.tilemap
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.ui
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.uielements
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.umbra
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.unityanalytics
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.unitywebrequest
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.unitywebrequestassetbundle
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.unitywebrequestaudio
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.unitywebrequesttexture
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.unitywebrequestwww
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.vehicles
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.video
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.vr
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.wind
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.modules.xr
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.test-framework
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.textmeshpro
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.timeline
depth	Packages/packages-lock.json	/^      "depth": 0,$/;"	n	object:dependencies.com.unity.ugui
depth	Packages/packages-lock.json	/^      "depth": 1,$/;"	n	object:dependencies.com.unity.ext.nunit
depth	Packages/packages-lock.json	/^      "depth": 1,$/;"	n	object:dependencies.com.unity.modules.subsystems
depth	Packages/packages-lock.json	/^      "depth": 1,$/;"	n	object:dependencies.com.unity.modules.uielementsnative
description	Assets/ParrelSync/ParrelSync/package.json	/^    "description": "ParrelSync is a Unity editor extension that allows users to test multiplayer/;"	s
destination	Assets/Mirror/Examples/Benchmark/Scripts/MonsterMovement.cs	/^        Vector3 destination;$/;"	f	class:Mirror.Examples.Benchmark.MonsterMovement	file:
destroyAfter	Assets/Mirror/Examples/Tanks/Scripts/Projectile.cs	/^        public float destroyAfter = 5;$/;"	f	class:Mirror.Examples.Tanks.Projectile
destroyCalled	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        internal bool destroyCalled;$/;"	f	class:Mirror.NetworkIdentity	file:
disabledName	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^            public GUIStyle disabledName = new GUIStyle(EditorStyles.miniLabel);$/;"	f	class:Mirror.NetworkInformationPreview.Styles
disconnectInactiveConnections	Assets/Mirror/Runtime/NetworkManager.cs	/^        public bool disconnectInactiveConnections;$/;"	f	class:Mirror.NetworkManager
disconnectInactiveConnections	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static bool disconnectInactiveConnections;$/;"	f	class:Mirror.NetworkServer
disconnectInactiveTimeout	Assets/Mirror/Runtime/NetworkManager.cs	/^        public float disconnectInactiveTimeout = 60f;$/;"	f	class:Mirror.NetworkManager
disconnectInactiveTimeout	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static float disconnectInactiveTimeout = 60;$/;"	f	class:Mirror.NetworkServer
disconnectedEventPending	Assets/Mirror/Runtime/LocalConnections.cs	/^        bool disconnectedEventPending;$/;"	f	class:Mirror.LocalConnectionToServer	file:
discoveredServers	Assets/Mirror/Components/Discovery/NetworkDiscoveryHUD.cs	/^        readonly Dictionary<long, ServerResponse> discoveredServers = new Dictionary<long, Serve/;"	f	class:Mirror.Discovery.NetworkDiscoveryHUD	file:
displayName	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public string displayName;$/;"	f	struct:Mirror.Cloud.ListServerService.PartialServerJson
displayName	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public string displayName;$/;"	f	struct:Mirror.Cloud.ListServerService.ServerJson
displayName	Assets/ParrelSync/ParrelSync/package.json	/^    "displayName": "ParrelSync",$/;"	s
disposedLock	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^        readonly object disposedLock = new object();$/;"	f	class:Mirror.SimpleWeb.Connection	file:
dontDestroyOnLoad	Assets/Mirror/Runtime/NetworkManager.cs	/^        public bool dontDestroyOnLoad = true;$/;"	f	class:Mirror.NetworkManager
dontListen	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static bool dontListen;$/;"	f	class:Mirror.NetworkServer
doubleValue	Assets/Mirror/Runtime/Utils.cs	/^        public double doubleValue;$/;"	f	struct:Mirror.UIntDouble
drag	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^            public float drag;$/;"	f	class:Mirror.Experimental.NetworkRigidbody.ClientSyncState
drag	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        float drag;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
drag	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^            public float drag;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D.ClientSyncState
drag	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        float drag;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
enableActiveDiscovery	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        public bool enableActiveDiscovery = true;$/;"	f	class:Mirror.Discovery.NetworkDiscoveryBase
enabled	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerSslHelper.cs	/^        public readonly bool enabled;$/;"	f	struct:Mirror.SimpleWeb.SslConfig
enabledCheck	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        Func<bool> enabledCheck;$/;"	f	class:Mirror.TelepathyTransport	file:
encoding	Assets/Mirror/Runtime/NetworkReader.cs	/^        static readonly UTF8Encoding encoding = new UTF8Encoding(false, true);$/;"	f	class:Mirror.NetworkReaderExtensions	file:
encoding	Assets/Mirror/Runtime/NetworkWriter.cs	/^        static readonly UTF8Encoding encoding = new UTF8Encoding(false, true);$/;"	f	class:Mirror.NetworkWriterExtensions	file:
endOfHandshake	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Constants.cs	/^        public static readonly byte[] endOfHandshake = new byte[4] { (byte)'\\r', (byte)'\\n', (/;"	f	class:Mirror.SimpleWeb.Constants
error	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^            error = 1,$/;"	e	enum:Mirror.SimpleWeb.Log.Levels	file:
eventType	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^            public EventType eventType;$/;"	f	struct:Telepathy.MagnificentReceivePipe.Entry
exception	Assets/Mirror/Runtime/NetworkClient.cs	/^        static void OnError(Exception exception) => Debug.LogException(exception);$/;"	f	class:Mirror.NetworkClient	file:
exception	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Message.cs	/^        public readonly Exception exception;$/;"	f	struct:Mirror.SimpleWeb.Message
excludeOwnerUpdate	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public bool excludeOwnerUpdate = true;$/;"	f	class:Mirror.Experimental.NetworkTransformBase
exitButton	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public Button exitButton;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchController
expectMask	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^            public readonly bool expectMask;$/;"	f	struct:Mirror.SimpleWeb.ReceiveLoop.Config
fastack	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        internal uint fastack;$/;"	f	class:kcp2k.Segment	file:
fastlimit	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal int fastlimit;$/;"	f	class:kcp2k.Kcp	file:
fastresend	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal int fastresend;$/;"	f	class:kcp2k.Kcp	file:
field	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^            public readonly FieldInfo field;$/;"	f	class:Mirror.SyncListDrawer.SyncListField
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "1f600.png",$/;"	s	object:frames.4
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "1f601.png",$/;"	s	object:frames.5
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "1f602.png",$/;"	s	object:frames.6
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "1f603.png",$/;"	s	object:frames.7
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "1f604.png",$/;"	s	object:frames.8
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "1f605.png",$/;"	s	object:frames.9
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "1f606.png",$/;"	s	object:frames.10
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "1f609.png",$/;"	s	object:frames.11
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "1f60a.png",$/;"	s	object:frames.0
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "1f60b.png",$/;"	s	object:frames.1
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "1f60d.png",$/;"	s	object:frames.2
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "1f60e.png",$/;"	s	object:frames.3
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "1f618.png",$/;"	s	object:frames.12
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "1f923.png",$/;"	s	object:frames.13
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "2639.png",$/;"	s	object:frames.15
filename	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"filename": "263a.png",$/;"	s	object:frames.14
finally	Assets/Mirror/Runtime/MessagePacking.cs	/^            finally$/;"	p	struct:Mirror.MessagePacking.C
finishStartHostPending	Assets/Mirror/Runtime/NetworkManager.cs	/^        bool finishStartHostPending;$/;"	f	class:Mirror.NetworkManager	file:
floatValue	Assets/Mirror/Runtime/Utils.cs	/^        public float floatValue;$/;"	f	struct:Mirror.UIntFloat
force	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PhysicsCollision.cs	/^        public float force = 12;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PhysicsCollision
force	Assets/Mirror/Examples/RigidbodyPhysics/Scripts/AddForce.cs	/^        public float force = 500f;$/;"	f	class:Mirror.Examples.RigidbodyPhysics.AddForce
force	Assets/Mirror/Examples/Tanks/Scripts/Projectile.cs	/^        public float force = 1000;$/;"	f	class:Mirror.Examples.Tanks.Projectile
forceHidden	Assets/Mirror/Components/NetworkProximityChecker.cs	/^        public bool forceHidden$/;"	p	class:Mirror.NetworkProximityChecker
forceHidden	Assets/Mirror/Components/NetworkSceneChecker.cs	/^        public bool forceHidden;$/;"	f	class:Mirror.NetworkSceneChecker
format	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"format": "RGBA8888",$/;"	s	object:meta
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.0
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":128,"w":128,"h":128},$/;"	o	object:frames.4
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":256,"w":128,"h":128},$/;"	o	object:frames.8
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":384,"w":128,"h":128},$/;"	o	object:frames.12
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":0,"w":128,"h":128},$/;"	o	object:frames.1
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":128,"w":128,"h":128},$/;"	o	object:frames.5
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":256,"w":128,"h":128},$/;"	o	object:frames.9
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":384,"w":128,"h":128},$/;"	o	object:frames.13
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":0,"w":128,"h":128},$/;"	o	object:frames.2
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":128,"w":128,"h":128},$/;"	o	object:frames.6
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":256,"w":128,"h":128},$/;"	o	object:frames.10
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":384,"w":128,"h":128},$/;"	o	object:frames.14
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":0,"w":128,"h":128},$/;"	o	object:frames.3
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":128,"w":128,"h":128},$/;"	o	object:frames.7
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":256,"w":128,"h":128},$/;"	o	object:frames.11
frame	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":384,"w":128,"h":128},$/;"	o	object:frames.15
frames	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^{"frames": [$/;"	a
frg	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        internal uint frg;      \/\/ fragment$/;"	f	class:kcp2k.Segment	file:
functionHash	Assets/Mirror/Runtime/Messages.cs	/^        public int functionHash;$/;"	f	struct:Mirror.CommandMessage
functionHash	Assets/Mirror/Runtime/Messages.cs	/^        public int functionHash;$/;"	f	struct:Mirror.RpcMessage
gameName	Assets/Mirror/Examples/Cloud/GUI/Scripts/ApiUpdater.cs	/^        public string gameName = "Game";$/;"	f	class:Mirror.Cloud.Example.ApiUpdater
gamePlayerPrefab	Assets/Project/Scripts/Networking/MyNetworkManager.cs	/^    [SerializeField] private GameObject gamePlayerPrefab;$/;"	f	class:MyNetworkManager	file:
gameScene	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^        public string gameScene;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.MultiSceneNetManager
gameText	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public Text gameText;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchController
getServerList	Assets/Mirror/Cloud/ListServer/ListServerClientApi.cs	/^        IEnumerator getServerList()$/;"	m	class:Mirror.Cloud.ListServerService.ListServerClientApi	file:
getServerListRepeatCoroutine	Assets/Mirror/Cloud/ListServer/ListServerClientApi.cs	/^        Coroutine getServerListRepeatCoroutine;$/;"	f	class:Mirror.Cloud.ListServerService.ListServerClientApi	file:
getSyncVarGameObjectReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference getSyncVarGameObjectReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
getSyncVarHookGuard	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference getSyncVarHookGuard;$/;"	f	class:Mirror.Weaver.WeaverTypes
getSyncVarHookGuard	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected bool getSyncVarHookGuard(ulong dirtyBit)$/;"	m	class:Mirror.NetworkBehaviour
getSyncVarNetworkBehaviourReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference getSyncVarNetworkBehaviourReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
getSyncVarNetworkIdentityReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference getSyncVarNetworkIdentityReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
getTypeFromHandleReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference getTypeFromHandleReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
goal	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public DataPoint goal = new DataPoint();$/;"	f	class:Mirror.Experimental.NetworkTransformBase
goal	Assets/Mirror/Components/NetworkTransformBase.cs	/^        DataPoint goal;$/;"	f	class:Mirror.NetworkTransformBase	file:
gravityScale	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^            public float gravityScale;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D.ClientSyncState
gravityScale	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        float gravityScale;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
grid	Assets/Mirror/Components/InterestManagement/SpatialHashing/Grid2D.cs	/^        Dictionary<Vector2Int, HashSet<T>> grid = new Dictionary<Vector2Int, HashSet<T>>();$/;"	f	class:Mirror.Grid2D	file:
grid	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^        Grid2D<NetworkConnection> grid = new Grid2D<NetworkConnection>();$/;"	f	class:Mirror.SpatialHashingInterestManagement	file:
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.0.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":128,"w":128,"h":128},$/;"	n	object:frames.4.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":256,"w":128,"h":128},$/;"	n	object:frames.8.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":384,"w":128,"h":128},$/;"	n	object:frames.12.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":0,"w":128,"h":128},$/;"	n	object:frames.1.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":128,"w":128,"h":128},$/;"	n	object:frames.5.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":256,"w":128,"h":128},$/;"	n	object:frames.9.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":384,"w":128,"h":128},$/;"	n	object:frames.13.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":0,"w":128,"h":128},$/;"	n	object:frames.2.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":128,"w":128,"h":128},$/;"	n	object:frames.6.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":256,"w":128,"h":128},$/;"	n	object:frames.10.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":384,"w":128,"h":128},$/;"	n	object:frames.14.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":0,"w":128,"h":128},$/;"	n	object:frames.3.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":128,"w":128,"h":128},$/;"	n	object:frames.7.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":256,"w":128,"h":128},$/;"	n	object:frames.11.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":384,"w":128,"h":128},$/;"	n	object:frames.15.frame
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"size": {"w":512,"h":512},$/;"	n	object:meta.size
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.0.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.1.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.10.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.11.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.12.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.13.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.14.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.15.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.2.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.3.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.4.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.5.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.6.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.7.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.8.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.9.sourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.0.spriteSourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.1.spriteSourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.10.spriteSourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.11.spriteSourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.12.spriteSourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.13.spriteSourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.14.spriteSourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.15.spriteSourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.2.spriteSourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.3.spriteSourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.4.spriteSourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.5.spriteSourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.6.spriteSourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.7.spriteSourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.8.spriteSourceSize
h	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.9.spriteSourceSize
hadAuthority	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        bool hadAuthority;$/;"	f	class:Mirror.NetworkIdentity	file:
handShake	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        readonly ServerHandshake handShake;$/;"	f	class:Mirror.SimpleWeb.WebSocketServer	file:
handle	Assets/Project/Scripts/Joystick/Joystick.cs	/^    [SerializeField] protected RectTransform handle;$/;"	f	class:Joystick
handlerWrapped	Assets/Mirror/Runtime/NetworkClient.cs	/^            Action<NetworkConnection, T> handlerWrapped = (_, value) => { handler(value); };$/;"	f	struct:Mirror.NetworkClient.NetworkMessage
handlers	Assets/Mirror/Runtime/NetworkClient.cs	/^            handlers[msgType] = MessagePacking.WrapHandler(handler, requireAuthentication);$/;"	f	struct:Mirror.NetworkClient.NetworkMessage
handlers	Assets/Mirror/Runtime/NetworkClient.cs	/^            handlers[msgType] = MessagePacking.WrapHandler(handlerWrapped, requireAuthentication/;"	f	struct:Mirror.NetworkClient.NetworkMessage
handlers	Assets/Mirror/Runtime/NetworkClient.cs	/^        static readonly Dictionary<int, NetworkMessageDelegate> handlers =$/;"	f	class:Mirror.NetworkClient	file:
handlers	Assets/Mirror/Runtime/NetworkServer.cs	/^            handlers[msgType] = MessagePacking.WrapHandler(handler, requireAuthentication);$/;"	f	struct:Mirror.NetworkServer.NetworkMessage
handlers	Assets/Mirror/Runtime/NetworkServer.cs	/^        static Dictionary<int, NetworkMessageDelegate> handlers =$/;"	f	class:Mirror.NetworkServer	file:
handlers.Remove	Assets/Mirror/Runtime/NetworkServer.cs	/^            handlers.Remove(msgType);$/;"	m	struct:Mirror.NetworkServer.NetworkMessage
handshake	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/WebSocketClientStandAlone.cs	/^        readonly ClientHandshake handshake;$/;"	f	class:Mirror.SimpleWeb.WebSocketClientStandAlone	file:
handshakeMaxSize	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public int handshakeMaxSize = 3000;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
hasAuthority	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public bool hasAuthority => netIdentity.hasAuthority;$/;"	f	class:Mirror.NetworkBehaviour
hasAuthority	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public bool hasAuthority { get; internal set; }$/;"	p	class:Mirror.NetworkIdentity
hasDisposed	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^        volatile bool hasDisposed;$/;"	f	class:Mirror.SimpleWeb.Connection	file:
hasSpawned	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        [SerializeField, HideInInspector] bool hasSpawned;$/;"	f	class:Mirror.NetworkIdentity	file:
height	Assets/Mirror/Components/GUIConsole.cs	/^        public int height = 150;$/;"	f	class:Mirror.GUIConsole
height	Assets/Mirror/Components/NetworkPingDisplay.cs	/^        int height = 25;$/;"	f	class:Mirror.NetworkPingDisplay	file:
hook	Assets/Mirror/Runtime/Attributes.cs	/^        public string hook;$/;"	f	class:Mirror.SyncVarAttribute
horizontal	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        public float horizontal;$/;"	f	class:Mirror.Examples.Additive.PlayerController
horizontal	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        public float horizontal;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController
horizontal	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        public float horizontal;$/;"	f	class:Mirror.Examples.NetworkRoom.PlayerController
hotKey	Assets/Mirror/Components/GUIConsole.cs	/^        public KeyCode hotKey = KeyCode.F12;$/;"	f	class:Mirror.GUIConsole
id	Assets/Mirror/Cloud/Core/JsonStructs.cs	/^        public string id;$/;"	f	struct:Mirror.Cloud.CreatedIdJson
identity	Assets/Mirror/Runtime/NetworkConnection.cs	/^        public NetworkIdentity identity { get; internal set; }$/;"	p	class:Mirror.NetworkConnection
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.0
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.1
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.11
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.12
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.13
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.14
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.15
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.16
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.19
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.2
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.20
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.21
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.3
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.5
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.6
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.7
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.8
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": false,$/;"	b	object:dependencyTypeInfos.9
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": true,$/;"	b	object:dependencyTypeInfos.10
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": true,$/;"	b	object:dependencyTypeInfos.17
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": true,$/;"	b	object:dependencyTypeInfos.18
ignore	ProjectSettings/SceneTemplateSettings.json	/^            "ignore": true,$/;"	b	object:dependencyTypeInfos.4
ignore	ProjectSettings/SceneTemplateSettings.json	/^        "ignore": false,$/;"	b	object:defaultDependencyTypeInfo
image	Assets/Mirror/Examples/Basic/Scripts/PlayerUI.cs	/^        public Image image;$/;"	f	class:Mirror.Examples.Basic.PlayerUI
image	Assets/Mirror/Examples/MultipleMatches/Scripts/CellGUI.cs	/^        public Image image;$/;"	f	class:Mirror.Examples.MultipleMatch.CellGUI
image	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchGUI.cs	/^        public Image image;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchGUI
image	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"image": "EmojiOne.png",$/;"	s	object:meta
includeOwner	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^            public bool includeOwner;$/;"	f	struct:Mirror.Weaver.NetworkBehaviourProcessor.ClientRpcResult
includeOwner	Assets/Mirror/Runtime/Attributes.cs	/^        public bool includeOwner = true;$/;"	f	class:Mirror.ClientRpcAttribute
incr	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint incr;$/;"	f	class:kcp2k.Kcp	file:
index	Assets/Mirror/Components/NetworkRoomPlayer.cs	/^        public int index;$/;"	f	class:Mirror.NetworkRoomPlayer
index	Assets/Mirror/Examples/Room/Scripts/PlayerScore.cs	/^        public int index;$/;"	f	class:Mirror.Examples.NetworkRoom.PlayerScore
index	Assets/Mirror/Runtime/SyncList.cs	/^            int index;$/;"	f	struct:Mirror.SyncList.Enumerator
index	Assets/Mirror/Runtime/SyncList.cs	/^            internal int index;$/;"	f	struct:Mirror.SyncList.Change
index	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^        int index;$/;"	f	class:Mirror.SimpleWeb.WebSocketClientWebGl	file:
info	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^            info = 3,$/;"	e	enum:Mirror.SimpleWeb.Log.Levels	file:
initialize	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public void RebuildObservers(bool initialize) => NetworkServer.RebuildObservers(this, in/;"	f	class:Mirror.NetworkIdentity
initialized	Assets/Mirror/Runtime/ExponentialMovingAverage.cs	/^        bool initialized;$/;"	f	class:Mirror.ExponentialMovingAverage	file:
initialized	Assets/Mirror/Runtime/NetworkServer.cs	/^        static bool initialized;$/;"	f	class:Mirror.NetworkServer	file:
inner	Assets/Mirror/Runtime/Transport/MiddlewareTransport.cs	/^        public Transport inner;$/;"	f	class:Mirror.MiddlewareTransport
instances	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^        public int instances = 3;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.MultiSceneNetManager
instances	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^        static readonly Dictionary<int, WebSocketClientWebGl> instances = new Dictionary<int, We/;"	f	class:Mirror.SimpleWeb.WebSocketClientWebGl	file:
intValue	Assets/Mirror/Runtime/Utils.cs	/^        public uint intValue;$/;"	f	struct:Mirror.UIntFloat
interleave	Assets/Mirror/Examples/Benchmark/Scripts/BenchmarkNetworkManager.cs	/^        public float interleave = 1;$/;"	f	class:Mirror.Examples.Benchmark.BenchmarkNetworkManager
interpolatePosition	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public bool interpolatePosition = true;$/;"	f	class:Mirror.Experimental.NetworkTransformBase
interpolateRotation	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public bool interpolateRotation = true;$/;"	f	class:Mirror.Experimental.NetworkTransformBase
interpolateScale	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public bool interpolateScale = true;$/;"	f	class:Mirror.Experimental.NetworkTransformBase
interpolateScale	Assets/Mirror/Components/NetworkTransformBase.cs	/^        public bool interpolateScale = true;$/;"	f	class:Mirror.NetworkTransformBase
interval	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint interval;$/;"	f	class:kcp2k.Kcp	file:
invokeClass	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        public Type invokeClass;$/;"	f	class:Mirror.RemoteCalls.Invoker
invokeFunction	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        public CmdDelegate invokeFunction;$/;"	f	class:Mirror.RemoteCalls.Invoker
invokeType	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        public MirrorInvokeType invokeType;$/;"	f	class:Mirror.RemoteCalls.Invoker
ipInputField	Assets/Project/Scripts/UI/MainMenuManager.cs	/^    [SerializeField] private TMP_InputField ipInputField;$/;"	f	class:MainMenuManager	file:
isAuthenticated	Assets/Mirror/Runtime/NetworkConnection.cs	/^        public bool isAuthenticated;$/;"	f	class:Mirror.NetworkConnection
isClient	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public bool isClient => netIdentity.isClient;$/;"	f	class:Mirror.NetworkBehaviour
isClient	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public bool isClient { get; internal set; }$/;"	p	class:Mirror.NetworkIdentity
isClientOnly	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public bool isClientOnly => netIdentity.isClientOnly;$/;"	f	class:Mirror.NetworkBehaviour
isClientOnly	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public bool isClientOnly => isClient && !isServer;$/;"	f	class:Mirror.NetworkIdentity
isCloneCreated	Assets/ParrelSync/ParrelSync/Editor/ClonesManagerWindow.cs	/^        public bool isCloneCreated$/;"	p	class:ParrelSync.ClonesManagerWindow
isCloneFileExistCache	Assets/ParrelSync/ParrelSync/Editor/ClonesManager.cs	/^        private static bool? isCloneFileExistCache = null;$/;"	f	class:ParrelSync.ClonesManager	file:
isConnected	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static bool isConnected => connectState == ConnectState.Connected;$/;"	f	class:Mirror.NetworkClient
isConnecting	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static bool isConnecting => connectState == ConnectState.Connecting;$/;"	f	class:Mirror.NetworkClient
isFalling	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        public bool isFalling;$/;"	f	class:Mirror.Examples.Additive.PlayerController
isFalling	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        public bool isFalling;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController
isFalling	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        public bool isFalling;$/;"	f	class:Mirror.Examples.NetworkRoom.PlayerController
isGrounded	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        public bool isGrounded = true;$/;"	f	class:Mirror.Examples.Additive.PlayerController
isGrounded	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        public bool isGrounded = true;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController
isGrounded	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        public bool isGrounded = true;$/;"	f	class:Mirror.Examples.NetworkRoom.PlayerController
isKinematic	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^            public bool isKinematic;$/;"	f	class:Mirror.Experimental.NetworkRigidbody.ClientSyncState
isKinematic	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        bool isKinematic;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
isKinematic	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^            public bool isKinematic;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D.ClientSyncState
isKinematic	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        bool isKinematic;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
isLocalClient	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static bool isLocalClient => connection is LocalConnectionToServer;$/;"	f	class:Mirror.NetworkClient
isLocalPlayer	Assets/Mirror/Runtime/Messages.cs	/^        public bool isLocalPlayer;$/;"	f	struct:Mirror.SpawnMessage
isLocalPlayer	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public bool isLocalPlayer => netIdentity.isLocalPlayer;$/;"	f	class:Mirror.NetworkBehaviour
isLocalPlayer	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public bool isLocalPlayer { get; internal set; }$/;"	p	class:Mirror.NetworkIdentity
isNetworkActive	Assets/Mirror/Runtime/NetworkManager.cs	/^        public bool isNetworkActive;$/;"	f	class:Mirror.NetworkManager
isOwner	Assets/Mirror/Runtime/Messages.cs	/^        public bool isOwner;$/;"	f	struct:Mirror.SpawnMessage
isReady	Assets/Mirror/Runtime/NetworkConnection.cs	/^        public bool isReady;$/;"	f	class:Mirror.NetworkConnection
isServer	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public bool isServer => netIdentity.isServer;$/;"	f	class:Mirror.NetworkBehaviour
isServer	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public bool isServer { get; internal set; }$/;"	p	class:Mirror.NetworkIdentity
isServerOnly	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public bool isServerOnly => netIdentity.isServerOnly;$/;"	f	class:Mirror.NetworkBehaviour
isServerOnly	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public bool isServerOnly => isServer && !isClient;$/;"	f	class:Mirror.NetworkIdentity
isSpawnFinished	Assets/Mirror/Runtime/NetworkClient.cs	/^        static bool isSpawnFinished;$/;"	f	class:Mirror.NetworkClient	file:
isValid	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^            public bool isValid => timeStamp != 0;$/;"	f	struct:Mirror.Experimental.NetworkTransformBase.DataPoint
item	Assets/Mirror/Runtime/Pool.cs	/^        public void Return(T item) => objects.Push(item);$/;"	f	class:Mirror.Pool
item	Assets/Mirror/Runtime/SyncDictionary.cs	/^            internal TValue item;$/;"	f	struct:Mirror.SyncIDictionary.Change
item	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public void Add(KeyValuePair<TKey, TValue> item) => Add(item.Key, item.Value);$/;"	f	class:Mirror.SyncIDictionary
item	Assets/Mirror/Runtime/SyncList.cs	/^            internal T item;$/;"	f	struct:Mirror.SyncList.Change
item	Assets/Mirror/Runtime/SyncList.cs	/^        public bool Contains(T item) => IndexOf(item) >= 0;$/;"	f	class:Mirror.SyncList
item	Assets/Mirror/Runtime/SyncSet.cs	/^            internal T item;$/;"	f	struct:Mirror.SyncSet.Change
item	Assets/Mirror/Runtime/SyncSet.cs	/^        public bool Contains(T item) => objects.Contains(item);$/;"	f	class:Mirror.SyncSet
item	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Pool.cs	/^        public void Return(T item) => objects.Push(item);$/;"	f	class:Telepathy.Pool
itemPrefab	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUI.cs	/^        [SerializeField] ServerListUIItem itemPrefab = null;$/;"	f	class:Mirror.Cloud.Example.ServerListUI	file:
items	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUI.cs	/^        readonly List<ServerListUIItem> items = new List<ServerListUIItem>();$/;"	f	class:Mirror.Cloud.Example.ServerListUI	file:
joinButton	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUIItem.cs	/^        [SerializeField] Button joinButton = null;$/;"	f	class:Mirror.Cloud.Example.ServerListUIItem	file:
joinButton	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public Button joinButton;$/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController
jsonString	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^            string jsonString = JsonUtility.ToJson(json);$/;"	f	struct:Mirror.Cloud.RequestCreator.ICanBeJson
jumpSpeed	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        public float jumpSpeed;$/;"	f	class:Mirror.Examples.Additive.PlayerController
jumpSpeed	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        public float jumpSpeed;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController
jumpSpeed	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        public float jumpSpeed;$/;"	f	class:Mirror.Examples.NetworkRoom.PlayerController
kcp	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        internal Kcp kcp;$/;"	f	class:kcp2k.KcpConnection	file:
kcp2k	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^namespace kcp2k$/;"	n
kcp2k	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpChannel.cs	/^namespace kcp2k$/;"	n
kcp2k	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClient.cs	/^namespace kcp2k$/;"	n
kcp2k	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClientConnection.cs	/^namespace kcp2k$/;"	n
kcp2k	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^namespace kcp2k$/;"	n
kcp2k	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpHeader.cs	/^namespace kcp2k$/;"	n
kcp2k	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^namespace kcp2k$/;"	n
kcp2k	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServerConnection.cs	/^namespace kcp2k$/;"	n
kcp2k	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/Log.cs	/^namespace kcp2k$/;"	n
kcp2k	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^namespace kcp2k$/;"	n
kcp2k	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^namespace kcp2k$/;"	n
kcp2k	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Utils.cs	/^namespace kcp2k$/;"	n
kcpMessageBuffer	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        byte[] kcpMessageBuffer = new byte[1 + ReliableMaxMessageSize];$/;"	f	class:kcp2k.KcpConnection	file:
kcpSendBuffer	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        byte[] kcpSendBuffer = new byte[1 + ReliableMaxMessageSize];$/;"	f	class:kcp2k.KcpConnection	file:
key	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public string key;$/;"	f	struct:Mirror.Cloud.ListServerService.KeyValue
key	Assets/Mirror/Runtime/SyncDictionary.cs	/^            internal TKey key;$/;"	f	struct:Mirror.SyncIDictionary.Change
key	Assets/Mirror/Runtime/SyncDictionary.cs	/^        public bool ContainsKey(TKey key) => objects.ContainsKey(key);$/;"	f	class:Mirror.SyncIDictionary
key	Assets/ParrelSync/ParrelSync/Editor/Preferences.cs	/^        public string key { get; private set; }$/;"	p	class:ParrelSync.BoolPreference
keywords	Assets/ParrelSync/ParrelSync/package.json	/^	"keywords": [ "Networking", "Utils", "Editor", "Extensions" ],$/;"	a
label	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^            public readonly string label;$/;"	f	class:Mirror.SyncListDrawer.SyncListField
labelStyle	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^            public GUIStyle labelStyle = new GUIStyle(EditorStyles.label);$/;"	f	class:Mirror.NetworkInformationPreview.Styles
largest	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        readonly int largest;$/;"	f	class:Mirror.SimpleWeb.BufferPool	file:
lastBoolParameters	Assets/Mirror/Components/NetworkAnimator.cs	/^        bool[] lastBoolParameters;$/;"	f	class:Mirror.NetworkAnimator	file:
lastClientSendTime	Assets/Mirror/Components/NetworkTransformBase.cs	/^        float lastClientSendTime;$/;"	f	class:Mirror.NetworkTransformBase	file:
lastFloatParameters	Assets/Mirror/Components/NetworkAnimator.cs	/^        float[] lastFloatParameters;$/;"	f	class:Mirror.NetworkAnimator	file:
lastIntParameters	Assets/Mirror/Components/NetworkAnimator.cs	/^        int[] lastIntParameters;$/;"	f	class:Mirror.NetworkAnimator	file:
lastMessageTime	Assets/Mirror/Runtime/NetworkConnection.cs	/^        public float lastMessageTime;$/;"	f	class:Mirror.NetworkConnection
lastPingTime	Assets/Mirror/Runtime/NetworkTime.cs	/^        static double lastPingTime;$/;"	f	class:Mirror.NetworkTime	file:
lastPingTime	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        uint lastPingTime;$/;"	f	class:kcp2k.KcpConnection	file:
lastPosition	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public Vector3 lastPosition;$/;"	f	class:Mirror.Experimental.NetworkTransformBase
lastPosition	Assets/Mirror/Components/NetworkTransformBase.cs	/^        Vector3 lastPosition;$/;"	f	class:Mirror.NetworkTransformBase	file:
lastRebuildTime	Assets/Mirror/Components/InterestManagement/Distance/DistanceInterestManagement.cs	/^        double lastRebuildTime;$/;"	f	class:Mirror.DistanceInterestManagement	file:
lastRebuildTime	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^        double lastRebuildTime;$/;"	f	class:Mirror.SpatialHashingInterestManagement	file:
lastReceiveTime	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        uint lastReceiveTime;$/;"	f	class:kcp2k.KcpConnection	file:
lastRotation	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public Quaternion lastRotation;$/;"	f	class:Mirror.Experimental.NetworkTransformBase
lastRotation	Assets/Mirror/Components/NetworkTransformBase.cs	/^        Quaternion lastRotation;$/;"	f	class:Mirror.NetworkTransformBase	file:
lastScale	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public Vector3 lastScale;$/;"	f	class:Mirror.Experimental.NetworkTransformBase
lastScale	Assets/Mirror/Components/NetworkTransformBase.cs	/^        Vector3 lastScale;$/;"	f	class:Mirror.NetworkTransformBase	file:
lastSendTime	Assets/Mirror/Runtime/NetworkConnectionToClient.cs	/^            internal double lastSendTime = NetworkTime.time;$/;"	f	class:Mirror.NetworkConnectionToClient.Batch	file:
lastSyncTime	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        internal float lastSyncTime;$/;"	f	class:Mirror.NetworkBehaviour	file:
latencySpikeMultiplier	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        [Range(0, 1)] public float latencySpikeMultiplier;$/;"	f	class:Mirror.LatencySimulation
latencySpikeSpeedMultiplier	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public float latencySpikeSpeedMultiplier = 1;$/;"	f	class:Mirror.LatencySimulation
layerWeight	Assets/Mirror/Components/NetworkAnimator.cs	/^        float[] layerWeight;$/;"	f	class:Mirror.NetworkAnimator	file:
leaveButton	Assets/Mirror/Examples/MultipleMatches/Scripts/RoomGUI.cs	/^        public GameObject leaveButton;$/;"	f	class:Mirror.Examples.MultipleMatch.RoomGUI
leftRacketSpawn	Assets/Mirror/Examples/Pong/Scripts/NetworkManagerPong.cs	/^        public Transform leftRacketSpawn;$/;"	f	class:Mirror.Examples.Pong.NetworkManagerPong
length	Assets/Mirror/Runtime/NetworkWriter.cs	/^        int length;$/;"	f	class:Mirror.NetworkWriter	file:
lerpPositionAmount	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^        [SerializeField] float lerpPositionAmount = 0.5f;$/;"	f	class:Mirror.Experimental.NetworkLerpRigidbody	file:
lerpVelocityAmount	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^        [SerializeField] float lerpVelocityAmount = 0.5f;$/;"	f	class:Mirror.Experimental.NetworkLerpRigidbody	file:
level	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^        public static Levels level = Levels.none;$/;"	f	class:Mirror.SimpleWeb.Log
libraryPath	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        public string libraryPath;$/;"	f	class:ParrelSync.Project
license	Assets/ParrelSync/ParrelSync/package.json	/^    "license": "MIT",$/;"	s
list	Assets/Mirror/Runtime/SyncList.cs	/^            readonly SyncList<T> list;$/;"	f	struct:Mirror.SyncList.Enumerator
listUI	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListManager.cs	/^        [SerializeField] ServerListUI listUI = null;$/;"	f	class:Mirror.Cloud.Example.ServerListManager	file:
listener	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        TcpListener listener;$/;"	f	class:Mirror.SimpleWeb.WebSocketServer	file:
listener	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        public TcpListener listener;$/;"	f	class:Telepathy.Server
listenerThread	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        Thread listenerThread;$/;"	f	class:Telepathy.Server	file:
loadingSceneAsync	Assets/Mirror/Runtime/NetworkManager.cs	/^        public static AsyncOperation loadingSceneAsync;$/;"	f	class:Mirror.NetworkManager
lobbyPlayerPrefab	Assets/Project/Scripts/Networking/MyNetworkManager.cs	/^    [SerializeField] private GameObject lobbyPlayerPrefab;$/;"	f	class:MyNetworkManager	file:
lobbyView	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public GameObject lobbyView;$/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController
localClientActive	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static bool localClientActive => localConnection != null;$/;"	f	class:Mirror.NetworkServer
localConnection	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static NetworkConnectionToClient localConnection { get; private set; }$/;"	p	class:Mirror.NetworkServer
localJoinedMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal Guid localJoinedMatch = Guid.Empty;$/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController	file:
localPackages	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        public string localPackages;$/;"	f	class:ParrelSync.Project
localPlayer	Assets/Mirror/Runtime/ClientScene.cs	/^        public static NetworkIdentity localPlayer$/;"	p	class:Mirror.ClientScene
localPlayer	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static NetworkIdentity localPlayer { get; internal set; }$/;"	p	class:Mirror.NetworkClient
localPlayerMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal Guid localPlayerMatch = Guid.Empty;$/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController	file:
localPosition	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^            public Vector3 localPosition;$/;"	f	struct:Mirror.Experimental.NetworkTransformBase.DataPoint
localPosition	Assets/Mirror/Components/NetworkTransformBase.cs	/^            public Vector3 localPosition;$/;"	f	class:Mirror.NetworkTransformBase.DataPoint
localPositionSensitivity	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public float localPositionSensitivity = .01f;$/;"	f	class:Mirror.Experimental.NetworkTransformBase
localPositionSensitivity	Assets/Mirror/Components/NetworkTransformBase.cs	/^        public float localPositionSensitivity = .01f;$/;"	f	class:Mirror.NetworkTransformBase
localRotation	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^            public Quaternion localRotation;$/;"	f	struct:Mirror.Experimental.NetworkTransformBase.DataPoint
localRotation	Assets/Mirror/Components/NetworkTransformBase.cs	/^            public Quaternion localRotation;$/;"	f	class:Mirror.NetworkTransformBase.DataPoint
localRotationSensitivity	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public float localRotationSensitivity = .01f;$/;"	f	class:Mirror.Experimental.NetworkTransformBase
localRotationSensitivity	Assets/Mirror/Components/NetworkTransformBase.cs	/^        public float localRotationSensitivity = .01f;$/;"	f	class:Mirror.NetworkTransformBase
localScale	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^            public Vector3 localScale;$/;"	f	struct:Mirror.Experimental.NetworkTransformBase.DataPoint
localScale	Assets/Mirror/Components/NetworkTransformBase.cs	/^            public Vector3 localScale;$/;"	f	class:Mirror.NetworkTransformBase.DataPoint
localScaleSensitivity	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public float localScaleSensitivity = .01f;$/;"	f	class:Mirror.Experimental.NetworkTransformBase
localScaleSensitivity	Assets/Mirror/Components/NetworkTransformBase.cs	/^        public float localScaleSensitivity = .01f;$/;"	f	class:Mirror.NetworkTransformBase
log	Assets/Mirror/Components/GUIConsole.cs	/^        Queue<LogEntry> log = new Queue<LogEntry>();$/;"	f	class:Mirror.GUIConsole	file:
logErrorReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference logErrorReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
logWarningReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference logWarningReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
longValue	Assets/Mirror/Runtime/Utils.cs	/^        public ulong longValue;$/;"	f	struct:Mirror.UIntDouble
longValue1	Assets/Mirror/Runtime/Utils.cs	/^        public ulong longValue1;$/;"	f	struct:Mirror.UIntDecimal
longValue2	Assets/Mirror/Runtime/Utils.cs	/^        public ulong longValue2;$/;"	f	struct:Mirror.UIntDecimal
m_AssetId	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        [SerializeField, HideInInspector] string m_AssetId;$/;"	f	class:Mirror.NetworkIdentity	file:
mainPanel	Assets/Mirror/Examples/Basic/Scripts/BasicNetManager.cs	/^        public RectTransform mainPanel;$/;"	f	class:Mirror.Examples.Basic.BasicNetManager
manager	Assets/Mirror/Examples/Cloud/GUI/Scripts/ApiUpdater.cs	/^        [SerializeField] NetworkManagerListServer manager;$/;"	f	class:Mirror.Cloud.Example.ApiUpdater	file:
manager	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/BallManager.cs	/^        NetworkManagerListServerPong manager;$/;"	f	class:Mirror.Cloud.Examples.Pong.BallManager	file:
manager	Assets/Mirror/Runtime/NetworkManagerHUD.cs	/^        NetworkManager manager;$/;"	f	class:Mirror.NetworkManagerHUD	file:
maskBuffer	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^            readonly byte[] maskBuffer;$/;"	f	class:Mirror.SimpleWeb.SendLoop.MaskHelper	file:
matchConnections	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal static readonly Dictionary<Guid, HashSet<NetworkConnection>> matchConnections =/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController	file:
matchController	Assets/Mirror/Examples/MultipleMatches/Scripts/CellGUI.cs	/^        public MatchController matchController;$/;"	f	class:Mirror.Examples.MultipleMatch.CellGUI
matchControllerPrefab	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public GameObject matchControllerPrefab;$/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController
matchId	Assets/Mirror/Components/NetworkMatchChecker.cs	/^        public Guid matchId$/;"	p	class:Mirror.NetworkMatchChecker
matchId	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchGUI.cs	/^        Guid matchId;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchGUI	file:
matchId	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        public Guid matchId;$/;"	f	struct:Mirror.Examples.MultipleMatch.ClientMatchMessage
matchId	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        public Guid matchId;$/;"	f	struct:Mirror.Examples.MultipleMatch.MatchInfo
matchId	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        public Guid matchId;$/;"	f	struct:Mirror.Examples.MultipleMatch.PlayerInfo
matchId	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        public Guid matchId;$/;"	f	struct:Mirror.Examples.MultipleMatch.ServerMatchMessage
matchIndex	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerScore.cs	/^        public int matchIndex;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerScore
matchInfos	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        public MatchInfo[] matchInfos;$/;"	f	struct:Mirror.Examples.MultipleMatch.ClientMatchMessage
matchList	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public GameObject matchList;$/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController
matchName	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchGUI.cs	/^        public Text matchName;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchGUI
matchPlayerData	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        internal readonly SyncDictionary<NetworkIdentity, MatchPlayerData> matchPlayerData = new/;"	f	class:Mirror.Examples.MultipleMatch.MatchController	file:
matchPlayers	Assets/Mirror/Components/NetworkMatchChecker.cs	/^        static readonly Dictionary<Guid, HashSet<NetworkIdentity>> matchPlayers = new Dictionary/;"	f	class:Mirror.NetworkMatchChecker	file:
matchPrefab	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public GameObject matchPrefab;$/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController
maxConnections	Assets/Mirror/Runtime/NetworkManager.cs	/^        public int maxConnections = 100;$/;"	f	class:Mirror.NetworkManager
maxConnections	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static int maxConnections;$/;"	f	class:Mirror.NetworkServer
maxHttpHeaderSize	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        readonly int maxHttpHeaderSize = 3000;$/;"	f	class:Mirror.SimpleWeb.ServerHandshake	file:
maxLogCount	Assets/Mirror/Components/GUIConsole.cs	/^        public int maxLogCount = 50;$/;"	f	class:Mirror.GUIConsole
maxMessageSize	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        protected readonly int maxMessageSize;$/;"	f	class:Mirror.SimpleWeb.SimpleWebClient
maxMessageSize	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^            public readonly int maxMessageSize;$/;"	f	struct:Mirror.SimpleWeb.ReceiveLoop.Config
maxMessageSize	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        readonly int maxMessageSize;$/;"	f	class:Mirror.SimpleWeb.WebSocketServer	file:
maxMessageSize	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public int maxMessageSize = 16 * 1024;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
maxMessagesPerTick	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        readonly int maxMessagesPerTick;$/;"	f	class:Mirror.SimpleWeb.SimpleWebClient	file:
maxMessagesPerTick	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        readonly int maxMessagesPerTick;$/;"	f	class:Mirror.SimpleWeb.SimpleWebServer	file:
maxPlayerCount	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public int maxPlayerCount;$/;"	f	struct:Mirror.Cloud.ListServerService.PartialServerJson
maxPlayerCount	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public int maxPlayerCount;$/;"	f	struct:Mirror.Cloud.ListServerService.ServerJson
maxPlayers	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        public byte maxPlayers;$/;"	f	struct:Mirror.Examples.MultipleMatch.MatchInfo
maxPlayers	Assets/Project/Scripts/Networking/MyNetworkManager.cs	/^    [SerializeField] private int maxPlayers;$/;"	f	class:MyNetworkManager	file:
maxTurnSpeed	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        public float maxTurnSpeed = 150f;$/;"	f	class:Mirror.Examples.Additive.PlayerController
maxTurnSpeed	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        public float maxTurnSpeed = 150f;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController
maxTurnSpeed	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        public float maxTurnSpeed = 150f;$/;"	f	class:Mirror.Examples.NetworkRoom.PlayerController
message	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^            public string message;$/;"	f	struct:Mirror.Authenticators.BasicAuthenticator.AuthResponseMessage
message	Assets/Mirror/Cloud/Core/JsonStructs.cs	/^        public string message;$/;"	f	struct:Mirror.Cloud.ErrorJson
message	Assets/Mirror/Components/GUIConsole.cs	/^        public string message;$/;"	f	struct:Mirror.LogEntry
message	Assets/Mirror/Runtime/MessagePacking.cs	/^            T message = default;$/;"	f	struct:Mirror.MessagePacking.C
message	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static void OnObjectDestroy(ObjectDestroyMessage message) => DestroyObject(mess/;"	f	class:Mirror.NetworkClient	file:
message	Assets/Mirror/Runtime/NetworkClient.cs	/^        static void OnObjectHide(ObjectHideMessage message) => DestroyObject(message.netId);$/;"	f	class:Mirror.NetworkClient	file:
message	Assets/Mirror/Runtime/NetworkDiagnostics.cs	/^            public readonly NetworkMessage message;$/;"	f	struct:Mirror.NetworkDiagnostics.MessageInfo
messageHandlers	Assets/Mirror/Runtime/NetworkConnection.cs	/^        Dictionary<int, NetworkMessageDelegate> messageHandlers;$/;"	f	class:Mirror.NetworkConnection	file:
messages	Assets/Mirror/Runtime/NetworkConnectionToClient.cs	/^            internal Queue<PooledNetworkWriter> messages = new Queue<PooledNetworkWriter>();$/;"	f	class:Mirror.NetworkConnectionToClient.Batch	file:
meta	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^"meta": {$/;"	o
method	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^            public MethodDefinition method;$/;"	f	struct:Mirror.Weaver.NetworkBehaviourProcessor.ClientRpcResult
method	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^            public MethodDefinition method;$/;"	f	struct:Mirror.Weaver.NetworkBehaviourProcessor.CmdResult
minPlayers	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public int minPlayers = 1;$/;"	f	class:Mirror.NetworkRoomManager
minPlayers	Assets/Project/Scripts/Networking/MyNetworkManager.cs	/^    [SerializeField] private int minPlayers;$/;"	f	class:MyNetworkManager	file:
mode	Assets/Mirror/Runtime/NetworkManager.cs	/^        public NetworkManagerMode mode { get; private set; }$/;"	p	class:Mirror.NetworkManager
model	Assets/Project/Scripts/Player/PlayerMovement.cs	/^    [SerializeField] private GameObject model;$/;"	f	class:PlayerMovement	file:
moveSpeed	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        public float moveSpeed = 8f;$/;"	f	class:Mirror.Examples.Additive.PlayerController
moveSpeed	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        public float moveSpeed = 8f;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController
moveSpeed	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        public float moveSpeed = 8f;$/;"	f	class:Mirror.Examples.NetworkRoom.PlayerController
movementDistance	Assets/Mirror/Examples/Benchmark/Scripts/MonsterMovement.cs	/^        public float movementDistance = 20;$/;"	f	class:Mirror.Examples.Benchmark.MonsterMovement
movementProbability	Assets/Mirror/Examples/Benchmark/Scripts/MonsterMovement.cs	/^        public float movementProbability = 0.5f;$/;"	f	class:Mirror.Examples.Benchmark.MonsterMovement
movementSpeed	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^            public float movementSpeed;$/;"	f	struct:Mirror.Experimental.NetworkTransformBase.DataPoint
movementSpeed	Assets/Mirror/Components/NetworkTransformBase.cs	/^            public float movementSpeed;$/;"	f	class:Mirror.NetworkTransformBase.DataPoint
movementSpeed	Assets/Project/Scripts/Player/PlayerMovement.cs	/^    [SerializeField] private float movementSpeed;$/;"	f	class:PlayerMovement	file:
moving	Assets/Mirror/Examples/Benchmark/Scripts/MonsterMovement.cs	/^        bool moving;$/;"	f	class:Mirror.Examples.Benchmark.MonsterMovement	file:
msgType	Assets/Mirror/Runtime/MessagePacking.cs	/^            int msgType = GetId<T>();$/;"	f	struct:Mirror.MessagePacking.NetworkMessage
msgType	Assets/Mirror/Runtime/NetworkClient.cs	/^            int msgType = MessagePacking.GetId<T>();$/;"	f	struct:Mirror.NetworkClient.NetworkMessage
msgType	Assets/Mirror/Runtime/NetworkServer.cs	/^            int msgType = MessagePacking.GetId<T>();$/;"	f	struct:Mirror.NetworkServer.NetworkMessage
mss	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint mss;           \/\/ maximum segment size := MTU - OVERHEAD$/;"	f	class:kcp2k.Kcp	file:
mtu	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint mtu;$/;"	f	class:kcp2k.Kcp	file:
name	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^            public GUIContent name;$/;"	f	struct:Mirror.NetworkInformationPreview.NetworkBehaviourInfo
name	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^            public GUIContent name;$/;"	f	struct:Mirror.NetworkInformationPreview.NetworkIdentityInfo
name	Assets/Mirror/Examples/Chat/Scripts/ChatNetworkManager.cs	/^            public string name;$/;"	f	struct:Mirror.Examples.Chat.ChatNetworkManager.CreatePlayerMessage
name	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        public string name;$/;"	f	class:ParrelSync.Project
name	Assets/ParrelSync/ParrelSync/package.json	/^    "name": "com.veriorpies.parrelsync",$/;"	s
namePlayers	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUIItem.cs	/^        [SerializeField] Text namePlayers = null;$/;"	f	class:Mirror.Cloud.Example.ServerListUIItem	file:
nameText	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUIItem.cs	/^        [SerializeField] Text nameText = null;$/;"	f	class:Mirror.Cloud.Example.ServerListUIItem	file:
neighbourOffsets	Assets/Mirror/Components/InterestManagement/SpatialHashing/Grid2D.cs	/^        Vector2Int[] neighbourOffsets =$/;"	f	class:Mirror.Grid2D	file:
netBehaviourSubclass	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        readonly TypeDefinition netBehaviourSubclass;$/;"	f	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
netId	Assets/Mirror/Runtime/Messages.cs	/^        public uint netId;$/;"	f	struct:Mirror.CommandMessage
netId	Assets/Mirror/Runtime/Messages.cs	/^        public uint netId;$/;"	f	struct:Mirror.ObjectDestroyMessage
netId	Assets/Mirror/Runtime/Messages.cs	/^        public uint netId;$/;"	f	struct:Mirror.ObjectHideMessage
netId	Assets/Mirror/Runtime/Messages.cs	/^        public uint netId;$/;"	f	struct:Mirror.RpcMessage
netId	Assets/Mirror/Runtime/Messages.cs	/^        public uint netId;$/;"	f	struct:Mirror.SpawnMessage
netId	Assets/Mirror/Runtime/Messages.cs	/^        public uint netId;$/;"	f	struct:Mirror.UpdateVarsMessage
netId	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^            public uint netId;$/;"	f	struct:Mirror.NetworkBehaviour.NetworkBehaviourSyncVar
netId	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public uint netId => netIdentity.netId;$/;"	f	class:Mirror.NetworkBehaviour
netId	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public uint netId { get; internal set; }$/;"	p	class:Mirror.NetworkIdentity
netIdentity	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        public NetworkIdentity netIdentity$/;"	p	class:Mirror.NetworkBehaviour
netIdentityCache	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        NetworkIdentity netIdentityCache;$/;"	f	class:Mirror.NetworkBehaviour	file:
networkAddress	Assets/Mirror/Runtime/NetworkManager.cs	/^        public string networkAddress = "localhost";$/;"	f	class:Mirror.NetworkManager
networkAnimator	Assets/Mirror/Examples/AdditiveScenes/Scripts/ShootingTankBehaviour.cs	/^        NetworkAnimator networkAnimator;$/;"	f	class:Mirror.Examples.Additive.ShootingTankBehaviour	file:
networkDiscovery	Assets/Mirror/Components/Discovery/NetworkDiscoveryHUD.cs	/^        public NetworkDiscovery networkDiscovery;$/;"	f	class:Mirror.Discovery.NetworkDiscoveryHUD
networkManager	Assets/Mirror/Editor/NetworkManagerEditor.cs	/^        protected NetworkManager networkManager;$/;"	f	class:Mirror.NetworkManagerEditor
networkSceneName	Assets/Mirror/Runtime/NetworkManager.cs	/^        public static string networkSceneName { get; protected set; } = "";$/;"	p	class:Mirror.NetworkManager
newClientEP	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        EndPoint newClientEP = new IPEndPoint(IPAddress.Any, 0);$/;"	f	class:kcp2k.KcpServer	file:
newClientEP	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        EndPoint newClientEP = new IPEndPoint(IPAddress.IPv6Any, 0);$/;"	f	class:kcp2k.KcpServer	file:
newObservers	Assets/Mirror/Runtime/NetworkServer.cs	/^        static readonly HashSet<NetworkConnection> newObservers = new HashSet<NetworkConnection>/;"	f	class:Mirror.NetworkServer	file:
newSceneOverride	ProjectSettings/SceneTemplateSettings.json	/^    "newSceneOverride": 0$/;"	n
nextNetworkId	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        static uint nextNetworkId = 1;$/;"	f	class:Mirror.NetworkIdentity	file:
nextSendTime	Assets/Mirror/Components/NetworkAnimator.cs	/^        float nextSendTime;$/;"	f	class:Mirror.NetworkAnimator	file:
nextSyncTime	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^        float nextSyncTime;$/;"	f	class:Mirror.Experimental.NetworkLerpRigidbody	file:
nextSyncTime	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^            public float nextSyncTime;$/;"	f	class:Mirror.Experimental.NetworkRigidbody.ClientSyncState
nextSyncTime	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^            public float nextSyncTime;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D.ClientSyncState
noDelay	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/TcpConfig.cs	/^        public readonly bool noDelay;$/;"	f	struct:Mirror.SimpleWeb.TcpConfig
noDelay	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public bool noDelay = true;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
nocwnd	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal bool nocwnd;        \/\/ no congestion window$/;"	f	class:kcp2k.Kcp	file:
nodelay	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint nodelay;       \/\/ not a bool. original Kcp has '<2 else' check.$/;"	f	class:kcp2k.Kcp	file:
none	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^            none = 0,$/;"	e	enum:Mirror.SimpleWeb.Log.Levels	file:
numPlayers	Assets/Mirror/Runtime/NetworkManager.cs	/^        public int numPlayers => NetworkServer.connections.Count(kv => kv.Value.identity != null/;"	f	class:Mirror.NetworkManager
numSyncVars	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public Dictionary<string, int> numSyncVars = new Dictionary<string, int>();$/;"	f	class:Mirror.Weaver.WeaverLists
obj	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void Destroy(GameObject obj) => DestroyObject(obj, true);$/;"	f	class:Mirror.NetworkServer
obj	Assets/Mirror/Runtime/NetworkServer.cs	/^        public static void UnSpawn(GameObject obj) => DestroyObject(obj, false);$/;"	f	class:Mirror.NetworkServer
objectGenerator	Assets/Mirror/Runtime/Pool.cs	/^        readonly Func<T> objectGenerator;$/;"	f	class:Mirror.Pool	file:
objectGenerator	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Pool.cs	/^        readonly Func<T> objectGenerator;$/;"	f	class:Telepathy.Pool	file:
objects	Assets/Mirror/Runtime/Pool.cs	/^        readonly Stack<T> objects = new Stack<T>();$/;"	f	class:Mirror.Pool	file:
objects	Assets/Mirror/Runtime/SyncDictionary.cs	/^        protected readonly IDictionary<TKey, TValue> objects;$/;"	f	class:Mirror.SyncIDictionary
objects	Assets/Mirror/Runtime/SyncList.cs	/^        readonly IList<T> objects;$/;"	f	class:Mirror.SyncList	file:
objects	Assets/Mirror/Runtime/SyncSet.cs	/^        protected readonly ISet<T> objects;$/;"	f	class:Mirror.SyncSet
objects	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Pool.cs	/^        readonly Stack<T> objects = new Stack<T>();$/;"	f	class:Telepathy.Pool	file:
observers	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public Dictionary<int, NetworkConnection> observers;$/;"	f	class:Mirror.NetworkIdentity
observersWriter	Assets/Mirror/Runtime/NetworkServer.cs	/^            public PooledNetworkWriter observersWriter;$/;"	f	struct:Mirror.NetworkServer.Serialization
observersWritten	Assets/Mirror/Runtime/NetworkServer.cs	/^            public int observersWritten;$/;"	f	struct:Mirror.NetworkServer.Serialization
observing	Assets/Mirror/Runtime/NetworkConnection.cs	/^        internal readonly HashSet<NetworkIdentity> observing = new HashSet<NetworkIdentity>();$/;"	f	class:Mirror.NetworkConnection	file:
offlineScene	Assets/Mirror/Runtime/NetworkManager.cs	/^        public string offlineScene = "";$/;"	f	class:Mirror.NetworkManager
offset	Assets/Mirror/Runtime/NetworkTime.cs	/^        public static double offset => _offset.Value;$/;"	f	class:Mirror.NetworkTime
offsetMax	Assets/Mirror/Runtime/NetworkTime.cs	/^        static double offsetMax = double.MaxValue;$/;"	f	class:Mirror.NetworkTime	file:
offsetMin	Assets/Mirror/Runtime/NetworkTime.cs	/^        static double offsetMin = double.MinValue;$/;"	f	class:Mirror.NetworkTime	file:
offsetX	Assets/Mirror/Runtime/NetworkManagerHUD.cs	/^        public int offsetX;$/;"	f	class:Mirror.NetworkManagerHUD
offsetY	Assets/Mirror/Runtime/NetworkManagerHUD.cs	/^        public int offsetY;$/;"	f	class:Mirror.NetworkManagerHUD
onClose	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^        void onClose()$/;"	m	class:Mirror.SimpleWeb.WebSocketClientWebGl	file:
onConnect	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        public event Action onConnect;$/;"	E	class:Mirror.SimpleWeb.SimpleWebClient
onConnect	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        public event Action<int> onConnect;$/;"	E	class:Mirror.SimpleWeb.SimpleWebServer
onData	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        public event Action<ArraySegment<byte>> onData;$/;"	E	class:Mirror.SimpleWeb.SimpleWebClient
onData	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        public event Action<int, ArraySegment<byte>> onData;$/;"	E	class:Mirror.SimpleWeb.SimpleWebServer
onDisconnect	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        public event Action onDisconnect;$/;"	E	class:Mirror.SimpleWeb.SimpleWebClient
onDisconnect	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        public event Action<int> onDisconnect;$/;"	E	class:Mirror.SimpleWeb.SimpleWebServer
onDispose	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^        public Action<Connection> onDispose;$/;"	f	class:Mirror.SimpleWeb.Connection
onErr	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^        void onErr()$/;"	m	class:Mirror.SimpleWeb.WebSocketClientWebGl	file:
onError	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        public event Action<Exception> onError;$/;"	E	class:Mirror.SimpleWeb.SimpleWebClient
onError	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        public event Action<int, Exception> onError;$/;"	E	class:Mirror.SimpleWeb.SimpleWebServer
onMessage	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^        void onMessage(IntPtr bufferPtr, int count)$/;"	m	class:Mirror.SimpleWeb.WebSocketClientWebGl	file:
onOpen	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/Webgl/WebSocketClientWebGl.cs	/^        void onOpen()$/;"	m	class:Mirror.SimpleWeb.WebSocketClientWebGl	file:
onPlayerListChanged	Assets/Mirror/Examples/Cloud/GUI/Scripts/ApiUpdater.cs	/^        void onPlayerListChanged(int playerCount)$/;"	m	class:Mirror.Cloud.Example.ApiUpdater	file:
onPlayerListChanged	Assets/Mirror/Examples/Cloud/GUI/Scripts/NetworkManagerListServer.cs	/^        public event OnPlayerListChanged onPlayerListChanged;$/;"	E	class:Mirror.Cloud.Example.NetworkManagerListServer
onPlayerListChanged	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/BallManager.cs	/^        void onPlayerListChanged(int playerCount)$/;"	m	class:Mirror.Cloud.Examples.Pong.BallManager	file:
onServerListUpdated	Assets/Mirror/Cloud/ListServer/ListServer.cs	/^        event UnityAction<ServerCollectionJson> onServerListUpdated;$/;"	E	interface:Mirror.Cloud.ListServerService.IListServerClientApi
onServerListUpdated	Assets/Mirror/Cloud/ListServer/ListServerClientApi.cs	/^        public event UnityAction<ServerCollectionJson> onServerListUpdated$/;"	p	class:Mirror.Cloud.ListServerService.ListServerClientApi
onServerStarted	Assets/Mirror/Examples/Cloud/GUI/Scripts/NetworkManagerListServer.cs	/^        public event Action onServerStarted;$/;"	E	class:Mirror.Cloud.Example.NetworkManagerListServer
onServerStopped	Assets/Mirror/Examples/Cloud/GUI/Scripts/NetworkManagerListServer.cs	/^        public event Action onServerStopped;$/;"	E	class:Mirror.Cloud.Example.NetworkManagerListServer
onlineScene	Assets/Mirror/Runtime/NetworkManager.cs	/^        public string onlineScene = "";$/;"	f	class:Mirror.NetworkManager
op	Assets/Mirror/Runtime/SyncSet.cs	/^        void AddOperation(Operation op) => AddOperation(op, default);$/;"	f	class:Mirror.SyncSet	file:
openMatches	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal static readonly Dictionary<Guid, MatchInfo> openMatches = new Dictionary<Guid, /;"	f	class:Mirror.Examples.MultipleMatch.CanvasController	file:
operation	Assets/Mirror/Runtime/SyncDictionary.cs	/^            internal Operation operation;$/;"	f	struct:Mirror.SyncIDictionary.Change
operation	Assets/Mirror/Runtime/SyncList.cs	/^            internal Operation operation;$/;"	f	struct:Mirror.SyncList.Change
operation	Assets/Mirror/Runtime/SyncSet.cs	/^            internal Operation operation;$/;"	f	struct:Mirror.SyncSet.Change
other	Assets/Mirror/Runtime/SyncSet.cs	/^        public bool IsProperSubsetOf(IEnumerable<T> other) => objects.IsProperSubsetOf(other);$/;"	f	class:Mirror.SyncSet
other	Assets/Mirror/Runtime/SyncSet.cs	/^        public bool IsProperSupersetOf(IEnumerable<T> other) => objects.IsProperSupersetOf(other/;"	f	class:Mirror.SyncSet
other	Assets/Mirror/Runtime/SyncSet.cs	/^        public bool IsSubsetOf(IEnumerable<T> other) => objects.IsSubsetOf(other);$/;"	f	class:Mirror.SyncSet
other	Assets/Mirror/Runtime/SyncSet.cs	/^        public bool IsSupersetOf(IEnumerable<T> other) => objects.IsSupersetOf(other);$/;"	f	class:Mirror.SyncSet
other	Assets/Mirror/Runtime/SyncSet.cs	/^        public bool Overlaps(IEnumerable<T> other) => objects.Overlaps(other);$/;"	f	class:Mirror.SyncSet
other	Assets/Mirror/Runtime/SyncSet.cs	/^        public bool SetEquals(IEnumerable<T> other) => objects.SetEquals(other);$/;"	f	class:Mirror.SyncSet
output	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        readonly Action<byte[], int> output; \/\/ buffer, size$/;"	f	class:kcp2k.Kcp	file:
owner	Assets/Mirror/Examples/MultipleMatches/Scripts/RoomGUI.cs	/^        public bool owner;$/;"	f	class:Mirror.Examples.MultipleMatch.RoomGUI
owner	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        readonly IBufferOwner owner;$/;"	f	class:Mirror.SimpleWeb.ArrayBuffer	file:
ownerWriter	Assets/Mirror/Runtime/NetworkServer.cs	/^            public PooledNetworkWriter ownerWriter;$/;"	f	struct:Mirror.NetworkServer.Serialization
ownerWritten	Assets/Mirror/Runtime/NetworkServer.cs	/^            public int ownerWritten;$/;"	f	struct:Mirror.NetworkServer.Serialization
packagesPath	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        public string packagesPath;$/;"	f	class:ParrelSync.Project
padding	Assets/Mirror/Components/NetworkPingDisplay.cs	/^        public int padding = 2;$/;"	f	class:Mirror.NetworkPingDisplay
parameters	Assets/Mirror/Components/NetworkAnimator.cs	/^        AnimatorControllerParameter[] parameters;$/;"	f	class:Mirror.NetworkAnimator	file:
parent	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUI.cs	/^        [SerializeField] Transform parent = null;$/;"	f	class:Mirror.Cloud.Example.ServerListUI	file:
password	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^        public string password;$/;"	f	class:Mirror.Authenticators.BasicAuthenticator
password	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SslConfigLoader.cs	/^            public string password;$/;"	f	struct:Mirror.SimpleWeb.SslConfigLoader.Cert
path	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SslConfigLoader.cs	/^            public string path;$/;"	f	struct:Mirror.SimpleWeb.SslConfigLoader.Cert
paused	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        bool paused;$/;"	f	class:kcp2k.KcpConnection	file:
payload	Assets/Mirror/Runtime/Messages.cs	/^        public ArraySegment<byte> payload;$/;"	f	struct:Mirror.CommandMessage
payload	Assets/Mirror/Runtime/Messages.cs	/^        public ArraySegment<byte> payload;$/;"	f	struct:Mirror.RpcMessage
payload	Assets/Mirror/Runtime/Messages.cs	/^        public ArraySegment<byte> payload;$/;"	f	struct:Mirror.SpawnMessage
payload	Assets/Mirror/Runtime/Messages.cs	/^        public ArraySegment<byte> payload;$/;"	f	struct:Mirror.UpdateVarsMessage
pendingPlayers	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public List<PendingPlayer> pendingPlayers = new List<PendingPlayer>();$/;"	f	class:Mirror.NetworkRoomManager
physicsScene	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PhysicsSimulator.cs	/^        PhysicsScene physicsScene;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PhysicsSimulator	file:
physicsScene2D	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PhysicsSimulator.cs	/^        PhysicsScene2D physicsScene2D;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PhysicsSimulator	file:
ping	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        IEnumerator ping()$/;"	m	class:Mirror.Cloud.ListServerService.ListServerServerApi	file:
pingFails	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        int pingFails = 0;$/;"	f	class:Mirror.Cloud.ListServerService.ListServerServerApi	file:
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.0
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.1
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.10
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.11
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.12
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.13
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.14
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.15
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.2
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.3
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.4
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.5
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.6
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.7
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.8
pivot	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	o	object:frames.9
playAgain	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        bool playAgain = false;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchController	file:
playAgainButton	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public Button playAgainButton;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchController
player	Assets/Mirror/Examples/Basic/Scripts/PlayerUI.cs	/^        Player player;$/;"	f	class:Mirror.Examples.Basic.PlayerUI	file:
player1	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public NetworkIdentity player1;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchController
player2	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public NetworkIdentity player2;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchController
playerColor	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        public Color32 playerColor = Color.white;$/;"	f	class:Mirror.Examples.Basic.Player
playerCount	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public int playerCount;$/;"	f	struct:Mirror.Cloud.ListServerService.PartialServerJson
playerCount	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public int playerCount;$/;"	f	struct:Mirror.Cloud.ListServerService.ServerJson
playerCount	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchGUI.cs	/^        public Text playerCount;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchGUI
playerData	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        public int playerData = 0;$/;"	f	class:Mirror.Examples.Basic.Player
playerDataText	Assets/Mirror/Examples/Basic/Scripts/PlayerUI.cs	/^        public Text playerDataText;$/;"	f	class:Mirror.Examples.Basic.PlayerUI
playerIdentity	Assets/Mirror/Examples/MultipleMatches/Scripts/CellGUI.cs	/^        public NetworkIdentity playerIdentity;$/;"	f	class:Mirror.Examples.MultipleMatch.CellGUI
playerIndex	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        int playerIndex = 1;$/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController	file:
playerIndex	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        public int playerIndex;$/;"	f	struct:Mirror.Examples.MultipleMatch.MatchPlayerData
playerIndex	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        public int playerIndex;$/;"	f	struct:Mirror.Examples.MultipleMatch.PlayerInfo
playerInfos	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal static readonly Dictionary<NetworkConnection, PlayerInfo> playerInfos = new Dic/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController	file:
playerInfos	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        public PlayerInfo[] playerInfos;$/;"	f	struct:Mirror.Examples.MultipleMatch.ClientMatchMessage
playerList	Assets/Mirror/Examples/MultipleMatches/Scripts/RoomGUI.cs	/^        public GameObject playerList;$/;"	f	class:Mirror.Examples.MultipleMatch.RoomGUI
playerMatches	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal static readonly Dictionary<NetworkConnection, Guid> playerMatches = new Diction/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController	file:
playerName	Assets/Mirror/Examples/Chat/Scripts/Player.cs	/^        public string playerName;$/;"	f	class:Mirror.Examples.Chat.Player
playerName	Assets/Mirror/Examples/MultipleMatches/Scripts/PlayerGUI.cs	/^        public Text playerName;$/;"	f	class:Mirror.Examples.MultipleMatch.PlayerGUI
playerNameText	Assets/Mirror/Examples/Basic/Scripts/PlayerUI.cs	/^        public Text playerNameText;$/;"	f	class:Mirror.Examples.Basic.PlayerUI
playerNumber	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        public int playerNumber = 0;$/;"	f	class:Mirror.Examples.Basic.Player
playerNumber	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerScore.cs	/^        public int playerNumber;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerScore
playerPrefab	Assets/Mirror/Examples/MultipleMatches/Scripts/RoomGUI.cs	/^        public GameObject playerPrefab;$/;"	f	class:Mirror.Examples.MultipleMatch.RoomGUI
playerPrefab	Assets/Mirror/Runtime/NetworkManager.cs	/^        public GameObject playerPrefab;$/;"	f	class:Mirror.NetworkManager
playerSpawnMethod	Assets/Mirror/Runtime/NetworkManager.cs	/^        public PlayerSpawnMethod playerSpawnMethod;$/;"	f	class:Mirror.NetworkManager
playerUI	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        GameObject playerUI;$/;"	f	class:Mirror.Examples.Basic.Player	file:
playerUIPrefab	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        public GameObject playerUIPrefab;$/;"	f	class:Mirror.Examples.Basic.Player
players	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        public byte players;$/;"	f	struct:Mirror.Examples.MultipleMatch.MatchInfo
playersFormat	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUIItem.cs	/^        [SerializeField] string playersFormat = "{0} \/ {1}";$/;"	f	class:Mirror.Cloud.Example.ServerListUIItem	file:
playersList	Assets/Mirror/Examples/Basic/Scripts/Player.cs	/^        internal static readonly List<Player> playersList = new List<Player>();$/;"	f	class:Mirror.Examples.Basic.Player	file:
playersPanel	Assets/Mirror/Examples/Basic/Scripts/BasicNetManager.cs	/^        public RectTransform playersPanel;$/;"	f	class:Mirror.Examples.Basic.BasicNetManager
pool	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^        Pool<byte[]> pool;$/;"	f	class:Telepathy.MagnificentReceivePipe	file:
pool	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentSendPipe.cs	/^        Pool<byte[]> pool;$/;"	f	class:Telepathy.MagnificentSendPipe	file:
port	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public int port;$/;"	f	struct:Mirror.Cloud.ListServerService.ServerJson
port	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public ushort port = 7778;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
port	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public ushort port = 7777;$/;"	f	class:Mirror.TelepathyTransport
position	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^        Vector2Int ProjectToGrid(Vector3 position) =>$/;"	f	class:Mirror.SpatialHashingInterestManagement	file:
position	Assets/Mirror/Runtime/Messages.cs	/^        public Vector3 position;$/;"	f	struct:Mirror.SpawnMessage
position	Assets/Mirror/Runtime/NetworkWriter.cs	/^        int position;$/;"	f	class:Mirror.NetworkWriter	file:
prefab	Assets/Mirror/Examples/Cloud/GUI/Scripts/InstantiateNetworkManager.cs	/^        public GameObject prefab;$/;"	f	class:Mirror.Cloud.Examples.InstantiateNetworkManager
prefab	Assets/Mirror/Runtime/ClientScene.cs	/^        public static void RegisterPrefab(GameObject prefab) => NetworkClient.RegisterPrefab(pre/;"	f	class:Mirror.ClientScene
prefab	Assets/Mirror/Runtime/ClientScene.cs	/^        public static void UnregisterPrefab(GameObject prefab) => NetworkClient.UnregisterPrefab/;"	f	class:Mirror.ClientScene
prefab	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        void AssignAssetID(GameObject prefab) => AssignAssetID(AssetDatabase.GetAssetPath(prefab/;"	f	class:Mirror.NetworkIdentity	file:
prefabs	Assets/Mirror/Runtime/ClientScene.cs	/^        public static Dictionary<Guid, GameObject> prefabs => NetworkClient.prefabs;$/;"	f	class:Mirror.ClientScene
prefabs	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static readonly Dictionary<Guid, GameObject> prefabs =$/;"	f	class:Mirror.NetworkClient
previousLocalPlayer	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        static NetworkIdentity previousLocalPlayer = null;$/;"	f	class:Mirror.NetworkIdentity	file:
previousSpeed	Assets/Mirror/Components/NetworkAnimator.cs	/^        float previousSpeed;$/;"	f	class:Mirror.NetworkAnimator	file:
previousValue	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        readonly ClientSyncState previousValue = new ClientSyncState();$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
previousValue	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        readonly ClientSyncState previousValue = new ClientSyncState();$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
probe	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint probe;$/;"	f	class:kcp2k.Kcp	file:
probe_wait	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint probe_wait;$/;"	f	class:kcp2k.Kcp	file:
projectPath	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        public string projectPath;$/;"	f	class:ParrelSync.Project
projectSettingsPath	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        public string projectSettingsPath;$/;"	f	class:ParrelSync.Project
projectileMount	Assets/Mirror/Examples/Tanks/Scripts/Tank.cs	/^        public Transform projectileMount;$/;"	f	class:Mirror.Examples.Tanks.Tank
projectilePrefab	Assets/Mirror/Examples/Tanks/Scripts/Tank.cs	/^        public GameObject projectilePrefab;$/;"	f	class:Mirror.Examples.Tanks.Tank
protocol	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public string protocol;$/;"	f	struct:Mirror.Cloud.ListServerService.ServerJson
queue	Assets/Mirror/Runtime/LocalConnections.cs	/^        internal readonly Queue<PooledNetworkWriter> queue = new Queue<PooledNetworkWriter>();$/;"	f	class:Mirror.LocalConnectionToServer	file:
queue	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/ReceiveLoop.cs	/^            public readonly ConcurrentQueue<Message> queue;$/;"	f	struct:Mirror.SimpleWeb.ReceiveLoop.Config
queue	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^        readonly Queue<Entry> queue = new Queue<Entry>();$/;"	f	class:Telepathy.MagnificentReceivePipe	file:
queue	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentSendPipe.cs	/^        readonly Queue<ArraySegment<byte>> queue = new Queue<ArraySegment<byte>>();$/;"	f	class:Telepathy.MagnificentSendPipe	file:
queueCounter	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/MagnificentReceivePipe.cs	/^        Dictionary<int, int> queueCounter = new Dictionary<int, int>();$/;"	f	class:Telepathy.MagnificentReceivePipe	file:
random	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        System.Random random = new System.Random();$/;"	f	class:Mirror.LatencySimulation	file:
random	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^            readonly RNGCryptoServiceProvider random;$/;"	f	class:Mirror.SimpleWeb.SendLoop.MaskHelper	file:
randomColor	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/Reward.cs	/^        public RandomColor randomColor;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.Reward
randomColor	Assets/Mirror/Examples/Room/Scripts/Reward.cs	/^        public RandomColor randomColor;$/;"	f	class:Mirror.Examples.NetworkRoom.Reward
rawReceiveBuffer	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpClientConnection.cs	/^        readonly byte[] rawReceiveBuffer = new byte[Kcp.MTU_DEF];$/;"	f	class:kcp2k.KcpClientConnection	file:
rawReceiveBuffer	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        readonly byte[] rawReceiveBuffer = new byte[Kcp.MTU_DEF];$/;"	f	class:kcp2k.KcpServer	file:
rawSendBuffer	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        byte[] rawSendBuffer = new byte[Kcp.MTU_DEF];$/;"	f	class:kcp2k.KcpConnection	file:
rcv_buf	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal readonly List<Segment> rcv_buf = new List<Segment>(16);   \/\/ receive buffer$/;"	f	class:kcp2k.Kcp	file:
rcv_nxt	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint rcv_nxt;$/;"	f	class:kcp2k.Kcp	file:
rcv_queue	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal readonly Queue<Segment> rcv_queue = new Queue<Segment>(16); \/\/ receive queue$/;"	f	class:kcp2k.Kcp	file:
rcv_wnd	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint rcv_wnd;       \/\/ receive window$/;"	f	class:kcp2k.Kcp	file:
read	Assets/Mirror/Runtime/NetworkReader.cs	/^        public static Func<NetworkReader, T> read;$/;"	f	class:Mirror.Reader
readFuncs	Assets/Mirror/Editor/Weaver/Readers.cs	/^        static Dictionary<TypeReference, MethodReference> readFuncs;$/;"	f	class:Mirror.Weaver.Readers	file:
readNetworkBehaviourGeneric	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference readNetworkBehaviourGeneric;$/;"	f	class:Mirror.Weaver.WeaverTypes
ready	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        public bool ready;$/;"	f	struct:Mirror.Examples.MultipleMatch.PlayerInfo
ready	Assets/Mirror/Runtime/ClientScene.cs	/^        public static bool ready$/;"	p	class:Mirror.ClientScene
ready	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static bool ready;$/;"	f	class:Mirror.NetworkClient
readyButtonText	Assets/Project/Scripts/UI/LobbyManager.cs	/^    [SerializeField] private TextMeshProUGUI readyButtonText;$/;"	f	class:LobbyManager	file:
readyConn	Assets/Mirror/Runtime/ClientScene.cs	/^        public static bool AddPlayer(NetworkConnection readyConn) => NetworkClient.AddPlayer(rea/;"	f	class:Mirror.ClientScene
readyConn	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static bool AddPlayer(NetworkConnection readyConn) => AddPlayer();$/;"	f	class:Mirror.NetworkClient
readyConnection	Assets/Mirror/Runtime/ClientScene.cs	/^        public static NetworkConnection readyConnection$/;"	p	class:Mirror.ClientScene
readyConnection	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static NetworkConnection readyConnection => ready ? connection : null;$/;"	f	class:Mirror.NetworkClient
readyToBegin	Assets/Mirror/Components/NetworkRoomPlayer.cs	/^        public bool readyToBegin;$/;"	f	class:Mirror.NetworkRoomPlayer
rebuildInterval	Assets/Mirror/Components/InterestManagement/Distance/DistanceInterestManagement.cs	/^        public float rebuildInterval = 1;$/;"	f	class:Mirror.DistanceInterestManagement
rebuildInterval	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^        public float rebuildInterval = 1;$/;"	f	class:Mirror.SpatialHashingInterestManagement
receivePipe	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public readonly MagnificentReceivePipe receivePipe;$/;"	f	class:Telepathy.ClientConnectionState
receivePipe	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Server.cs	/^        protected MagnificentReceivePipe receivePipe;$/;"	f	class:Telepathy.Server
receiveQueue	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        protected readonly ConcurrentQueue<Message> receiveQueue = new ConcurrentQueue<Message>(/;"	f	class:Mirror.SimpleWeb.SimpleWebClient
receiveQueue	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        public readonly ConcurrentQueue<Message> receiveQueue = new ConcurrentQueue<Message>();$/;"	f	class:Mirror.SimpleWeb.WebSocketServer
receiveThread	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^        public Thread receiveThread;$/;"	f	class:Mirror.SimpleWeb.Connection
receiveThread	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        public Thread receiveThread;$/;"	f	class:Telepathy.ClientConnectionState
receiveTimeout	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/TcpConfig.cs	/^        public readonly int receiveTimeout;$/;"	f	struct:Mirror.SimpleWeb.TcpConfig
receiveTimeout	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public int receiveTimeout = 20000;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
refTime	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        readonly Stopwatch refTime = new Stopwatch();$/;"	f	class:kcp2k.KcpConnection	file:
refreshButton	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListManager.cs	/^        [SerializeField] Button refreshButton = null;$/;"	f	class:Mirror.Cloud.Example.ServerListManager	file:
refreshinterval	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListManager.cs	/^        [SerializeField] int refreshinterval = 20;$/;"	f	class:Mirror.Cloud.Example.ServerListManager	file:
registerCommandDelegateReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference registerCommandDelegateReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
registerRpcDelegateReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference registerRpcDelegateReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
releasesRequired	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        int releasesRequired;$/;"	f	class:Mirror.SimpleWeb.ArrayBuffer	file:
reliableClientToServer	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        List<QueuedMessage> reliableClientToServer = new List<QueuedMessage>();$/;"	f	class:Mirror.LatencySimulation	file:
reliableLatency	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public float reliableLatency;$/;"	f	class:Mirror.LatencySimulation
reliableServerToClient	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        List<QueuedMessage> reliableServerToClient = new List<QueuedMessage>();$/;"	f	class:Mirror.LatencySimulation	file:
remoteEndpoint	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        protected EndPoint remoteEndpoint;$/;"	f	class:kcp2k.KcpConnection
removeFromSpawned	Assets/Mirror/Runtime/NetworkClient.cs	/^        static readonly List<uint> removeFromSpawned = new List<uint>();$/;"	f	class:Mirror.NetworkClient	file:
removeServer	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        IEnumerator removeServer()$/;"	m	class:Mirror.Cloud.ListServerService.ListServerServerApi	file:
removeServerWithoutCoroutine	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        void removeServerWithoutCoroutine()$/;"	m	class:Mirror.Cloud.ListServerService.ListServerServerApi	file:
replacementGetterProperties	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public Dictionary<FieldDefinition, MethodDefinition> replacementGetterProperties = new D/;"	f	class:Mirror.Weaver.WeaverLists
replacementSetterProperties	Assets/Mirror/Editor/Weaver/Weaver.cs	/^        public Dictionary<FieldDefinition, MethodDefinition> replacementSetterProperties = new D/;"	f	class:Mirror.Weaver.WeaverLists
requestCreator	Assets/Mirror/Cloud/ApiConnector.cs	/^        IRequestCreator requestCreator;$/;"	f	class:Mirror.Cloud.ApiConnector	file:
requestCreator	Assets/Mirror/Cloud/Core/BaseApi.cs	/^        protected readonly IRequestCreator requestCreator;$/;"	f	class:Mirror.Cloud.BaseApi
requiresAuthority	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^            public bool requiresAuthority;$/;"	f	struct:Mirror.Weaver.NetworkBehaviourProcessor.CmdResult
requiresAuthority	Assets/Mirror/Runtime/Attributes.cs	/^        public bool requiresAuthority = true;$/;"	f	class:Mirror.CommandAttribute
requiresAuthority	Assets/Mirror/Runtime/RemoteCallHelper.cs	/^        public bool requiresAuthority;$/;"	f	struct:Mirror.RemoteCalls.CommandInfo
resendts	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        internal uint resendts; \/\/ resend timestamp$/;"	f	class:kcp2k.Segment	file:
resolution	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^        public int resolution => visRange \/ 3;$/;"	f	class:Mirror.SpatialHashingInterestManagement
rewardPrefab	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^        public GameObject rewardPrefab;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.MultiSceneNetManager
rewardPrefab	Assets/Mirror/Examples/Room/Scripts/NetworkRoomManagerExt.cs	/^        public GameObject rewardPrefab;$/;"	f	class:Mirror.Examples.NetworkRoom.NetworkRoomManagerExt
rightRacketSpawn	Assets/Mirror/Examples/Pong/Scripts/NetworkManagerPong.cs	/^        public Transform rightRacketSpawn;$/;"	f	class:Mirror.Examples.Pong.NetworkManagerPong
rigidBody	Assets/Mirror/Examples/Tanks/Scripts/Projectile.cs	/^        public Rigidbody rigidBody;$/;"	f	class:Mirror.Examples.Tanks.Projectile
rigidbody2d	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/Ball.cs	/^        public Rigidbody2D rigidbody2d;$/;"	f	class:Mirror.Cloud.Examples.Pong.Ball
rigidbody2d	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/Player.cs	/^        public Rigidbody2D rigidbody2d;$/;"	f	class:Mirror.Cloud.Examples.Pong.Player
rigidbody2d	Assets/Mirror/Examples/Pong/Scripts/Ball.cs	/^        public Rigidbody2D rigidbody2d;$/;"	f	class:Mirror.Examples.Pong.Ball
rigidbody2d	Assets/Mirror/Examples/Pong/Scripts/Player.cs	/^        public Rigidbody2D rigidbody2d;$/;"	f	class:Mirror.Examples.Pong.Player
rigidbody3D	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PhysicsCollision.cs	/^        public Rigidbody rigidbody3D;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PhysicsCollision
rigidbody3d	Assets/Mirror/Examples/RigidbodyPhysics/Scripts/AddForce.cs	/^        public Rigidbody rigidbody3d;$/;"	f	class:Mirror.Examples.RigidbodyPhysics.AddForce
rmt_wnd	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint rmt_wnd;       \/\/ remote window$/;"	f	class:kcp2k.Kcp	file:
roomGUI	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public RoomGUI roomGUI;$/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController
roomPlayer	Assets/Mirror/Components/NetworkRoomManager.cs	/^            public GameObject roomPlayer;$/;"	f	struct:Mirror.NetworkRoomManager.PendingPlayer
roomPlayerPrefab	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public NetworkRoomPlayer roomPlayerPrefab;$/;"	f	class:Mirror.NetworkRoomManager
roomSlots	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public List<NetworkRoomPlayer> roomSlots = new List<NetworkRoomPlayer>();$/;"	f	class:Mirror.NetworkRoomManager
roomView	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public GameObject roomView;$/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController
rootPath	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        string rootPath;$/;"	f	class:ParrelSync.Project	file:
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.0
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.1
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.10
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.11
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.12
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.13
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.14
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.15
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.2
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.3
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.4
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.5
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.6
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.7
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.8
rotated	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"rotated": false,$/;"	b	object:frames.9
rotation	Assets/Mirror/Examples/AdditiveScenes/Scripts/ShootingTankBehaviour.cs	/^        public Quaternion rotation;$/;"	f	class:Mirror.Examples.Additive.ShootingTankBehaviour
rotation	Assets/Mirror/Runtime/Messages.cs	/^        public Quaternion rotation;$/;"	f	struct:Mirror.SpawnMessage
rotationSpeed	Assets/Mirror/Examples/Tanks/Scripts/Tank.cs	/^        public float rotationSpeed = 100;$/;"	f	class:Mirror.Examples.Tanks.Tank
rto	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        internal int rto;$/;"	f	class:kcp2k.Segment	file:
rtt	Assets/Mirror/Runtime/NetworkTime.cs	/^        public static double rtt => _rtt.Value;$/;"	f	class:Mirror.NetworkTime
rttSd	Assets/Mirror/Runtime/NetworkTime.cs	/^        public static double rttSd => rttStandardDeviation;$/;"	f	class:Mirror.NetworkTime
rttStandardDeviation	Assets/Mirror/Runtime/NetworkTime.cs	/^        public static double rttStandardDeviation => Math.Sqrt(rttVariance);$/;"	f	class:Mirror.NetworkTime
rttVar	Assets/Mirror/Runtime/NetworkTime.cs	/^        public static double rttVar => rttVariance;$/;"	f	class:Mirror.NetworkTime
rttVariance	Assets/Mirror/Runtime/NetworkTime.cs	/^        public static double rttVariance => _rtt.Var;$/;"	f	class:Mirror.NetworkTime
runInBackground	Assets/Mirror/Runtime/NetworkManager.cs	/^        public bool runInBackground = true;$/;"	f	class:Mirror.NetworkManager
runner	Assets/Mirror/Cloud/Core/BaseApi.cs	/^        protected readonly ICoroutineRunner runner;$/;"	f	class:Mirror.Cloud.BaseApi
runner	Assets/Mirror/Cloud/Core/RequestCreator.cs	/^        readonly ICoroutineRunner runner;$/;"	f	class:Mirror.Cloud.RequestCreator	file:
rx_minrto	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal int rx_minrto;$/;"	f	class:kcp2k.Kcp	file:
rx_rto	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal int rx_rto;$/;"	f	class:kcp2k.Kcp	file:
rx_rttval	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal int rx_rttval;      \/\/ average deviation of rtt, used to measure the jitter o/;"	f	class:kcp2k.Kcp	file:
rx_srtt	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal int rx_srtt;        \/\/ smoothed round trip time (a weighted average of rtt)$/;"	f	class:kcp2k.Kcp	file:
scale	Assets/Mirror/Runtime/Messages.cs	/^        public Vector3 scale;$/;"	f	struct:Mirror.SpawnMessage
scale	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"scale": "1",$/;"	s	object:meta
sceneCheckerObjects	Assets/Mirror/Components/NetworkSceneChecker.cs	/^        static readonly Dictionary<Scene, HashSet<NetworkIdentity>> sceneCheckerObjects = new Di/;"	f	class:Mirror.NetworkSceneChecker	file:
sceneId	Assets/Mirror/Runtime/Messages.cs	/^        public ulong sceneId;$/;"	f	struct:Mirror.SpawnMessage
sceneId	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public ulong sceneId;$/;"	f	class:Mirror.NetworkIdentity
sceneIds	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        static readonly Dictionary<ulong, NetworkIdentity> sceneIds =$/;"	f	class:Mirror.NetworkIdentity	file:
sceneName	Assets/Mirror/Runtime/Messages.cs	/^        public string sceneName;$/;"	f	struct:Mirror.SceneMessage
sceneOperation	Assets/Mirror/Runtime/Messages.cs	/^        public SceneOperation sceneOperation;$/;"	f	struct:Mirror.SceneMessage
score	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerScore.cs	/^        public uint score;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerScore
score	Assets/Mirror/Examples/Room/Scripts/PlayerScore.cs	/^        public uint score;$/;"	f	class:Mirror.Examples.NetworkRoom.PlayerScore
scoreIndex	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerScore.cs	/^        public int scoreIndex;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerScore
scroll	Assets/Mirror/Components/GUIConsole.cs	/^        Vector2 scroll = Vector2.zero;$/;"	f	class:Mirror.GUIConsole	file:
scrollViewPos	Assets/Mirror/Components/Discovery/NetworkDiscoveryHUD.cs	/^        Vector2 scrollViewPos = Vector2.zero;$/;"	f	class:Mirror.Discovery.NetworkDiscoveryHUD	file:
scrollbar	Assets/Mirror/Examples/Chat/Scripts/ChatWindow.cs	/^        public Scrollbar scrollbar;$/;"	f	class:Mirror.Examples.Chat.ChatWindow
secretHandshake	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        public long secretHandshake;$/;"	f	class:Mirror.Discovery.NetworkDiscoveryBase
selectedMatch	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal Guid selectedMatch = Guid.Empty;$/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController	file:
sendCommandInternal	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference sendCommandInternal;$/;"	f	class:Mirror.Weaver.WeaverTypes
sendPending	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^        public ManualResetEventSlim sendPending = new ManualResetEventSlim(false);$/;"	f	class:Mirror.SimpleWeb.Connection
sendPending	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/ConnectionState.cs	/^        public ManualResetEvent sendPending = new ManualResetEvent(false);$/;"	f	class:Telepathy.ConnectionState
sendPipe	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/ConnectionState.cs	/^        public readonly MagnificentSendPipe sendPipe;$/;"	f	class:Telepathy.ConnectionState
sendQueue	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^        public ConcurrentQueue<ArrayBuffer> sendQueue = new ConcurrentQueue<ArrayBuffer>();$/;"	f	class:Mirror.SimpleWeb.Connection
sendRpcInternal	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference sendRpcInternal;$/;"	f	class:Mirror.Weaver.WeaverTypes
sendTargetRpcInternal	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference sendTargetRpcInternal;$/;"	f	class:Mirror.Weaver.WeaverTypes
sendThread	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^        public Thread sendThread;$/;"	f	class:Mirror.SimpleWeb.Connection
sendTimeout	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/TcpConfig.cs	/^        public readonly int sendTimeout;$/;"	f	struct:Mirror.SimpleWeb.TcpConfig
sendTimeout	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public int sendTimeout = 5000;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
sending	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        bool sending;$/;"	f	class:Mirror.Cloud.ListServerService.ListServerServerApi	file:
separator	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        char[] separator = new char[1] { '\/' };$/;"	f	class:ParrelSync.Project	file:
serialNumber	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^            internal uint serialNumber;$/;"	f	struct:kcp2k.Kcp.AckItem
serializations	Assets/Mirror/Runtime/NetworkServer.cs	/^        static Dictionary<NetworkIdentity, Serialization> serializations =$/;"	f	class:Mirror.NetworkServer	file:
server	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListUIItem.cs	/^        ServerJson server;$/;"	f	class:Mirror.Cloud.Example.ServerListUIItem	file:
server	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        KcpServer server;$/;"	f	class:kcp2k.KcpTransport	file:
server	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/SimpleWebServer.cs	/^        readonly WebSocketServer server;$/;"	f	class:Mirror.SimpleWeb.SimpleWebServer	file:
server	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        SimpleWebServer server;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport	file:
server	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        Telepathy.Server server;$/;"	f	class:Mirror.TelepathyTransport	file:
serverBatchInterval	Assets/Mirror/Runtime/NetworkManager.cs	/^        public float serverBatchInterval = 0;$/;"	f	class:Mirror.NetworkManager
serverBatching	Assets/Mirror/Runtime/NetworkManager.cs	/^        public bool serverBatching = true;$/;"	f	class:Mirror.NetworkManager
serverBroadcastListenPort	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        protected int serverBroadcastListenPort = 47777;$/;"	f	class:Mirror.Discovery.NetworkDiscoveryBase
serverId	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        string serverId;$/;"	f	class:Mirror.Cloud.ListServerService.ListServerServerApi	file:
serverId	Assets/Mirror/Components/Discovery/ServerResponse.cs	/^        public long serverId;$/;"	f	struct:Mirror.Discovery.ServerResponse
serverIp	Assets/Mirror/Runtime/NetworkClient.cs	/^        public static string serverIp => connection.address;$/;"	f	class:Mirror.NetworkClient
serverMatchOperation	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        public ServerMatchOperation serverMatchOperation;$/;"	f	struct:Mirror.Examples.MultipleMatch.ServerMatchMessage
serverMaxMessageSize	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public int serverMaxMessageSize = 16 * 1024;$/;"	f	class:Mirror.TelepathyTransport
serverMaxMessagesPerTick	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public int serverMaxMessagesPerTick = 10000;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
serverMaxReceivesPerTick	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public int serverMaxReceivesPerTick = 10000;$/;"	f	class:Mirror.TelepathyTransport
serverOnly	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public bool serverOnly;$/;"	f	class:Mirror.NetworkIdentity
serverReceiveQueueLimitPerConnection	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public int serverReceiveQueueLimitPerConnection = 10000;$/;"	f	class:Mirror.TelepathyTransport
serverSendQueueLimitPerConnection	Assets/Mirror/Runtime/Transport/Telepathy/TelepathyTransport.cs	/^        public int serverSendQueueLimitPerConnection = 10000;$/;"	f	class:Mirror.TelepathyTransport
serverStopped	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        bool serverStopped;$/;"	f	class:Mirror.SimpleWeb.WebSocketServer	file:
serverTickRate	Assets/Mirror/Runtime/NetworkManager.cs	/^        public int serverTickRate = 30;$/;"	f	class:Mirror.NetworkManager
serverTime	Assets/Mirror/Runtime/Messages.cs	/^        public double serverTime;$/;"	f	struct:Mirror.NetworkPongMessage
serverUdpClient	Assets/Mirror/Components/Discovery/NetworkDiscoveryBase.cs	/^        protected UdpClient serverUdpClient;$/;"	f	class:Mirror.Discovery.NetworkDiscoveryBase
servers	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public ServerJson[] servers;$/;"	f	struct:Mirror.Cloud.ListServerService.ServerCollectionJson
setMask	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^            public readonly bool setMask;$/;"	f	struct:Mirror.SimpleWeb.SendLoop.Config
setSyncVarGameObjectReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference setSyncVarGameObjectReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
setSyncVarHookGuard	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference setSyncVarHookGuard;$/;"	f	class:Mirror.Weaver.WeaverTypes
setSyncVarHookGuard	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected void setSyncVarHookGuard(ulong dirtyBit, bool value)$/;"	m	class:Mirror.NetworkBehaviour
setSyncVarNetworkBehaviourReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference setSyncVarNetworkBehaviourReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
setSyncVarNetworkIdentityReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference setSyncVarNetworkIdentityReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
setSyncVarReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference setSyncVarReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
sha1	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        readonly SHA1 sha1 = SHA1.Create();$/;"	f	class:Mirror.SimpleWeb.ServerHandshake	file:
shootKey	Assets/Mirror/Examples/Tanks/Scripts/Tank.cs	/^        public KeyCode shootKey = KeyCode.Space;$/;"	f	class:Mirror.Examples.Tanks.Tank
showGUI	Assets/Mirror/Runtime/NetworkManagerHUD.cs	/^        public bool showGUI = true;$/;"	f	class:Mirror.NetworkManagerHUD
showRoomGUI	Assets/Mirror/Components/NetworkRoomManager.cs	/^        public bool showRoomGUI = true;$/;"	f	class:Mirror.NetworkRoomManager
showRoomGUI	Assets/Mirror/Components/NetworkRoomPlayer.cs	/^        public bool showRoomGUI = true;$/;"	f	class:Mirror.NetworkRoomPlayer
showSlider	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^        public bool showSlider;$/;"	f	class:Mirror.SpatialHashingInterestManagement
showStartButton	Assets/Mirror/Examples/Room/Scripts/NetworkRoomManagerExt.cs	/^        bool showStartButton;$/;"	f	class:Mirror.Examples.NetworkRoom.NetworkRoomManagerExt	file:
simulatePhysicsScene	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PhysicsSimulator.cs	/^        bool simulatePhysicsScene;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PhysicsSimulator	file:
simulatePhysicsScene2D	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PhysicsSimulator.cs	/^        bool simulatePhysicsScene2D;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PhysicsSimulator	file:
singleton	Assets/Mirror/Runtime/NetworkManager.cs	/^        public static NetworkManager singleton { get; private set; }$/;"	p	class:Mirror.NetworkManager
size	Assets/Project/Scripts/Joystick/Joystick.cs	/^    [SerializeField] protected float size = 100;$/;"	f	class:Joystick
size	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"size": {"w":512,"h":512},$/;"	o	object:meta
skipNextPing	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        bool skipNextPing;$/;"	f	class:Mirror.Cloud.ListServerService.ListServerServerApi	file:
sleepBeforeSend	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/SendLoop.cs	/^        public static volatile bool sleepBeforeSend = false;$/;"	f	class:Mirror.SimpleWeb.SendLoopConfig
smallest	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/BufferPool.cs	/^        readonly int smallest;$/;"	f	class:Mirror.SimpleWeb.BufferPool	file:
smartupdate	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"smartupdate": "$TexturePacker:SmartUpdate:196a26a2e149d875b91ffc8fa3581e76:fc928c7e275404b7e06/;"	s	object:meta
sn	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        internal uint sn;       \/\/ serial number$/;"	f	class:kcp2k.Segment	file:
snd_buf	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal readonly List<Segment> snd_buf = new List<Segment>(16);   \/\/ send buffer$/;"	f	class:kcp2k.Kcp	file:
snd_nxt	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint snd_nxt;$/;"	f	class:kcp2k.Kcp	file:
snd_queue	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal readonly Queue<Segment> snd_queue = new Queue<Segment>(16); \/\/ send queue$/;"	f	class:kcp2k.Kcp	file:
snd_una	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint snd_una;       \/\/ unacknowledged. e.g. snd_una is 9 it means 8 has been /;"	f	class:kcp2k.Kcp	file:
snd_wnd	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint snd_wnd;       \/\/ send window$/;"	f	class:kcp2k.Kcp	file:
socket	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        protected Socket socket;$/;"	f	class:kcp2k.KcpConnection
socket	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpServer.cs	/^        Socket socket;$/;"	f	class:kcp2k.KcpServer	file:
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.ai
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.androidjni
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.animation
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.assetbundle
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.audio
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.cloth
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.director
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.imageconversion
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.imgui
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.jsonserialize
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.particlesystem
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.physics
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.physics2d
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.screencapture
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.subsystems
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.terrain
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.terrainphysics
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.tilemap
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.ui
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.uielements
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.uielementsnative
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.umbra
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.unityanalytics
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.unitywebrequest
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.unitywebrequestassetbundle
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.unitywebrequestaudio
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.unitywebrequesttexture
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.unitywebrequestwww
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.vehicles
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.video
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.vr
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.wind
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.modules.xr
source	Packages/packages-lock.json	/^      "source": "builtin",$/;"	s	object:dependencies.com.unity.ugui
source	Packages/packages-lock.json	/^      "source": "registry",$/;"	s	object:dependencies.com.unity.collab-proxy
source	Packages/packages-lock.json	/^      "source": "registry",$/;"	s	object:dependencies.com.unity.ext.nunit
source	Packages/packages-lock.json	/^      "source": "registry",$/;"	s	object:dependencies.com.unity.ide.rider
source	Packages/packages-lock.json	/^      "source": "registry",$/;"	s	object:dependencies.com.unity.ide.visualstudio
source	Packages/packages-lock.json	/^      "source": "registry",$/;"	s	object:dependencies.com.unity.ide.vscode
source	Packages/packages-lock.json	/^      "source": "registry",$/;"	s	object:dependencies.com.unity.test-framework
source	Packages/packages-lock.json	/^      "source": "registry",$/;"	s	object:dependencies.com.unity.textmeshpro
source	Packages/packages-lock.json	/^      "source": "registry",$/;"	s	object:dependencies.com.unity.timeline
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.0
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.1
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.10
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.11
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.12
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.13
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.14
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.15
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.2
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.3
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.4
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.5
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.6
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.7
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.8
sourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	o	object:frames.9
spawnAmount	Assets/Mirror/Examples/Benchmark/Scripts/BenchmarkNetworkManager.cs	/^        public int spawnAmount = 5000;$/;"	f	class:Mirror.Examples.Benchmark.BenchmarkNetworkManager
spawnHandlers	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static readonly Dictionary<Guid, SpawnHandlerDelegate> spawnHandlers =$/;"	f	class:Mirror.NetworkClient	file:
spawnList	Assets/Mirror/Editor/NetworkManagerEditor.cs	/^        ReorderableList spawnList;$/;"	f	class:Mirror.NetworkManagerEditor	file:
spawnListProperty	Assets/Mirror/Editor/NetworkManagerEditor.cs	/^        SerializedProperty spawnListProperty;$/;"	f	class:Mirror.NetworkManagerEditor	file:
spawnPrefab	Assets/Mirror/Examples/Benchmark/Scripts/BenchmarkNetworkManager.cs	/^        public GameObject spawnPrefab;$/;"	f	class:Mirror.Examples.Benchmark.BenchmarkNetworkManager
spawnPrefabs	Assets/Mirror/Runtime/NetworkManager.cs	/^        public List<GameObject> spawnPrefabs = new List<GameObject>();$/;"	f	class:Mirror.NetworkManager
spawnableObjects	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static readonly Dictionary<ulong, NetworkIdentity> spawnableObjects =$/;"	f	class:Mirror.NetworkClient	file:
spawned	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public static readonly Dictionary<uint, NetworkIdentity> spawned =$/;"	f	class:Mirror.NetworkIdentity
speed	Assets/Mirror/Examples/Benchmark/Scripts/MonsterMovement.cs	/^        public float speed = 1;$/;"	f	class:Mirror.Examples.Benchmark.MonsterMovement
speed	Assets/Mirror/Examples/Benchmark/Scripts/PlayerMovement.cs	/^        public float speed = 5;$/;"	f	class:Mirror.Examples.Benchmark.PlayerMovement
speed	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/Ball.cs	/^        public float speed = 30;$/;"	f	class:Mirror.Cloud.Examples.Pong.Ball
speed	Assets/Mirror/Examples/Cloud/PongWithListServer/Scripts/Player.cs	/^        public float speed = 1500;$/;"	f	class:Mirror.Cloud.Examples.Pong.Player
speed	Assets/Mirror/Examples/Pong/Scripts/Ball.cs	/^        public float speed = 30;$/;"	f	class:Mirror.Examples.Pong.Ball
speed	Assets/Mirror/Examples/Pong/Scripts/Player.cs	/^        public float speed = 30;$/;"	f	class:Mirror.Examples.Pong.Player
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.0
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.1
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.10
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.11
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.12
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.13
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.14
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.15
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.2
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.3
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.4
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.5
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.6
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.7
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.8
spriteSourceSize	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	o	object:frames.9
sslCertJson	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public string sslCertJson = ".\/cert.json";$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
sslEnabled	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public bool sslEnabled;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
sslHelper	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/WebSocketClientStandAlone.cs	/^        readonly ClientSslHelper sslHelper;$/;"	f	class:Mirror.SimpleWeb.WebSocketClientStandAlone	file:
sslHelper	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        readonly ServerSslHelper sslHelper;$/;"	f	class:Mirror.SimpleWeb.WebSocketServer	file:
sslProtocols	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerSslHelper.cs	/^        public readonly SslProtocols sslProtocols;$/;"	f	struct:Mirror.SimpleWeb.SslConfig
sslProtocols	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public SslProtocols sslProtocols = SslProtocols.Tls12;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
ssthresh	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint ssthresh;      \/\/ slow start threshold$/;"	f	class:kcp2k.Kcp	file:
start	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public DataPoint start = new DataPoint();$/;"	f	class:Mirror.Experimental.NetworkTransformBase
start	Assets/Mirror/Components/NetworkTransformBase.cs	/^        DataPoint start;$/;"	f	class:Mirror.NetworkTransformBase	file:
start	Assets/Mirror/Examples/Benchmark/Scripts/MonsterMovement.cs	/^        Vector3 start;$/;"	f	class:Mirror.Examples.Benchmark.MonsterMovement	file:
startButton	Assets/Mirror/Examples/MultipleMatches/Scripts/RoomGUI.cs	/^        public Button startButton;$/;"	f	class:Mirror.Examples.MultipleMatch.RoomGUI
startButton	Assets/Project/Scripts/UI/LobbyManager.cs	/^    [SerializeField] private GameObject startButton;$/;"	f	class:LobbyManager	file:
startPositionIndex	Assets/Mirror/Runtime/NetworkManager.cs	/^        public static int startPositionIndex;$/;"	f	class:Mirror.NetworkManager
startPositions	Assets/Mirror/Runtime/NetworkManager.cs	/^        public static List<Transform> startPositions = new List<Transform>();$/;"	f	class:Mirror.NetworkManager
startServerButton	Assets/Mirror/Examples/Cloud/GUI/Scripts/ServerListManager.cs	/^        [SerializeField] Button startServerButton = null;$/;"	f	class:Mirror.Cloud.Example.ServerListManager	file:
startingPlayer	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public NetworkIdentity startingPlayer;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchController
state	Assets/Mirror/Runtime/Transport/KCP/kcp2k/highlevel/KcpConnection.cs	/^        KcpState state = KcpState.Disconnected;$/;"	f	class:kcp2k.KcpConnection	file:
state	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal int state;$/;"	f	class:kcp2k.Kcp	file:
state	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/SimpleWebClient.cs	/^        protected ClientState state;$/;"	f	class:Mirror.SimpleWeb.SimpleWebClient
state	Assets/Mirror/Runtime/Transport/Telepathy/Telepathy/Client.cs	/^        ClientConnectionState state;$/;"	f	class:Telepathy.Client	file:
statisticsGUI	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public bool statisticsGUI;$/;"	f	class:kcp2k.KcpTransport
statisticsLog	Assets/Mirror/Runtime/Transport/KCP/MirrorTransport/KcpTransport.cs	/^        public bool statisticsLog;$/;"	f	class:kcp2k.KcpTransport
stopPingCoroutine	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        void stopPingCoroutine()$/;"	m	class:Mirror.Cloud.ListServerService.ListServerServerApi	file:
stopwatch	Assets/Mirror/Runtime/NetworkTime.cs	/^        static readonly Stopwatch stopwatch = new Stopwatch();$/;"	f	class:Mirror.NetworkTime	file:
stream	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Connection.cs	/^        public Stream stream;$/;"	f	class:Mirror.SimpleWeb.Connection
stringBuffer	Assets/Mirror/Runtime/NetworkWriter.cs	/^        static readonly byte[] stringBuffer = new byte[NetworkWriter.MaxStringLength];$/;"	f	class:Mirror.NetworkWriterExtensions	file:
styles	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        Styles styles = new Styles();$/;"	f	class:Mirror.NetworkInformationPreview	file:
subScene	Assets/Mirror/Examples/AdditiveScenes/Scripts/ZoneHandler.cs	/^        public string subScene;$/;"	f	class:Mirror.Examples.Additive.ZoneHandler
subScenes	Assets/Mirror/Examples/AdditiveScenes/Scripts/AdditiveNetworkManager.cs	/^        public string[] subScenes;$/;"	f	class:Mirror.Examples.Additive.AdditiveNetworkManager
subScenes	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^        readonly List<Scene> subScenes = new List<Scene>();$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.MultiSceneNetManager	file:
subscenesLoaded	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/MultiSceneNetManager.cs	/^        bool subscenesLoaded;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.MultiSceneNetManager	file:
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": false$/;"	b	object:dependencyTypeInfos.16
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": false$/;"	b	object:dependencyTypeInfos.7
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.0
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.1
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.10
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.11
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.12
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.13
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.14
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.15
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.17
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.18
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.19
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.2
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.20
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.21
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.3
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.4
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.5
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.6
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.8
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^            "supportsModification": true$/;"	b	object:dependencyTypeInfos.9
supportsModification	ProjectSettings/SceneTemplateSettings.json	/^        "supportsModification": true$/;"	b	object:defaultDependencyTypeInfo
syncAngularVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        [SerializeField] bool syncAngularVelocity = true;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
syncAngularVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        [SerializeField] bool syncAngularVelocity = true;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
syncInterval	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        [HideInInspector] public float syncInterval = 0.1f;$/;"	f	class:Mirror.NetworkBehaviour
syncListDrawer	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^        SyncListDrawer syncListDrawer;$/;"	f	class:Mirror.NetworkBehaviourInspector	file:
syncListFields	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^        readonly List<SyncListField> syncListFields;$/;"	f	class:Mirror.SyncListDrawer	file:
syncMode	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        [HideInInspector] public SyncMode syncMode = SyncMode.Observers;$/;"	f	class:Mirror.NetworkBehaviour
syncObjects	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        List<FieldDefinition> syncObjects = new List<FieldDefinition>();$/;"	f	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
syncObjects	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected readonly List<SyncObject> syncObjects = new List<SyncObject>();$/;"	f	class:Mirror.NetworkBehaviour
syncPosition	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public bool syncPosition = true;$/;"	f	class:Mirror.Experimental.NetworkTransformBase
syncRotation	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public bool syncRotation = true;$/;"	f	class:Mirror.Experimental.NetworkTransformBase
syncScale	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        public bool syncScale = true;$/;"	f	class:Mirror.Experimental.NetworkTransformBase
syncScale	Assets/Mirror/Components/NetworkTransformBase.cs	/^        public bool syncScale = true;$/;"	f	class:Mirror.NetworkTransformBase
syncVarDirtyBits	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        protected ulong syncVarDirtyBits { get; private set; }$/;"	p	class:Mirror.NetworkBehaviour
syncVarEqualReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference syncVarEqualReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
syncVarGameObjectEqualReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference syncVarGameObjectEqualReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
syncVarHookGuard	Assets/Mirror/Runtime/NetworkBehaviour.cs	/^        ulong syncVarHookGuard;$/;"	f	class:Mirror.NetworkBehaviour	file:
syncVarIndicatorContent	Assets/Mirror/Editor/SyncVarAttributeDrawer.cs	/^        static readonly GUIContent syncVarIndicatorContent = new GUIContent("SyncVar", "This var/;"	f	class:Mirror.SyncVarAttributeDrawer	file:
syncVarNames	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^        protected List<string> syncVarNames = new List<string>();$/;"	f	class:Mirror.NetworkBehaviourInspector
syncVarNetIds	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        Dictionary<FieldDefinition, FieldDefinition> syncVarNetIds = new Dictionary<FieldDefinit/;"	f	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
syncVarNetworkBehaviourEqualReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference syncVarNetworkBehaviourEqualReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
syncVarNetworkIdentityEqualReference	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static MethodReference syncVarNetworkIdentityEqualReference;$/;"	f	class:Mirror.Weaver.WeaverTypes
syncVars	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        List<FieldDefinition> syncVars = new List<FieldDefinition>();$/;"	f	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
syncVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        [SerializeField] bool syncVelocity = true;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
syncVelocity	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        [SerializeField] bool syncVelocity = true;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
syncsAnything	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^        bool syncsAnything;$/;"	f	class:Mirror.NetworkBehaviourInspector	file:
t	Assets/Mirror/Editor/Weaver/WeaverTypes.cs	/^        public static TypeReference Import(Type t) => currentAssembly.MainModule.ImportReference/;"	f	class:Mirror.Weaver.WeaverTypes
target	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^        [SerializeField] internal Rigidbody target = null;$/;"	f	class:Mirror.Experimental.NetworkLerpRigidbody	file:
target	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        [SerializeField] internal Rigidbody target = null;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
target	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        [SerializeField] internal Rigidbody2D target = null;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
target	Assets/Mirror/Components/Experimental/NetworkTransformChild.cs	/^        public Transform target;$/;"	f	class:Mirror.Experimental.NetworkTransformChild
target	Assets/Mirror/Components/NetworkTransformChild.cs	/^        public Transform target;$/;"	f	class:Mirror.NetworkTransformChild
targetComponent	Assets/Mirror/Components/NetworkTransform.cs	/^        protected override Transform targetComponent => transform;$/;"	f	class:Mirror.NetworkTransform
targetComponent	Assets/Mirror/Components/NetworkTransformBase.cs	/^        protected abstract Transform targetComponent { get; }$/;"	p	class:Mirror.NetworkTransformBase
targetComponent	Assets/Mirror/Components/NetworkTransformChild.cs	/^        protected override Transform targetComponent => target;$/;"	f	class:Mirror.NetworkTransformChild
targetObject	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^        readonly UnityEngine.Object targetObject;$/;"	f	class:Mirror.SyncListDrawer	file:
targetPosition	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^        Vector3 targetPosition;$/;"	f	class:Mirror.Experimental.NetworkLerpRigidbody	file:
targetRpcInvocationFuncs	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        readonly List<MethodDefinition> targetRpcInvocationFuncs = new List<MethodDefinition>();$/;"	f	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
targetRpcs	Assets/Mirror/Editor/Weaver/Processors/NetworkBehaviourProcessor.cs	/^        readonly List<MethodDefinition> targetRpcs = new List<MethodDefinition>();$/;"	f	class:Mirror.Weaver.NetworkBehaviourProcessor	file:
targetTransform	Assets/Mirror/Components/Experimental/NetworkTransform.cs	/^        protected override Transform targetTransform => transform;$/;"	f	class:Mirror.Experimental.NetworkTransform
targetTransform	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^        protected abstract Transform targetTransform { get; }$/;"	p	class:Mirror.Experimental.NetworkTransformBase
targetTransform	Assets/Mirror/Components/Experimental/NetworkTransformChild.cs	/^        protected override Transform targetTransform => target;$/;"	f	class:Mirror.Experimental.NetworkTransformChild
targetVelocity	Assets/Mirror/Components/Experimental/NetworkLerpRigidbody.cs	/^        Vector3 targetVelocity;$/;"	f	class:Mirror.Experimental.NetworkLerpRigidbody	file:
tcpConfig	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Client/StandAlone/WebSocketClientStandAlone.cs	/^        readonly TcpConfig tcpConfig;$/;"	f	class:Mirror.SimpleWeb.WebSocketClientStandAlone	file:
tcpConfig	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/WebSocketServer.cs	/^        readonly TcpConfig tcpConfig;$/;"	f	class:Mirror.SimpleWeb.WebSocketServer	file:
templatePinStates	ProjectSettings/SceneTemplateSettings.json	/^    "templatePinStates": [],$/;"	a
time	Assets/Mirror/Runtime/NetworkTime.cs	/^        public static double time => LocalTime() - _offset.Value;$/;"	f	class:Mirror.NetworkTime
time	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public float time;$/;"	f	struct:Mirror.QueuedMessage
timeSd	Assets/Mirror/Runtime/NetworkTime.cs	/^        public static double timeSd => timeStandardDeviation;$/;"	f	class:Mirror.NetworkTime
timeStamp	Assets/Mirror/Components/Experimental/NetworkTransformBase.cs	/^            public float timeStamp;$/;"	f	struct:Mirror.Experimental.NetworkTransformBase.DataPoint
timeStamp	Assets/Mirror/Components/NetworkTransformBase.cs	/^            public float timeStamp;$/;"	f	class:Mirror.NetworkTransformBase.DataPoint
timeStandardDeviation	Assets/Mirror/Runtime/NetworkTime.cs	/^        public static double timeStandardDeviation => Math.Sqrt(timeVariance);$/;"	f	class:Mirror.NetworkTime
timeVar	Assets/Mirror/Runtime/NetworkTime.cs	/^        public static double timeVar => timeVariance;$/;"	f	class:Mirror.NetworkTime
timeVariance	Assets/Mirror/Runtime/NetworkTime.cs	/^        public static double timeVariance => _offset.Var;$/;"	f	class:Mirror.NetworkTime
timeout	Assets/Mirror/Authenticators/TimeoutAuthenticator.cs	/^        public float timeout = 60;$/;"	f	class:Mirror.Authenticators.TimeoutAuthenticator
timestamp	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^            internal uint timestamp;$/;"	f	struct:kcp2k.Kcp.AckItem
title	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^        GUIContent title;$/;"	f	class:Mirror.NetworkInformationPreview	file:
toggleButton	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchGUI.cs	/^        public Toggle toggleButton;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchGUI
toggleGroup	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        public ToggleGroup toggleGroup;$/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController
transitionHash	Assets/Mirror/Components/NetworkAnimator.cs	/^        int[] transitionHash;$/;"	f	class:Mirror.NetworkAnimator	file:
transport	Assets/Mirror/Components/Discovery/NetworkDiscovery.cs	/^        public Transport transport;$/;"	f	class:Mirror.Discovery.NetworkDiscovery
transport	Assets/Mirror/Runtime/NetworkManager.cs	/^        protected Transport transport;$/;"	f	class:Mirror.NetworkManager
transports	Assets/Mirror/Runtime/Transport/FallbackTransport.cs	/^        public Transport[] transports;$/;"	f	class:Mirror.FallbackTransport
transports	Assets/Mirror/Runtime/Transport/MultiplexTransport.cs	/^        public Transport[] transports;$/;"	f	class:Mirror.MultiplexTransport
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.0
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.1
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.10
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.11
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.12
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.13
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.14
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.15
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.2
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.3
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.4
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.5
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.6
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.7
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.8
trimmed	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"trimmed": false,$/;"	b	object:frames.9
ts	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        internal uint ts;       \/\/ timestamp$/;"	f	class:kcp2k.Segment	file:
ts_flush	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint ts_flush;$/;"	f	class:kcp2k.Kcp	file:
ts_probe	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint ts_probe;      \/\/ timestamp probe$/;"	f	class:kcp2k.Kcp	file:
turn	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        public float turn;$/;"	f	class:Mirror.Examples.Additive.PlayerController
turn	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        public float turn;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController
turn	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        public float turn;$/;"	f	class:Mirror.Examples.NetworkRoom.PlayerController
turnSensitivity	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        public float turnSensitivity = 5f;$/;"	f	class:Mirror.Examples.Additive.PlayerController
turnSensitivity	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        public float turnSensitivity = 5f;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController
turnSensitivity	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        public float turnSensitivity = 5f;$/;"	f	class:Mirror.Examples.NetworkRoom.PlayerController
turnSpeed	Assets/Mirror/Examples/AdditiveScenes/Scripts/ShootingTankBehaviour.cs	/^        public float turnSpeed = 0.1f;$/;"	f	class:Mirror.Examples.Additive.ShootingTankBehaviour
type	Assets/Mirror/Components/GUIConsole.cs	/^        public LogType type;$/;"	f	struct:Mirror.LogEntry
type	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Message.cs	/^        public readonly EventType type;$/;"	f	struct:Mirror.SimpleWeb.Message
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEditor.Animations.AnimatorController",$/;"	s	object:dependencyTypeInfos.1
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEditor.Audio.AudioMixerController",$/;"	s	object:dependencyTypeInfos.3
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEditor.LightingDataAsset",$/;"	s	object:dependencyTypeInfos.7
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEditor.MonoScript",$/;"	s	object:dependencyTypeInfos.10
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEditor.SceneAsset",$/;"	s	object:dependencyTypeInfos.16
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.AnimationClip",$/;"	s	object:dependencyTypeInfos.0
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.AnimatorOverrideController",$/;"	s	object:dependencyTypeInfos.2
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.ComputeShader",$/;"	s	object:dependencyTypeInfos.4
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.Cubemap",$/;"	s	object:dependencyTypeInfos.5
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.GameObject",$/;"	s	object:dependencyTypeInfos.6
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.LightingSettings",$/;"	s	object:dependencyTypeInfos.8
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.Material",$/;"	s	object:dependencyTypeInfos.9
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.PhysicMaterial",$/;"	s	object:dependencyTypeInfos.11
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.PhysicsMaterial2D",$/;"	s	object:dependencyTypeInfos.12
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.Rendering.PostProcessing.PostProcessProfile",$/;"	s	object:dependencyTypeInfos.13
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.Rendering.PostProcessing.PostProcessResources",$/;"	s	object:dependencyTypeInfos.14
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.Rendering.VolumeProfile",$/;"	s	object:dependencyTypeInfos.15
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.Shader",$/;"	s	object:dependencyTypeInfos.17
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.ShaderVariantCollection",$/;"	s	object:dependencyTypeInfos.18
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.Texture",$/;"	s	object:dependencyTypeInfos.19
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.Texture2D",$/;"	s	object:dependencyTypeInfos.20
type	ProjectSettings/SceneTemplateSettings.json	/^            "type": "UnityEngine.Timeline.TimelineAsset",$/;"	s	object:dependencyTypeInfos.21
type	ProjectSettings/SceneTemplateSettings.json	/^        "type": "<default_scene_template_dependencies>",$/;"	s	object:defaultDependencyTypeInfo
una	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        internal uint una;$/;"	f	class:kcp2k.Segment	file:
unity	Assets/ParrelSync/ParrelSync/package.json	/^    "unity": "2018.4",$/;"	s
unreliableClientToServer	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        List<QueuedMessage> unreliableClientToServer = new List<QueuedMessage>();$/;"	f	class:Mirror.LatencySimulation	file:
unreliableLatency	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public float unreliableLatency;$/;"	f	class:Mirror.LatencySimulation
unreliableLoss	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        [Range(0, 1)] public float unreliableLoss;$/;"	f	class:Mirror.LatencySimulation
unreliableScramble	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        [Range(0, 1)] public float unreliableScramble;$/;"	f	class:Mirror.LatencySimulation
unreliableServerToClient	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        List<QueuedMessage> unreliableServerToClient = new List<QueuedMessage>();$/;"	f	class:Mirror.LatencySimulation	file:
unspawnHandlers	Assets/Mirror/Runtime/NetworkClient.cs	/^        internal static readonly Dictionary<Guid, UnSpawnDelegate> unspawnHandlers =$/;"	f	class:Mirror.NetworkClient	file:
updateNewName	Assets/ParrelSync/ParrelSync/Editor/Project.cs	/^        public void updateNewName(string newName)$/;"	m	class:ParrelSync.Project
updateServer	Assets/Mirror/Cloud/ListServer/ListServerServerApi.cs	/^        IEnumerator updateServer(PartialServerJson server)$/;"	m	class:Mirror.Cloud.ListServerService.ListServerServerApi	file:
updated	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal bool updated;$/;"	f	class:kcp2k.Kcp	file:
uri	Assets/Mirror/Components/Discovery/ServerResponse.cs	/^        public Uri uri;$/;"	f	struct:Mirror.Discovery.ServerResponse
url	Packages/packages-lock.json	/^      "url": "https:\/\/packages.unity.com"$/;"	s	object:dependencies.com.unity.collab-proxy
url	Packages/packages-lock.json	/^      "url": "https:\/\/packages.unity.com"$/;"	s	object:dependencies.com.unity.ext.nunit
url	Packages/packages-lock.json	/^      "url": "https:\/\/packages.unity.com"$/;"	s	object:dependencies.com.unity.ide.rider
url	Packages/packages-lock.json	/^      "url": "https:\/\/packages.unity.com"$/;"	s	object:dependencies.com.unity.ide.visualstudio
url	Packages/packages-lock.json	/^      "url": "https:\/\/packages.unity.com"$/;"	s	object:dependencies.com.unity.ide.vscode
url	Packages/packages-lock.json	/^      "url": "https:\/\/packages.unity.com"$/;"	s	object:dependencies.com.unity.test-framework
url	Packages/packages-lock.json	/^      "url": "https:\/\/packages.unity.com"$/;"	s	object:dependencies.com.unity.textmeshpro
url	Packages/packages-lock.json	/^      "url": "https:\/\/packages.unity.com"$/;"	s	object:dependencies.com.unity.timeline
useGravity	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^            public bool useGravity;$/;"	f	class:Mirror.Experimental.NetworkRigidbody.ClientSyncState
useGravity	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        bool useGravity;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.0
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.1
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.10
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.11
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.12
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.13
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.14
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.15
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.16
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.17
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.18
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.19
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.2
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.20
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.21
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.3
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.4
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.5
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.6
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.7
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.8
userAdded	ProjectSettings/SceneTemplateSettings.json	/^            "userAdded": false,$/;"	b	object:dependencyTypeInfos.9
userAdded	ProjectSettings/SceneTemplateSettings.json	/^        "userAdded": false,$/;"	b	object:defaultDependencyTypeInfo
username	Assets/Mirror/Authenticators/BasicAuthenticator.cs	/^        public string username;$/;"	f	class:Mirror.Authenticators.BasicAuthenticator
usernameInputField	Assets/Project/Scripts/UI/LoginManager.cs	/^    [SerializeField] private TMP_InputField usernameInputField;$/;"	f	class:LoginManager	file:
value	Assets/Mirror/Cloud/ListServer/ListServerJson.cs	/^        public string value;$/;"	f	struct:Mirror.Cloud.ListServerService.KeyValue
value	Assets/Mirror/Editor/NetworkInformationPreview.cs	/^            public GUIContent value;$/;"	f	struct:Mirror.NetworkInformationPreview.NetworkIdentityInfo
valueCache	Assets/ParrelSync/ParrelSync/Editor/Preferences.cs	/^        private bool? valueCache = null;$/;"	f	class:ParrelSync.BoolPreference	file:
velocity	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^            public Vector3 velocity;$/;"	f	class:Mirror.Experimental.NetworkRigidbody.ClientSyncState
velocity	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        Vector3 velocity;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
velocity	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^            public Vector2 velocity;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D.ClientSyncState
velocity	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        Vector2 velocity;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
velocity	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        public Vector3 velocity;$/;"	f	class:Mirror.Examples.Additive.PlayerController
velocity	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        public Vector3 velocity;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController
velocity	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        public Vector3 velocity;$/;"	f	class:Mirror.Examples.NetworkRoom.PlayerController
velocitySensitivity	Assets/Mirror/Components/Experimental/NetworkRigidbody.cs	/^        [SerializeField] float velocitySensitivity = 0.1f;$/;"	f	class:Mirror.Experimental.NetworkRigidbody	file:
velocitySensitivity	Assets/Mirror/Components/Experimental/NetworkRigidbody2D.cs	/^        [SerializeField] float velocitySensitivity = 0.1f;$/;"	f	class:Mirror.Experimental.NetworkRigidbody2D	file:
verbose	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^            verbose = 4,$/;"	e	enum:Mirror.SimpleWeb.Log.Levels	file:
version	Assets/ParrelSync/ParrelSync/package.json	/^    "version": "1.5.0",$/;"	s
version	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"version": "1.0",$/;"	s	object:meta
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.ai
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.androidjni
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.animation
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.assetbundle
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.audio
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.cloth
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.director
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.imageconversion
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.imgui
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.jsonserialize
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.particlesystem
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.physics
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.physics2d
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.screencapture
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.subsystems
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.terrain
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.terrainphysics
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.tilemap
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.ui
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.uielements
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.uielementsnative
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.umbra
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.unityanalytics
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.unitywebrequest
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.unitywebrequestassetbundle
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.unitywebrequestaudio
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.unitywebrequesttexture
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.unitywebrequestwww
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.vehicles
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.video
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.vr
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.wind
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.modules.xr
version	Packages/packages-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.com.unity.ugui
version	Packages/packages-lock.json	/^      "version": "1.0.6",$/;"	s	object:dependencies.com.unity.ext.nunit
version	Packages/packages-lock.json	/^      "version": "1.1.24",$/;"	s	object:dependencies.com.unity.test-framework
version	Packages/packages-lock.json	/^      "version": "1.2.3",$/;"	s	object:dependencies.com.unity.ide.vscode
version	Packages/packages-lock.json	/^      "version": "1.3.9",$/;"	s	object:dependencies.com.unity.collab-proxy
version	Packages/packages-lock.json	/^      "version": "1.4.7",$/;"	s	object:dependencies.com.unity.timeline
version	Packages/packages-lock.json	/^      "version": "2.0.7",$/;"	s	object:dependencies.com.unity.ide.rider
version	Packages/packages-lock.json	/^      "version": "2.0.7",$/;"	s	object:dependencies.com.unity.ide.visualstudio
version	Packages/packages-lock.json	/^      "version": "3.0.4",$/;"	s	object:dependencies.com.unity.textmeshpro
vertical	Assets/Mirror/Examples/AdditiveScenes/Scripts/PlayerController.cs	/^        public float vertical;$/;"	f	class:Mirror.Examples.Additive.PlayerController
vertical	Assets/Mirror/Examples/MultipleAdditiveScenes/Scripts/PlayerController.cs	/^        public float vertical;$/;"	f	class:Mirror.Examples.MultipleAdditiveScenes.PlayerController
vertical	Assets/Mirror/Examples/Room/Scripts/PlayerController.cs	/^        public float vertical;$/;"	f	class:Mirror.Examples.NetworkRoom.PlayerController
visRange	Assets/Mirror/Components/InterestManagement/Distance/DistanceInterestManagement.cs	/^        public int visRange = 10;$/;"	f	class:Mirror.DistanceInterestManagement
visRange	Assets/Mirror/Components/InterestManagement/SpatialHashing/SpatialHashingInterestManagement.cs	/^        public int visRange = 30;$/;"	f	class:Mirror.SpatialHashingInterestManagement
visRange	Assets/Mirror/Components/NetworkProximityChecker.cs	/^        public int visRange = 10;$/;"	f	class:Mirror.NetworkProximityChecker
visUpdateInterval	Assets/Mirror/Components/NetworkProximityChecker.cs	/^        public float visUpdateInterval = 1;$/;"	f	class:Mirror.NetworkProximityChecker
visibility	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public NetworkVisibility visibility$/;"	p	class:Mirror.NetworkIdentity
visibilityCache	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        NetworkVisibility visibilityCache;$/;"	f	class:Mirror.NetworkIdentity	file:
visible	Assets/Mirror/Components/GUIConsole.cs	/^        bool visible;$/;"	f	class:Mirror.GUIConsole	file:
visible	Assets/Mirror/Editor/NetworkBehaviourInspector.cs	/^            public bool visible;$/;"	f	class:Mirror.SyncListDrawer.SyncListField
visible	Assets/Mirror/Runtime/NetworkIdentity.cs	/^        public Visibility visible = Visibility.Default;$/;"	f	class:Mirror.NetworkIdentity
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.0.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":128,"w":128,"h":128},$/;"	n	object:frames.4.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":256,"w":128,"h":128},$/;"	n	object:frames.8.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":384,"w":128,"h":128},$/;"	n	object:frames.12.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":0,"w":128,"h":128},$/;"	n	object:frames.1.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":128,"w":128,"h":128},$/;"	n	object:frames.5.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":256,"w":128,"h":128},$/;"	n	object:frames.9.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":384,"w":128,"h":128},$/;"	n	object:frames.13.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":0,"w":128,"h":128},$/;"	n	object:frames.2.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":128,"w":128,"h":128},$/;"	n	object:frames.6.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":256,"w":128,"h":128},$/;"	n	object:frames.10.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":384,"w":128,"h":128},$/;"	n	object:frames.14.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":0,"w":128,"h":128},$/;"	n	object:frames.3.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":128,"w":128,"h":128},$/;"	n	object:frames.7.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":256,"w":128,"h":128},$/;"	n	object:frames.11.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":384,"w":128,"h":128},$/;"	n	object:frames.15.frame
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"size": {"w":512,"h":512},$/;"	n	object:meta.size
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.0.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.1.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.10.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.11.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.12.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.13.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.14.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.15.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.2.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.3.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.4.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.5.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.6.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.7.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.8.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"sourceSize": {"w":128,"h":128},$/;"	n	object:frames.9.sourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.0.spriteSourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.1.spriteSourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.10.spriteSourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.11.spriteSourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.12.spriteSourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.13.spriteSourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.14.spriteSourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.15.spriteSourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.2.spriteSourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.3.spriteSourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.4.spriteSourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.5.spriteSourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.6.spriteSourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.7.spriteSourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.8.spriteSourceSize
w	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.9.spriteSourceSize
waitBeforeSend	Assets/Mirror/Runtime/Transport/SimpleWebTransport/SimpleWebTransport.cs	/^        public bool waitBeforeSend = false;$/;"	f	class:Mirror.SimpleWeb.SimpleWebTransport
waitingConnections	Assets/Mirror/Examples/MultipleMatches/Scripts/CanvasController.cs	/^        internal static readonly List<NetworkConnection> waitingConnections = new List<NetworkCo/;"	f	class:Mirror.Examples.MultipleMatch.CanvasController	file:
warn	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Common/Log.cs	/^            warn = 2,$/;"	e	enum:Mirror.SimpleWeb.Log.Levels	file:
width	Assets/Mirror/Components/NetworkPingDisplay.cs	/^        int width = 150;$/;"	f	class:Mirror.NetworkPingDisplay	file:
winCountLocal	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public Text winCountLocal;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchController
winCountOpponent	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchController.cs	/^        public Text winCountOpponent;$/;"	f	class:Mirror.Examples.MultipleMatch.MatchController
wins	Assets/Mirror/Examples/MultipleMatches/Scripts/MatchMessages.cs	/^        public int wins;$/;"	f	struct:Mirror.Examples.MultipleMatch.MatchPlayerData
wnd	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        internal uint wnd;      \/\/ window size that the receive can currently receive$/;"	f	class:kcp2k.Segment	file:
wrap	Assets/Mirror/Runtime/Transport/LatencySimulation.cs	/^        public Transport wrap;$/;"	f	class:Mirror.LatencySimulation
write	Assets/Mirror/Runtime/NetworkWriter.cs	/^        public static Action<NetworkWriter, T> write;$/;"	f	class:Mirror.Writer
writeFuncs	Assets/Mirror/Editor/Weaver/Writers.cs	/^        static Dictionary<TypeReference, MethodReference> writeFuncs;$/;"	f	class:Mirror.Weaver.Writers	file:
writer.Write	Assets/Mirror/Runtime/MessagePacking.cs	/^            writer.Write(message);$/;"	m	struct:Mirror.MessagePacking.NetworkMessage
writer.WriteUInt16	Assets/Mirror/Runtime/MessagePacking.cs	/^            writer.WriteUInt16((ushort)msgType);$/;"	m	struct:Mirror.MessagePacking.NetworkMessage
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.0.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":128,"w":128,"h":128},$/;"	n	object:frames.4.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":256,"w":128,"h":128},$/;"	n	object:frames.8.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":384,"w":128,"h":128},$/;"	n	object:frames.12.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":0,"w":128,"h":128},$/;"	n	object:frames.1.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":128,"w":128,"h":128},$/;"	n	object:frames.5.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":256,"w":128,"h":128},$/;"	n	object:frames.9.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":384,"w":128,"h":128},$/;"	n	object:frames.13.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":0,"w":128,"h":128},$/;"	n	object:frames.2.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":128,"w":128,"h":128},$/;"	n	object:frames.6.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":256,"w":128,"h":128},$/;"	n	object:frames.10.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":384,"w":128,"h":128},$/;"	n	object:frames.14.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":0,"w":128,"h":128},$/;"	n	object:frames.3.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":128,"w":128,"h":128},$/;"	n	object:frames.7.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":256,"w":128,"h":128},$/;"	n	object:frames.11.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":384,"w":128,"h":128},$/;"	n	object:frames.15.frame
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.0.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.1.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.10.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.11.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.12.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.13.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.14.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.15.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.2.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.3.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.4.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.5.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.6.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.7.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.8.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.9.pivot
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.0.spriteSourceSize
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.1.spriteSourceSize
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.10.spriteSourceSize
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.11.spriteSourceSize
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.12.spriteSourceSize
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.13.spriteSourceSize
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.14.spriteSourceSize
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.15.spriteSourceSize
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.2.spriteSourceSize
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.3.spriteSourceSize
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.4.spriteSourceSize
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.5.spriteSourceSize
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.6.spriteSourceSize
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.7.spriteSourceSize
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.8.spriteSourceSize
x	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.9.spriteSourceSize
xmit	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Kcp.cs	/^        internal uint xmit;$/;"	f	class:kcp2k.Kcp	file:
xmit	Assets/Mirror/Runtime/Transport/KCP/kcp2k/kcp/Segment.cs	/^        internal uint xmit;$/;"	f	class:kcp2k.Segment	file:
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.0.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":128,"w":128,"h":128},$/;"	n	object:frames.4.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":256,"w":128,"h":128},$/;"	n	object:frames.8.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":0,"y":384,"w":128,"h":128},$/;"	n	object:frames.12.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":0,"w":128,"h":128},$/;"	n	object:frames.1.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":128,"w":128,"h":128},$/;"	n	object:frames.5.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":256,"w":128,"h":128},$/;"	n	object:frames.9.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":128,"y":384,"w":128,"h":128},$/;"	n	object:frames.13.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":0,"w":128,"h":128},$/;"	n	object:frames.2.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":128,"w":128,"h":128},$/;"	n	object:frames.6.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":256,"w":128,"h":128},$/;"	n	object:frames.10.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":256,"y":384,"w":128,"h":128},$/;"	n	object:frames.14.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":0,"w":128,"h":128},$/;"	n	object:frames.3.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":128,"w":128,"h":128},$/;"	n	object:frames.7.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":256,"w":128,"h":128},$/;"	n	object:frames.11.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"frame": {"x":384,"y":384,"w":128,"h":128},$/;"	n	object:frames.15.frame
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.0.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.1.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.10.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.11.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.12.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.13.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.14.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.15.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.2.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.3.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.4.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.5.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.6.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.7.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.8.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"pivot": {"x":0.5,"y":0.5}$/;"	n	object:frames.9.pivot
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.0.spriteSourceSize
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.1.spriteSourceSize
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.10.spriteSourceSize
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.11.spriteSourceSize
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.12.spriteSourceSize
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.13.spriteSourceSize
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.14.spriteSourceSize
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.15.spriteSourceSize
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.2.spriteSourceSize
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.3.spriteSourceSize
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.4.spriteSourceSize
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.5.spriteSourceSize
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.6.spriteSourceSize
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.7.spriteSourceSize
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.8.spriteSourceSize
y	Assets/TextMesh Pro/Sprites/EmojiOne.json	/^	"spriteSourceSize": {"x":0,"y":0,"w":128,"h":128},$/;"	n	object:frames.9.spriteSourceSize
~ServerHandshake	Assets/Mirror/Runtime/Transport/SimpleWebTransport/Server/ServerHandshake.cs	/^        ~ServerHandshake()$/;"	m	class:Mirror.SimpleWeb.ServerHandshake	file:
